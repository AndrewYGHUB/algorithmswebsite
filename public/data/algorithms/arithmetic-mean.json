{
  "slug": "arithmetic-mean",
  "name": "Arithmetic Mean",
  "categories": [
    "math",
    "series"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/series/arithmetic.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/series/arithmetic.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nArithmetic mean\nReference: https://en.wikipedia.org/wiki/Arithmetic_mean\n\nArithmetic series\nReference: https://en.wikipedia.org/wiki/Arithmetic_series\n(The URL above will redirect you to arithmetic progression)\n&quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">is_arithmetic_series</span>(<span class=\"hljs-params\">series: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    checking whether the input series is arithmetic series or not\n    &gt;&gt;&gt; is_arithmetic_series([2, 4, 6])\n    True\n    &gt;&gt;&gt; is_arithmetic_series([3, 6, 12, 24])\n    False\n    &gt;&gt;&gt; is_arithmetic_series([1, 2, 3])\n    True\n    &gt;&gt;&gt; is_arithmetic_series(4)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input series is not valid, valid series - [2, 4, 6]\n    &gt;&gt;&gt; is_arithmetic_series([])\n    Traceback (most recent call last):\n        ...\n    ValueError: Input list must be a non empty list\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(series, <span class=\"hljs-built_in\">list</span>):\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input series is not valid, valid series - [2, 4, 6]&quot;</span>)\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(series) == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input list must be a non empty list&quot;</span>)\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(series) == <span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span>\n    common_diff = series[<span class=\"hljs-number\">1</span>] - series[<span class=\"hljs-number\">0</span>]\n    <span class=\"hljs-keyword\">for</span> index <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(series) - <span class=\"hljs-number\">1</span>):\n        <span class=\"hljs-keyword\">if</span> series[index + <span class=\"hljs-number\">1</span>] - series[index] != common_diff:\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">arithmetic_mean</span>(<span class=\"hljs-params\">series: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    return the arithmetic mean of series\n\n    &gt;&gt;&gt; arithmetic_mean([2, 4, 6])\n    4.0\n    &gt;&gt;&gt; arithmetic_mean([3, 6, 9, 12])\n    7.5\n    &gt;&gt;&gt; arithmetic_mean(4)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input series is not valid, valid series - [2, 4, 6]\n    &gt;&gt;&gt; arithmetic_mean([4, 8, 1])\n    4.333333333333333\n    &gt;&gt;&gt; arithmetic_mean([1, 2, 3])\n    2.0\n    &gt;&gt;&gt; arithmetic_mean([])\n    Traceback (most recent call last):\n        ...\n    ValueError: Input list must be a non empty list\n\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(series, <span class=\"hljs-built_in\">list</span>):\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input series is not valid, valid series - [2, 4, 6]&quot;</span>)\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(series) == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input list must be a non empty list&quot;</span>)\n    answer = <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-keyword\">for</span> val <span class=\"hljs-keyword\">in</span> series:\n        answer += val\n    <span class=\"hljs-keyword\">return</span> answer / <span class=\"hljs-built_in\">len</span>(series)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n"
    },
    "go": {
      "dir": "math/binary/arithmeticmean.go",
      "url": "https://github.com/TheAlgorithms/go/tree/master/math/binary/arithmeticmean.go",
      "code": "<span class=\"hljs-comment\">// arithmeticmean.go</span>\n<span class=\"hljs-comment\">// description: Arithmetic mean</span>\n<span class=\"hljs-comment\">// details:</span>\n<span class=\"hljs-comment\">// The most common type of average is the arithmetic mean. If n numbers are given, each number denoted by ai (where i = 1,2, ..., n), the arithmetic mean is the sum of the as divided by n or - [Arithmetic mean](https://en.wikipedia.org/wiki/Average#Arithmetic_mean)</span>\n<span class=\"hljs-comment\">// author(s) [red_byte](https://github.com/i-redbyte)</span>\n<span class=\"hljs-comment\">// see arithmeticmean_test.go</span>\n\n<span class=\"hljs-comment\">// Package binary describes algorithms that use binary operations for different calculations.</span>\n<span class=\"hljs-keyword\">package</span> binary\n\n<span class=\"hljs-comment\">// MeanUsingAndXor This function finds arithmetic mean using &quot;AND&quot; and &quot;XOR&quot; operations</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">MeanUsingAndXor</span><span class=\"hljs-params\">(a <span class=\"hljs-type\">int</span>, b <span class=\"hljs-type\">int</span>)</span></span> <span class=\"hljs-type\">int</span> {\n\t<span class=\"hljs-keyword\">return</span> ((a ^ b) &gt;&gt; <span class=\"hljs-number\">1</span>) + (a &amp; b)\n}\n\n<span class=\"hljs-comment\">// MeanUsingRightShift This function finds arithmetic mean using right shift</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">MeanUsingRightShift</span><span class=\"hljs-params\">(a <span class=\"hljs-type\">int</span>, b <span class=\"hljs-type\">int</span>)</span></span> <span class=\"hljs-type\">int</span> {\n\t<span class=\"hljs-keyword\">return</span> (a + b) &gt;&gt; <span class=\"hljs-number\">1</span>\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Ayush Bisht",
      "email": "61404154+ayushbisht2001@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ilya Sokolov",
      "email": "developer.sokolov@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}