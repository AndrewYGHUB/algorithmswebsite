{
  "slug": "array-keys-sort",
  "name": "Array Keys Sort",
  "categories": [
    "sorts"
  ],
  "body": {},
  "implementations": {
    "php": {
      "dir": "sorting/arrayKeysSort.php",
      "url": "https://github.com/TheAlgorithms/php/tree/master/sorting/arrayKeysSort.php",
      "code": "<span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-comment\">/**\n *  Sort an &quot;Array of objects&quot; or &quot;Array of arrays&quot; by keys\n */</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">arrayKeysSort</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">ORDER_ASC</span> = <span class=\"hljs-string\">&#x27;ASC&#x27;</span>;\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">ORDER_DESC</span> = <span class=\"hljs-string\">&#x27;DESC&#x27;</span>;\n\n    <span class=\"hljs-comment\">/**\n     * <span class=\"hljs-doctag\">@param</span> $collection\n     * <span class=\"hljs-doctag\">@param</span> array $keys\n     * <span class=\"hljs-doctag\">@param</span> string $order\n     * <span class=\"hljs-doctag\">@param</span> bool $isCaseSensitive\n     * <span class=\"hljs-doctag\">@return</span> mixed\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">sort</span>(<span class=\"hljs-params\">\n        <span class=\"hljs-variable\">$collection</span>,\n        <span class=\"hljs-keyword\">array</span> <span class=\"hljs-variable\">$keys</span>,\n        <span class=\"hljs-keyword\">string</span> <span class=\"hljs-variable\">$order</span> = <span class=\"hljs-built_in\">self</span>::<span class=\"hljs-variable constant_\">ORDER_ASC</span>,\n        <span class=\"hljs-keyword\">bool</span> <span class=\"hljs-variable\">$isCaseSensitive</span> = <span class=\"hljs-literal\">false</span>\n    </span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-variable\">$collection</span>) &amp;&amp; !<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-variable\">$keys</span>)) {\n            <span class=\"hljs-keyword\">try</span> {\n                <span class=\"hljs-title function_ invoke__\">usort</span>(\n                    <span class=\"hljs-variable\">$collection</span>,\n                    function (<span class=\"hljs-variable\">$a</span>, <span class=\"hljs-variable\">$b</span>) <span class=\"hljs-keyword\">use</span> ($<span class=\"hljs-title\">keys</span>, $<span class=\"hljs-title\">order</span>, $<span class=\"hljs-title\">isCaseSensitive</span>) {\n                        $<span class=\"hljs-title\">pos</span> = 0;\n                        <span class=\"hljs-keyword\">do</span> {\n                            <span class=\"hljs-variable\">$key</span> = <span class=\"hljs-variable\">$keys</span>[<span class=\"hljs-variable\">$pos</span>];\n                            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">is_array</span>(<span class=\"hljs-variable\">$a</span>)) {\n                                <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$a</span>[<span class=\"hljs-variable\">$key</span>]) || !<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$b</span>[<span class=\"hljs-variable\">$key</span>])) {\n                                    <span class=\"hljs-variable\">$errorMsg</span> = <span class=\"hljs-string\">&#x27;The key &quot;&#x27;</span> . <span class=\"hljs-variable\">$key</span>\n                                        . <span class=\"hljs-string\">&#x27;&quot; does not exist in the collection&#x27;</span>;\n                                    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Exception</span>(<span class=\"hljs-variable\">$errorMsg</span>);\n                                }\n                                <span class=\"hljs-variable\">$item1</span> = !<span class=\"hljs-variable\">$isCaseSensitive</span>\n                                    ? <span class=\"hljs-title function_ invoke__\">strtolower</span>(<span class=\"hljs-variable\">$a</span>[<span class=\"hljs-variable\">$key</span>]) : <span class=\"hljs-variable\">$a</span>[<span class=\"hljs-variable\">$key</span>];\n                                <span class=\"hljs-variable\">$item2</span> = !<span class=\"hljs-variable\">$isCaseSensitive</span>\n                                    ? <span class=\"hljs-title function_ invoke__\">strtolower</span>(<span class=\"hljs-variable\">$b</span>[<span class=\"hljs-variable\">$key</span>]) : <span class=\"hljs-variable\">$b</span>[<span class=\"hljs-variable\">$key</span>];\n                            } <span class=\"hljs-keyword\">else</span> {\n                                <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$a</span>-&gt;<span class=\"hljs-variable\">$key</span>) || !<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$b</span>-&gt;<span class=\"hljs-variable\">$key</span>)) {\n                                    <span class=\"hljs-variable\">$errorMsg</span> = <span class=\"hljs-string\">&#x27;The key &quot;&#x27;</span> . <span class=\"hljs-variable\">$key</span>\n                                        . <span class=\"hljs-string\">&#x27;&quot; does not exist in the collection&#x27;</span>;\n                                    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Exception</span>(<span class=\"hljs-variable\">$errorMsg</span>);\n                                }\n                                <span class=\"hljs-variable\">$item1</span> = !<span class=\"hljs-variable\">$isCaseSensitive</span>\n                                    ? <span class=\"hljs-title function_ invoke__\">strtolower</span>(<span class=\"hljs-variable\">$a</span>-&gt;<span class=\"hljs-variable\">$key</span>) : <span class=\"hljs-variable\">$a</span>-&gt;<span class=\"hljs-variable\">$key</span>;\n                                <span class=\"hljs-variable\">$item2</span> = !<span class=\"hljs-variable\">$isCaseSensitive</span>\n                                    ? <span class=\"hljs-title function_ invoke__\">strtolower</span>(<span class=\"hljs-variable\">$b</span>-&gt;<span class=\"hljs-variable\">$key</span>) : <span class=\"hljs-variable\">$b</span>-&gt;<span class=\"hljs-variable\">$key</span>;\n                            }\n                        } <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-variable\">$item1</span> === <span class=\"hljs-variable\">$item2</span> &amp;&amp; !<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-variable\">$keys</span>[++<span class=\"hljs-variable\">$pos</span>]));\n\n                        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$item1</span> === <span class=\"hljs-variable\">$item2</span>) {\n                            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n                        } <span class=\"hljs-keyword\">elseif</span> (<span class=\"hljs-variable\">$order</span> === <span class=\"hljs-built_in\">self</span>::<span class=\"hljs-variable constant_\">ORDER_ASC</span>) {\n                            <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-variable\">$item1</span> &lt; <span class=\"hljs-variable\">$item2</span>) ? -<span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">1</span>;\n                        } <span class=\"hljs-keyword\">else</span> {\n                            <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-variable\">$item1</span> &gt; <span class=\"hljs-variable\">$item2</span>) ? -<span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">1</span>;\n                        }\n                    }\n                );\n            } <span class=\"hljs-keyword\">catch</span> (<span class=\"hljs-built_in\">Exception</span> <span class=\"hljs-variable\">$e</span>) {\n                <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$e</span>-&gt;<span class=\"hljs-title function_ invoke__\">getMessage</span>();\n                <span class=\"hljs-keyword\">die</span>();\n            }\n        }\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$collection</span>;\n    }\n}"
    }
  },
  "contributors": [
    {
      "name": "Alejandro",
      "email": "47539231+ale94lko@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}