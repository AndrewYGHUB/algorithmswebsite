{
  "slug": "binary-equivalent",
  "name": "Binary Equivalent",
  "categories": [
    "recursive"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Recursive/BinaryEquivalent.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Recursive/BinaryEquivalent.js",
      "code": "<span class=\"hljs-comment\">/*\n * Problem Statement: Given a positive number `num`, find it&#x27;s binary equivalent using recursion\n *\n * What is Binary Equivalent?\n * - In binary number system, a number is represented in terms of 0s and 1s,\n *   for example:\n *    - Binary Of 2 = 10\n *    - Binary of 3 = 11\n *    - Binary of 4 = 100\n *\n * Reference on how to find Binary Equivalent\n * - https://byjus.com/maths/decimal-to-binary/\n *\n */</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">binaryEquivalent</span> = (<span class=\"hljs-params\">num</span>) =&gt; {\n  <span class=\"hljs-keyword\">if</span> (num === <span class=\"hljs-number\">0</span> || num === <span class=\"hljs-number\">1</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">String</span>(num)\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">binaryEquivalent</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(num / <span class=\"hljs-number\">2</span>)) + <span class=\"hljs-title class_\">String</span>(num % <span class=\"hljs-number\">2</span>)\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Eric Lavault",
      "email": "39483232+lvlte@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Chiranjeev",
      "email": "6258860@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}