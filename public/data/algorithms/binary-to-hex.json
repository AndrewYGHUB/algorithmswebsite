{
  "slug": "binary-to-hex",
  "name": "Binary To Hex",
  "categories": [
    "conversions"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Conversions/BinaryToHex.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Conversions/BinaryToHex.js",
      "code": "<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">pad</span> = (<span class=\"hljs-params\">num, padlen</span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> pad = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span>(<span class=\"hljs-number\">1</span> + padlen).<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">return</span> (pad + num).<span class=\"hljs-title function_\">slice</span>(-pad.<span class=\"hljs-property\">length</span>)\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">hexLookup</span> = (<span class=\"hljs-params\">bin</span>) =&gt; {\n  <span class=\"hljs-keyword\">let</span> binary = bin\n  <span class=\"hljs-keyword\">if</span> (binary.<span class=\"hljs-property\">length</span> &lt; <span class=\"hljs-number\">4</span>) {\n    binary = <span class=\"hljs-title function_\">pad</span>(binary, <span class=\"hljs-number\">4</span>)\n  }\n  <span class=\"hljs-keyword\">switch</span> (binary) {\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;0000&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;0&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;0001&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;1&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;0010&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;2&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;0011&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;3&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;0100&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;4&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;0101&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;5&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;0110&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;6&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;0111&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;7&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;1000&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;8&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;1001&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;9&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;1010&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;A&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;1011&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;B&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;1100&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;C&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;1101&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;D&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;1110&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;E&#x27;</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;1111&#x27;</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;F&#x27;</span>\n  }\n}\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">binaryToHex</span> = (<span class=\"hljs-params\">binaryString</span>) =&gt; {\n  <span class=\"hljs-comment\">/*\n  Function for convertung Binary to Hex\n\n  1. The conversion will start from Least Significant Digit (LSB) to the Most Significant Bit (MSB).\n  2. We divide the bits into sections of 4-bits starting from LSB to MSB.\n  3. If the MSB get less than 4 bits, then we pad 0s to the front of it.\n\n  For Example:\n  Binary String = &#x27;1001101&#x27;\n\n  1. Divide it to 2 parts =&gt; [&#x27;100&#x27;, &#x27;1101&#x27;]\n  2. Pad 0s the MSB so it&#x27;ll be =&gt; [&#x27;0100&#x27;, &#x27;1101&#x27;]\n  3. Use the lookup table and merge them, therefore the result is 4D.\n\n  */</span>\n\n  <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-string\">&#x27;&#x27;</span>\n  binaryString = binaryString.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = binaryString.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>; i &gt;= <span class=\"hljs-number\">0</span>; i = i - <span class=\"hljs-number\">4</span>) {\n    <span class=\"hljs-keyword\">if</span> (i &gt;= <span class=\"hljs-number\">3</span>) {\n      result += <span class=\"hljs-title function_\">hexLookup</span>(binaryString.<span class=\"hljs-title function_\">slice</span>(i - <span class=\"hljs-number\">3</span>, i + <span class=\"hljs-number\">1</span>).<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>))\n    } <span class=\"hljs-keyword\">else</span> {\n      result += <span class=\"hljs-title function_\">hexLookup</span>(binaryString.<span class=\"hljs-title function_\">slice</span>(<span class=\"hljs-number\">0</span>, i + <span class=\"hljs-number\">1</span>).<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>))\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> result.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>).<span class=\"hljs-title function_\">reverse</span>().<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> binaryToHex\n"
    }
  },
  "contributors": [
    {
      "name": "Rak Laptudirm",
      "email": "raklaptudirm@gmail.com",
      "commits": 1
    },
    {
      "name": "ddhira123",
      "email": "dhana_dhira@apps.ipb.ac.id",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}