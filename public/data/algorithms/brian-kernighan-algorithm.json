{
  "slug": "brian-kernighan-algorithm",
  "name": "Brian Kernighan Algorithm",
  "categories": [
    "others"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/others/BrianKernighanAlgorithm.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/others/BrianKernighanAlgorithm.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.others;\n\n<span class=\"hljs-keyword\">import</span> java.util.Scanner;\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@author</span> Nishita Aggarwal\n * &lt;p&gt;\n * Brian Kernighan’s Algorithm\n * &lt;p&gt;\n * algorithm to count the number of set bits in a given number\n * &lt;p&gt;\n * Subtraction of 1 from a number toggles all the bits (from right to left) till\n * the rightmost set bit(including the rightmost set bit). So if we subtract a\n * number by 1 and do bitwise &amp; with itself i.e. (n &amp; (n-1)), we unset the\n * rightmost set bit.\n * &lt;p&gt;\n * If we do n &amp; (n-1) in a loop and count the no of times loop executes we get\n * the set bit count.\n * &lt;p&gt;\n * &lt;p&gt;\n * Time Complexity: O(logn)\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">BrianKernighanAlgorithm</span> {\n\n    <span class=\"hljs-comment\">/**\n     * <span class=\"hljs-doctag\">@param</span> num: number in which we count the set bits\n     * <span class=\"hljs-doctag\">@return</span> int: Number of set bits\n     */</span>\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">countSetBits</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> num)</span> {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">cnt</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">while</span> (num != <span class=\"hljs-number\">0</span>) {\n            num = num &amp; (num - <span class=\"hljs-number\">1</span>);\n            cnt++;\n        }\n        <span class=\"hljs-keyword\">return</span> cnt;\n    }\n\n    <span class=\"hljs-comment\">/**\n     * <span class=\"hljs-doctag\">@param</span> args : command line arguments\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String args[])</span> {\n        <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">sc</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">num</span> <span class=\"hljs-operator\">=</span> sc.nextInt();\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">setBitCount</span> <span class=\"hljs-operator\">=</span> countSetBits(num);\n        System.out.println(setBitCount);\n        sc.close();\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "varunu28",
      "email": "varun.u28@gmail.com",
      "commits": 1
    },
    {
      "name": "Aitor Fidalgo Sánchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 2
    },
    {
      "name": "Nishita Aggarwal",
      "email": "naggarwal97@gmail.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}