{
  "slug": "brute-force-knapsack",
  "name": "Brute Force Knapsack",
  "categories": [
    "dynamicprogramming"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/dynamicprogramming/BruteForceKnapsack.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/dynamicprogramming/BruteForceKnapsack.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.dynamicprogramming;\n\n<span class=\"hljs-comment\">/* A Naive recursive implementation\nof 0-1 Knapsack problem */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">BruteForceKnapsack</span> {\n\n    <span class=\"hljs-comment\">// A utility function that returns</span>\n    <span class=\"hljs-comment\">// maximum of two integers</span>\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">max</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a, <span class=\"hljs-type\">int</span> b)</span> {\n        <span class=\"hljs-keyword\">return</span> (a &gt; b) ? a : b;\n    }\n\n    <span class=\"hljs-comment\">// Returns the maximum value that</span>\n    <span class=\"hljs-comment\">// can be put in a knapsack of</span>\n    <span class=\"hljs-comment\">// capacity W</span>\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">knapSack</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> W, <span class=\"hljs-type\">int</span> wt[], <span class=\"hljs-type\">int</span> val[], <span class=\"hljs-type\">int</span> n)</span> {\n        <span class=\"hljs-comment\">// Base Case</span>\n        <span class=\"hljs-keyword\">if</span> (n == <span class=\"hljs-number\">0</span> || W == <span class=\"hljs-number\">0</span>) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n        }\n\n        <span class=\"hljs-comment\">// If weight of the nth item is</span>\n        <span class=\"hljs-comment\">// more than Knapsack capacity W,</span>\n        <span class=\"hljs-comment\">// then this item cannot be included</span>\n        <span class=\"hljs-comment\">// in the optimal solution</span>\n        <span class=\"hljs-keyword\">if</span> (wt[n - <span class=\"hljs-number\">1</span>] &gt; W) {\n            <span class=\"hljs-keyword\">return</span> knapSack(W, wt, val, n - <span class=\"hljs-number\">1</span>);\n        } <span class=\"hljs-comment\">// Return the maximum of two cases:</span>\n        <span class=\"hljs-comment\">// (1) nth item included</span>\n        <span class=\"hljs-comment\">// (2) not included</span>\n        <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">return</span> max(val[n - <span class=\"hljs-number\">1</span>] + knapSack(W - wt[n - <span class=\"hljs-number\">1</span>], wt, val, n - <span class=\"hljs-number\">1</span>), knapSack(W, wt, val, n - <span class=\"hljs-number\">1</span>));\n        }\n    }\n\n    <span class=\"hljs-comment\">// Driver code</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String args[])</span> {\n        <span class=\"hljs-type\">int</span> val[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">60</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">120</span>};\n        <span class=\"hljs-type\">int</span> wt[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>};\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">W</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">50</span>;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> val.length;\n        System.out.println(knapSack(W, wt, val, n));\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Rajat Jain",
      "email": "rajatjain.jain29@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}