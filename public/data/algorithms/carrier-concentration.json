{
  "slug": "carrier-concentration",
  "name": "Carrier Concentration",
  "categories": [
    "electronics"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "electronics/carrier_concentration.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/electronics/carrier_concentration.py",
      "code": "<span class=\"hljs-comment\"># https://en.wikipedia.org/wiki/Charge_carrier_density</span>\n<span class=\"hljs-comment\"># https://www.pveducation.org/pvcdrom/pn-junctions/equilibrium-carrier-concentration</span>\n<span class=\"hljs-comment\"># http://www.ece.utep.edu/courses/ee3329/ee3329/Studyguide/ToC/Fundamentals/Carriers/concentrations.html</span>\n\n<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">carrier_concentration</span>(<span class=\"hljs-params\">\n    electron_conc: <span class=\"hljs-built_in\">float</span>,\n    hole_conc: <span class=\"hljs-built_in\">float</span>,\n    intrinsic_conc: <span class=\"hljs-built_in\">float</span>,\n</span>) -&gt; <span class=\"hljs-built_in\">tuple</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    This function can calculate any one of the three -\n    1. Electron Concentration\n    2, Hole Concentration\n    3. Intrinsic Concentration\n    given the other two.\n    Examples -\n    &gt;&gt;&gt; carrier_concentration(electron_conc=25, hole_conc=100, intrinsic_conc=0)\n    (&#x27;intrinsic_conc&#x27;, 50.0)\n    &gt;&gt;&gt; carrier_concentration(electron_conc=0, hole_conc=1600, intrinsic_conc=200)\n    (&#x27;electron_conc&#x27;, 25.0)\n    &gt;&gt;&gt; carrier_concentration(electron_conc=1000, hole_conc=0, intrinsic_conc=1200)\n    (&#x27;hole_conc&#x27;, 1440.0)\n    &gt;&gt;&gt; carrier_concentration(electron_conc=1000, hole_conc=400, intrinsic_conc=1200)\n    Traceback (most recent call last):\n        File &quot;&lt;stdin&gt;&quot;, line 37, in &lt;module&gt;\n    ValueError: You cannot supply more or less than 2 values\n    &gt;&gt;&gt; carrier_concentration(electron_conc=-1000, hole_conc=0, intrinsic_conc=1200)\n    Traceback (most recent call last):\n        File &quot;&lt;stdin&gt;&quot;, line 40, in &lt;module&gt;\n    ValueError: Electron concentration cannot be negative in a semiconductor\n    &gt;&gt;&gt; carrier_concentration(electron_conc=0, hole_conc=-400, intrinsic_conc=1200)\n    Traceback (most recent call last):\n        File &quot;&lt;stdin&gt;&quot;, line 44, in &lt;module&gt;\n    ValueError: Hole concentration cannot be negative in a semiconductor\n    &gt;&gt;&gt; carrier_concentration(electron_conc=0, hole_conc=400, intrinsic_conc=-1200)\n    Traceback (most recent call last):\n        File &quot;&lt;stdin&gt;&quot;, line 48, in &lt;module&gt;\n    ValueError: Intrinsic concentration cannot be negative in a semiconductor\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-keyword\">if</span> (electron_conc, hole_conc, intrinsic_conc).count(<span class=\"hljs-number\">0</span>) != <span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;You cannot supply more or less than 2 values&quot;</span>)\n    <span class=\"hljs-keyword\">elif</span> electron_conc &lt; <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Electron concentration cannot be negative in a semiconductor&quot;</span>)\n    <span class=\"hljs-keyword\">elif</span> hole_conc &lt; <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Hole concentration cannot be negative in a semiconductor&quot;</span>)\n    <span class=\"hljs-keyword\">elif</span> intrinsic_conc &lt; <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(\n            <span class=\"hljs-string\">&quot;Intrinsic concentration cannot be negative in a semiconductor&quot;</span>\n        )\n    <span class=\"hljs-keyword\">elif</span> electron_conc == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"hljs-string\">&quot;electron_conc&quot;</span>,\n            intrinsic_conc**<span class=\"hljs-number\">2</span> / hole_conc,\n        )\n    <span class=\"hljs-keyword\">elif</span> hole_conc == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"hljs-string\">&quot;hole_conc&quot;</span>,\n            intrinsic_conc**<span class=\"hljs-number\">2</span> / electron_conc,\n        )\n    <span class=\"hljs-keyword\">elif</span> intrinsic_conc == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"hljs-string\">&quot;intrinsic_conc&quot;</span>,\n            (electron_conc * hole_conc) ** <span class=\"hljs-number\">0.5</span>,\n        )\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-keyword\">return</span> (-<span class=\"hljs-number\">1</span>, -<span class=\"hljs-number\">1</span>)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Sidhaant Thakker",
      "email": "59668364+SidhaantThakker@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}