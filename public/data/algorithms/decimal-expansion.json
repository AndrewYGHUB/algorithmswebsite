{
  "slug": "decimal-expansion",
  "name": "Decimal Expansion",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths/DecimalExpansion.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths/DecimalExpansion.js",
      "code": "<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@author</span> Eric Lavault &lt;https://github.com/lvlte&gt;\n *\n * Represents the decimal (or binary, octal, any base from 2 to 10) expansion\n * of a/b using euclidean division.\n *\n * Because this function is recursive, it may throw an error when reaching the\n * maximum call stack size.\n *\n * Returns an array containing : [\n *  0: integer part of the division\n *  1: array of decimals (if any, or an empty array)\n *  2: indexOf 1st cycle digit in decimals array if a/b is periodic, or undef.\n * ]\n *\n * <span class=\"hljs-doctag\">@see</span> https://mathworld.wolfram.com/DecimalExpansion.html\n *\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">number</span>} <span class=\"hljs-variable\">a</span>\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">number</span>} <span class=\"hljs-variable\">b</span>\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">number</span>} [base=10]\n * <span class=\"hljs-doctag\">@returns</span> {<span class=\"hljs-type\">array</span>}\n */</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">decExp</span> (a, b, base = <span class=\"hljs-number\">10</span>, exp = [], d = {}, dlen = <span class=\"hljs-number\">0</span>) {\n  <span class=\"hljs-keyword\">if</span> (base &lt; <span class=\"hljs-number\">2</span> || base &gt; <span class=\"hljs-number\">10</span>) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RangeError</span>(<span class=\"hljs-string\">&#x27;Unsupported base. Must be in range [2, 10]&#x27;</span>)\n  }\n\n  <span class=\"hljs-keyword\">if</span> (a === <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">return</span> [<span class=\"hljs-number\">0</span>, [], <span class=\"hljs-literal\">undefined</span>]\n  }\n\n  <span class=\"hljs-keyword\">if</span> (a === b &amp;&amp; dlen === <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">return</span> [<span class=\"hljs-number\">1</span>, [], <span class=\"hljs-literal\">undefined</span>]\n  }\n\n  <span class=\"hljs-comment\">// d contains the dividends used so far and the corresponding index of its</span>\n  <span class=\"hljs-comment\">// euclidean division by b in the expansion array.</span>\n  d[a] = dlen++\n\n  <span class=\"hljs-keyword\">if</span> (a &lt; b) {\n    exp.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-number\">0</span>)\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">decExp</span>(a * base, b, base, exp, d, dlen)\n  }\n\n  <span class=\"hljs-comment\">// Euclid&#x27;s division lemma : a = bq + r</span>\n  <span class=\"hljs-keyword\">const</span> r = a % b\n  <span class=\"hljs-keyword\">const</span> q = (a - r) / b\n\n  <span class=\"hljs-comment\">// Decimal expansion (1st element is the integer part)</span>\n  exp.<span class=\"hljs-title function_\">push</span>(+q.<span class=\"hljs-title function_\">toString</span>(base))\n\n  <span class=\"hljs-keyword\">if</span> (r === <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-comment\">// got a regular number (division terminates)</span>\n    <span class=\"hljs-keyword\">return</span> [exp[<span class=\"hljs-number\">0</span>], exp.<span class=\"hljs-title function_\">slice</span>(<span class=\"hljs-number\">1</span>), <span class=\"hljs-literal\">undefined</span>]\n  }\n\n  <span class=\"hljs-comment\">// For the next iteration</span>\n  a = r * base\n\n  <span class=\"hljs-comment\">// Check if `a` has already been used as a dividend, in which case it means</span>\n  <span class=\"hljs-comment\">// the expansion is periodic.</span>\n  <span class=\"hljs-keyword\">if</span> (a <span class=\"hljs-keyword\">in</span> d) {\n    <span class=\"hljs-keyword\">return</span> [exp[<span class=\"hljs-number\">0</span>], exp.<span class=\"hljs-title function_\">slice</span>(<span class=\"hljs-number\">1</span>), d[a] - <span class=\"hljs-number\">1</span>]\n  }\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">decExp</span>(a, b, base, exp, d, dlen)\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Eric Lavault",
      "email": "39483232+lvlte@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}