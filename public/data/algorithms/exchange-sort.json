{
  "slug": "exchange-sort",
  "name": "Exchange Sort",
  "categories": [
    "sorts"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "sorts/exchange_sort.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/sorts/exchange_sort.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">exchange_sort</span>(<span class=\"hljs-params\">numbers: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Uses exchange sort to sort a list of numbers.\n    Source: https://en.wikipedia.org/wiki/Sorting_algorithm#Exchange_sort\n    &gt;&gt;&gt; exchange_sort([5, 4, 3, 2, 1])\n    [1, 2, 3, 4, 5]\n    &gt;&gt;&gt; exchange_sort([-1, -2, -3])\n    [-3, -2, -1]\n    &gt;&gt;&gt; exchange_sort([1, 2, 3, 4, 5])\n    [1, 2, 3, 4, 5]\n    &gt;&gt;&gt; exchange_sort([0, 10, -2, 5, 3])\n    [-2, 0, 3, 5, 10]\n    &gt;&gt;&gt; exchange_sort([])\n    []\n    &quot;&quot;&quot;</span>\n    numbers_length = <span class=\"hljs-built_in\">len</span>(numbers)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(numbers_length):\n        <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(i + <span class=\"hljs-number\">1</span>, numbers_length):\n            <span class=\"hljs-keyword\">if</span> numbers[j] &lt; numbers[i]:\n                numbers[i], numbers[j] = numbers[j], numbers[i]\n    <span class=\"hljs-keyword\">return</span> numbers\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    user_input = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter numbers separated by a comma:\\n&quot;</span>).strip()\n    unsorted = [<span class=\"hljs-built_in\">int</span>(item) <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> user_input.split(<span class=\"hljs-string\">&quot;,&quot;</span>)]\n    <span class=\"hljs-built_in\">print</span>(exchange_sort(unsorted))\n"
    },
    "go": {
      "dir": "sort/exchangesort.go",
      "url": "https://github.com/TheAlgorithms/go/tree/master/sort/exchangesort.go",
      "code": "<span class=\"hljs-comment\">// Implementation of exchange sort algorithm, a variant of bubble sort</span>\n<span class=\"hljs-comment\">// Reference: https://en.wikipedia.org/wiki/Sorting_algorithm#Exchange_sort</span>\n\n<span class=\"hljs-keyword\">package</span> sort\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;github.com/TheAlgorithms/Go/constraints&quot;</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">Exchange</span>[<span class=\"hljs-title\">T</span> <span class=\"hljs-title\">constraints</span>.<span class=\"hljs-title\">Ordered</span>]<span class=\"hljs-params\">(arr []T)</span></span> []T {\n\t<span class=\"hljs-keyword\">for</span> i := <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-built_in\">len</span>(arr)<span class=\"hljs-number\">-1</span>; i++ {\n\t\t<span class=\"hljs-keyword\">for</span> j := i + <span class=\"hljs-number\">1</span>; j &lt; <span class=\"hljs-built_in\">len</span>(arr); j++ {\n\t\t\t<span class=\"hljs-keyword\">if</span> arr[i] &gt; arr[j] {\n\t\t\t\tarr[i], arr[j] = arr[j], arr[i]\n\t\t\t}\n\t\t}\n\t}\n\n\t<span class=\"hljs-keyword\">return</span> arr\n}\n"
    },
    "rust": {
      "dir": "src/sorting/exchange_sort.rs",
      "url": "https://github.com/TheAlgorithms/rust/tree/master/src/sorting/exchange_sort.rs",
      "code": "<span class=\"hljs-comment\">// sorts through swapping the first value until it is at the right position, and repeating for all the following.</span>\n\n<span class=\"hljs-keyword\">pub</span> <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">exchange_sort</span>(arr: &amp;<span class=\"hljs-keyword\">mut</span> [<span class=\"hljs-type\">i32</span>]) {\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">length</span> = arr.<span class=\"hljs-title function_ invoke__\">len</span>();\n    <span class=\"hljs-keyword\">for</span> <span class=\"hljs-variable\">number1</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span>..length {\n        <span class=\"hljs-keyword\">for</span> <span class=\"hljs-variable\">number2</span> <span class=\"hljs-keyword\">in</span> (number1 + <span class=\"hljs-number\">1</span>)..length {\n            <span class=\"hljs-keyword\">if</span> arr[number2] &lt; arr[number1] {\n                arr.<span class=\"hljs-title function_ invoke__\">swap</span>(number1, number2)\n            }\n        }\n    }\n}\n\n<span class=\"hljs-meta\">#[cfg(test)]</span>\n<span class=\"hljs-keyword\">mod</span> tests {\n    <span class=\"hljs-keyword\">use</span> super::super::is_sorted;\n    <span class=\"hljs-keyword\">use</span> super::*;\n    <span class=\"hljs-meta\">#[test]</span>\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">it_works</span>() {\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">arr1</span> = [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>];\n        <span class=\"hljs-title function_ invoke__\">exchange_sort</span>(&amp;<span class=\"hljs-keyword\">mut</span> arr1);\n        <span class=\"hljs-built_in\">assert!</span>(<span class=\"hljs-title function_ invoke__\">is_sorted</span>(&amp;arr1));\n        arr1 = [<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">343</span>, <span class=\"hljs-number\">21</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">21</span>];\n        <span class=\"hljs-title function_ invoke__\">exchange_sort</span>(&amp;<span class=\"hljs-keyword\">mut</span> arr1);\n        <span class=\"hljs-built_in\">assert!</span>(<span class=\"hljs-title function_ invoke__\">is_sorted</span>(&amp;arr1));\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">arr2</span> = [<span class=\"hljs-number\">1</span>];\n        <span class=\"hljs-title function_ invoke__\">exchange_sort</span>(&amp;<span class=\"hljs-keyword\">mut</span> arr2);\n        <span class=\"hljs-built_in\">assert!</span>(<span class=\"hljs-title function_ invoke__\">is_sorted</span>(&amp;arr2));\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">arr3</span> = [<span class=\"hljs-number\">213</span>, <span class=\"hljs-number\">542</span>, <span class=\"hljs-number\">90</span>, -<span class=\"hljs-number\">23412</span>, -<span class=\"hljs-number\">32</span>, <span class=\"hljs-number\">324</span>, -<span class=\"hljs-number\">34</span>, <span class=\"hljs-number\">3324</span>, <span class=\"hljs-number\">54</span>];\n        <span class=\"hljs-title function_ invoke__\">exchange_sort</span>(&amp;<span class=\"hljs-keyword\">mut</span> arr3);\n        <span class=\"hljs-built_in\">assert!</span>(<span class=\"hljs-title function_ invoke__\">is_sorted</span>(&amp;arr3));\n    }\n}\n"
    },
    "julia": {
      "dir": "src/sorts/exchange_sort.jl",
      "url": "https://github.com/TheAlgorithms/julia/tree/master/src/sorts/exchange_sort.jl",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\n    ExchangeSort(arr)\n\nSort an array by exchanging elements that are not in their proper position, hence Exchange Sort\n\nExchange Sort Steps\n1. Compares each element of an array\n2. Swap those elements that are not in their proper position\n\nExample\n1. An array of [1, 2, 4, 3, 5] and compare each elements\n2. Since 4 is greater than 3\n3. Swap both position\n4. Returns [1, 2, 3, 4, 5]\n\nProgram to sort an array\n\n# Example\n```julia\nExchangeSort([5, 4, 3, 2, 1]) # returns [1, 2, 3, 4, 5]\nExchangeSort([1, 2, 3, 4, 5]) # returns [1, 2, 3, 4, 5]\nExchangeSort([&#x27;5&#x27;, &#x27;4&#x27;, &#x27;3&#x27;, &#x27;2&#x27;, &#x27;1&#x27;]) # returns [&#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;, &#x27;5&#x27;]\n```\n\nContributed By:- [Gervin Fung](https://github.com/GervinFung)\n&quot;&quot;&quot;</span>\n\n<span class=\"hljs-keyword\">function</span> exchange_sort!(arr::<span class=\"hljs-built_in\">Vector</span>{T}) <span class=\"hljs-keyword\">where</span> {T}\n    size = length(arr)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">1</span>:size\n        <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> i:size\n            <span class=\"hljs-keyword\">if</span> (arr[i] &gt; arr[j])\n                temp = arr[j]\n                arr[j] = arr[i]\n                arr[i] = temp\n            <span class=\"hljs-keyword\">end</span>\n        <span class=\"hljs-keyword\">end</span>\n    <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n"
    },
    "c-sharp": {
      "dir": "./Algorithms/Sorters/Comparison/ExchangeSorter.cs",
      "url": "https:/github.com/TheAlgorithms/C-Sharp/tree/master/Algorithms/Sorters/Comparison/ExchangeSorter.cs",
      "code": "ï»¿<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Algorithms.Sorters.Comparison</span>\n{\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Class that implements exchange sort algorithm.</span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;typeparam name=&quot;T&quot;&gt;</span>Type of array element.<span class=\"hljs-doctag\">&lt;/typeparam&gt;</span></span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ExchangeSorter</span>&lt;<span class=\"hljs-title\">T</span>&gt; : <span class=\"hljs-title\">IComparisonSorter</span>&lt;<span class=\"hljs-title\">T</span>&gt;\n    {\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Sorts array using specified comparer,</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     internal, in-place, stable,</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     time complexity: O(n^2),</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     space complexity: O(1),</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     where n - array length.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;array&quot;&gt;</span>Array to sort.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;comparer&quot;&gt;</span>Compares elements.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Sort</span>(<span class=\"hljs-params\">T[] array, IComparer&lt;T&gt; comparer</span>)</span>\n        {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; array.Length - <span class=\"hljs-number\">1</span>; i++)\n            {\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> j = i + <span class=\"hljs-number\">1</span>; j &lt; array.Length; j++)\n                {\n                    <span class=\"hljs-keyword\">if</span> (comparer.Compare(array[i], array[j]) &gt; <span class=\"hljs-number\">0</span>)\n                    {\n                        (array[j], array[i]) = (array[i], array[j]);\n                    }\n                }\n            }\n        }\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "pwygab",
      "email": "88221256+merelymyself@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ihjass Thasbekha",
      "email": "44056715+Ihjass@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "PoolOfDeath20",
      "email": "53143214+GervinFung@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Bonnie",
      "email": "58572137+bonbon99@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "PoolOfDeath20",
      "email": "gervinfungdaxuen@gmail.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}