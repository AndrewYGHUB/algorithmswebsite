{
  "slug": "find-kth-number",
  "name": "Find Kth Number",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/maths/FindKthNumber.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/maths/FindKthNumber.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.maths;\n\n<span class=\"hljs-keyword\">import</span> java.util.Arrays;\n<span class=\"hljs-keyword\">import</span> java.util.Random;\n\n<span class=\"hljs-comment\">/**\n * use quick sort algorithm to get kth largest or kth smallest element in given array\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">FindKthNumber</span> {\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Random</span> <span class=\"hljs-variable\">random</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Random</span>();\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n        <span class=\"hljs-comment\">/* generate array with random size and random elements */</span>\n        <span class=\"hljs-type\">int</span>[] nums = generateArray(<span class=\"hljs-number\">100</span>);\n\n        <span class=\"hljs-comment\">/* get 3th largest element */</span>\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">kth</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">3</span>;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">kthMaxIndex</span> <span class=\"hljs-operator\">=</span> nums.length - kth;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">targetMax</span> <span class=\"hljs-operator\">=</span> findKthMax(nums, kthMaxIndex);\n\n        <span class=\"hljs-comment\">/* get 3th smallest element */</span>\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">kthMinIndex</span> <span class=\"hljs-operator\">=</span> kth - <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">targetMin</span> <span class=\"hljs-operator\">=</span> findKthMax(nums, kthMinIndex);\n\n        Arrays.sort(nums);\n        <span class=\"hljs-keyword\">assert</span> nums[kthMaxIndex] == targetMax;\n        <span class=\"hljs-keyword\">assert</span> nums[kthMinIndex] == targetMin;\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span>[] generateArray(<span class=\"hljs-type\">int</span> capacity) {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">size</span> <span class=\"hljs-operator\">=</span> random.nextInt(capacity) + <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">int</span>[] array = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[size];\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; size; i++) {\n            array[i] = random.nextInt() % <span class=\"hljs-number\">100</span>;\n        }\n        <span class=\"hljs-keyword\">return</span> array;\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">findKthMax</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] nums, <span class=\"hljs-type\">int</span> k)</span> {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">start</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>, end = nums.length;\n        <span class=\"hljs-keyword\">while</span> (start &lt; end) {\n            <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">pivot</span> <span class=\"hljs-operator\">=</span> partition(nums, start, end);\n            <span class=\"hljs-keyword\">if</span> (k == pivot) {\n                <span class=\"hljs-keyword\">return</span> nums[pivot];\n            } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (k &gt; pivot) {\n                start = pivot + <span class=\"hljs-number\">1</span>;\n            } <span class=\"hljs-keyword\">else</span> {\n                end = pivot;\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span>;\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">partition</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] nums, <span class=\"hljs-type\">int</span> start, <span class=\"hljs-type\">int</span> end)</span> {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">pivot</span> <span class=\"hljs-operator\">=</span> nums[start];\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> start;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> start + <span class=\"hljs-number\">1</span>; i &lt; end; i++) {\n            <span class=\"hljs-keyword\">if</span> (nums[i] &lt; pivot) {\n                j++;\n                swap(nums, i, j);\n            }\n        }\n        swap(nums, start, j);\n        <span class=\"hljs-keyword\">return</span> j;\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">swap</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] nums, <span class=\"hljs-type\">int</span> a, <span class=\"hljs-type\">int</span> b)</span> {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">tmp</span> <span class=\"hljs-operator\">=</span> nums[a];\n        nums[a] = nums[b];\n        nums[b] = tmp;\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "XU ZHIWEI",
      "email": "jsrdxzw@163.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}