{
  "slug": "find-lcm",
  "name": "Find Lcm",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths/FindLcm.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths/FindLcm.js",
      "code": "<span class=\"hljs-comment\">/*\n    author: PatOnTheBack\n    license: GPL-3.0 or later\n\n    Modified from:\n        https://github.com/TheAlgorithms/Python/blob/master/maths/findLcm.py\n\n    More about LCM:\n        https://en.wikipedia.org/wiki/Least_common_multiple\n*/</span>\n<span class=\"hljs-meta\">\n&#x27;use strict&#x27;</span>\n\n<span class=\"hljs-comment\">// Find the LCM of two numbers.</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">findLcm</span> = (<span class=\"hljs-params\">num1, num2</span>) =&gt; {\n  <span class=\"hljs-comment\">// If the input numbers are less than 1 return an error message.</span>\n  <span class=\"hljs-keyword\">if</span> (num1 &lt; <span class=\"hljs-number\">1</span> || num2 &lt; <span class=\"hljs-number\">1</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Please enter values greater than zero.&#x27;</span>\n  }\n\n  <span class=\"hljs-comment\">// If the input numbers are not integers return an error message.</span>\n  <span class=\"hljs-keyword\">if</span> (num1 !== <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">round</span>(num1) || num2 !== <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">round</span>(num2)) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Please enter whole numbers.&#x27;</span>\n  }\n\n  <span class=\"hljs-comment\">// Get the larger number between the two</span>\n  <span class=\"hljs-keyword\">const</span> maxNum = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">max</span>(num1, num2)\n  <span class=\"hljs-keyword\">let</span> lcm = maxNum\n\n  <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">true</span>) {\n    <span class=\"hljs-keyword\">if</span> (lcm % num1 === <span class=\"hljs-number\">0</span> &amp;&amp; lcm % num2 === <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> lcm\n    lcm += maxNum\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> { findLcm }\n"
    }
  },
  "contributors": [
    {
      "name": "vinayak",
      "email": "itssvinayak@gmail.com",
      "commits": 1
    },
    {
      "name": "Carlos",
      "email": "carlosoftwar@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "thiru15",
      "email": "33665749+thiru15@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Michael Fried",
      "email": "mikelfried@gmail.com",
      "commits": 1
    },
    {
      "name": "Shivam Arora",
      "email": "shivam.arora@inficold.com",
      "commits": 1
    },
    {
      "name": "Ephraim Atta-Duncan",
      "email": "55143799+dephraiim@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 3
    },
    {
      "name": "PatOnTheBack",
      "email": "51241310+PatOnTheBack@users.noreply.github.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}