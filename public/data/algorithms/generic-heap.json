{
  "slug": "generic-heap",
  "name": "Generic Heap",
  "categories": [
    "datastructures",
    "heaps"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/datastructures/heaps/GenericHeap.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/datastructures/heaps/GenericHeap.java",
      "code": "<span class=\"hljs-keyword\">import</span> java.util.*;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">GenericHeap</span> &lt;T <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">Comparable</span> &lt;T&gt; &gt;{\n\tArrayList &lt;T&gt; data=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();\n\tHashMap&lt;T,Integer&gt; map=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;&gt;();\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">add</span><span class=\"hljs-params\">(T item)</span> {\n\t\t<span class=\"hljs-built_in\">this</span>.data.add(item);\n\t\tmap.put(item,<span class=\"hljs-built_in\">this</span>.data.size()-<span class=\"hljs-number\">1</span>);<span class=\"hljs-comment\">//</span>\n\t\tupHeapify(<span class=\"hljs-built_in\">this</span>.data.size()-<span class=\"hljs-number\">1</span>);\n\t}\n\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">upHeapify</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> ci)</span> {\n\t\t<span class=\"hljs-type\">int</span> pi=(ci-<span class=\"hljs-number\">1</span>)/<span class=\"hljs-number\">2</span>;\n\t\t<span class=\"hljs-keyword\">if</span>(isLarger(<span class=\"hljs-built_in\">this</span>.data.get(ci),<span class=\"hljs-built_in\">this</span>.data.get(pi))&gt;<span class=\"hljs-number\">0</span>) {\n\t\t\tswap(pi,ci);\n\t\t\tupHeapify(pi);\n\t\t}\n\t}\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">display</span><span class=\"hljs-params\">()</span> {\n\t\tSystem.out.println(<span class=\"hljs-built_in\">this</span>.data);\n\t}\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">size</span><span class=\"hljs-params\">()</span> {\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>.data.size();\n\t}\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">isEmpty</span><span class=\"hljs-params\">()</span> {\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>.size()==<span class=\"hljs-number\">0</span>;\n\t}\n\t<span class=\"hljs-keyword\">public</span> T <span class=\"hljs-title function_\">remove</span><span class=\"hljs-params\">()</span> {\n\t\t<span class=\"hljs-built_in\">this</span>.swap(<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\">this</span>.size()-<span class=\"hljs-number\">1</span>);\n\t\tT rv=<span class=\"hljs-built_in\">this</span>.data.remove(<span class=\"hljs-built_in\">this</span>.size()-<span class=\"hljs-number\">1</span>);\n\t\tdownHeapify(<span class=\"hljs-number\">0</span>);\n\t\tmap.remove(rv); \n\t\t<span class=\"hljs-keyword\">return</span> rv;\n\t}\n\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">downHeapify</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> pi)</span> {\n\t\t<span class=\"hljs-type\">int</span> lci=<span class=\"hljs-number\">2</span>*pi+<span class=\"hljs-number\">1</span>;\n\t\t<span class=\"hljs-type\">int</span> rci=<span class=\"hljs-number\">2</span>*pi+<span class=\"hljs-number\">2</span>;\n\t\t<span class=\"hljs-type\">int</span> mini=pi;\n\t\t<span class=\"hljs-keyword\">if</span>(lci&lt;<span class=\"hljs-built_in\">this</span>.size() &amp;&amp;  isLarger(<span class=\"hljs-built_in\">this</span>.data.get(lci),<span class=\"hljs-built_in\">this</span>.data.get(mini))&gt;<span class=\"hljs-number\">0</span>) {\n\t\t\tmini=lci;\n\t\t}\n\t\t<span class=\"hljs-keyword\">if</span>(rci&lt;<span class=\"hljs-built_in\">this</span>.size() &amp;&amp;  isLarger(<span class=\"hljs-built_in\">this</span>.data.get(rci),<span class=\"hljs-built_in\">this</span>.data.get(mini))&gt;<span class=\"hljs-number\">0</span>) {\n\t\t\tmini=rci;\n\t\t}\n\t\t<span class=\"hljs-keyword\">if</span>(mini!=pi) {\n\t\t\t<span class=\"hljs-built_in\">this</span>.swap(pi,mini);\n\t\t\tdownHeapify(mini);\n\t\t}\n\t}\n\t<span class=\"hljs-keyword\">public</span> T <span class=\"hljs-title function_\">get</span><span class=\"hljs-params\">()</span> {\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>.data.get(<span class=\"hljs-number\">0</span>);\n\t}\n\t<span class=\"hljs-comment\">//t has higher property then return +ve</span>\n\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">isLarger</span><span class=\"hljs-params\">(T t,T o)</span> {\n\t\t<span class=\"hljs-keyword\">return</span> t.compareTo(o);\n\t}\n\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">swap</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> i,<span class=\"hljs-type\">int</span> j)</span> {\n\t\tT ith=<span class=\"hljs-built_in\">this</span>.data.get(i);\n\t\tT jth=<span class=\"hljs-built_in\">this</span>.data.get(j);\n\t\t<span class=\"hljs-built_in\">this</span>.data.set(i,jth);\n\t\t<span class=\"hljs-built_in\">this</span>.data.set(j,ith);\n\t\tmap.put(ith,j);\n\t\tmap.put(jth,i);\n\t}\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">updatePriority</span><span class=\"hljs-params\">(T item)</span> {\n\t\t<span class=\"hljs-type\">int</span> index=map.get(item);\n\t\t<span class=\"hljs-comment\">//because we enter lesser value then old vale</span>\n\t\tupHeapify(index);\n\t}\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Ritik2604",
      "email": "49342895+Ritik2604@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Shikhar Tyagi",
      "email": "shikhart98@gmail.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}