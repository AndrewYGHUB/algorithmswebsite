{
  "slug": "how-many-times-rotated",
  "name": "How Many Times Rotated",
  "categories": [
    "searches"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/searches/HowManyTimesRotated.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/searches/HowManyTimesRotated.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.searches;\n\n<span class=\"hljs-keyword\">import</span> java.util.*;\n\n<span class=\"hljs-comment\">/*\n    Problem Statement: \n    Given an array, find out how many times it has to been rotated \n    from its initial sorted position.\n    Input-Output:\n    Eg. [11,12,15,18,2,5,6,8]\n    It has been rotated: 4 times\n    (One rotation means putting the first element to the end)\n    Note: The array cannot contain duplicates\n\n    Logic: \n    The position of the minimum element will give the number of times the array has been rotated\n    from its initial sorted position.\n    Eg. For [2,5,6,8,11,12,15,18], 1 rotation gives [5,6,8,11,12,15,18,2], 2 rotations [6,8,11,12,15,18,2,5] and so on.\n    Finding the minimum element will take O(N) time but, we can  use Binary Search to find the mimimum element, we can reduce the complexity to O(log N).\n    If we look at the rotated array, to identify the minimum element (say a[i]), we observe that  a[i-1]&gt;a[i]&lt;a[i+1].\n\n    Some other test cases: \n    1. [1,2,3,4] Number of rotations: 0 or 4(Both valid)\n    2. [15,17,2,3,5] Number of rotations: 3\n */</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HowManyTimesRotated</span> {\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n        <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">sc</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> sc.nextInt();\n        <span class=\"hljs-type\">int</span>[] a = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[n];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n            a[i] = sc.nextInt();\n        }\n\n        System.out.println(<span class=\"hljs-string\">&quot;The array has been rotated &quot;</span> + rotated(a) + <span class=\"hljs-string\">&quot; times&quot;</span>);\n        sc.close();\n\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">rotated</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] a)</span> {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">low</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">high</span> <span class=\"hljs-operator\">=</span> a.length - <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">mid</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">// low + (high-low)/2 = (low + high)/2</span>\n\n        <span class=\"hljs-keyword\">while</span> (low &lt;= high) {\n            mid = low + (high - low) / <span class=\"hljs-number\">2</span>;\n\n            <span class=\"hljs-keyword\">if</span> (a[mid] &lt; a[mid - <span class=\"hljs-number\">1</span>] &amp;&amp; a[mid] &lt; a[mid + <span class=\"hljs-number\">1</span>]) {\n                <span class=\"hljs-keyword\">break</span>;\n            } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (a[mid] &gt; a[mid - <span class=\"hljs-number\">1</span>] &amp;&amp; a[mid] &lt; a[mid + <span class=\"hljs-number\">1</span>]) {\n                high = mid + <span class=\"hljs-number\">1</span>;\n            } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (a[mid] &gt; a[mid - <span class=\"hljs-number\">1</span>] &amp;&amp; a[mid] &gt; a[mid + <span class=\"hljs-number\">1</span>]) {\n                low = mid - <span class=\"hljs-number\">1</span>;\n            }\n        }\n\n        <span class=\"hljs-keyword\">return</span> mid;\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Nirmalya Misra",
      "email": "39618712+nirmalya8@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}