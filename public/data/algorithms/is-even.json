{
  "slug": "is-even",
  "name": "Is Even",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths/IsEven.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths/IsEven.js",
      "code": "<span class=\"hljs-comment\">/*\n * Even Number: https://simple.wikipedia.org/wiki/Even_number\n *\n * function to check if number is even\n * return true if number is even\n * else false\n */</span>\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@function</span> <span class=\"hljs-variable\">isEven</span>\n * <span class=\"hljs-doctag\">@description</span> - Checking if number is even using divisibility by 2\n *\n * If number is divisible by 2 i.e remainder = 0, then it is even\n * therefore, the function will return true\n *\n * If number is not divisible by 2 i.e remainder != 0, then it is not even i.e odd\n * therefore, the function will return false\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">number</span>} <span class=\"hljs-variable\">number</span>\n * <span class=\"hljs-doctag\">@return</span> {<span class=\"hljs-type\">boolean</span>}\n */</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">isEven</span> = (<span class=\"hljs-params\">number</span>) =&gt; number % <span class=\"hljs-number\">2</span> === <span class=\"hljs-number\">0</span>\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@function</span> <span class=\"hljs-variable\">isEvenBitwise</span>\n * <span class=\"hljs-doctag\">@description</span> - Checking if number is even using bitwise operator\n * Bitwise AND (&amp;) compares the bits of the 32\n * bit binary representations of the number and\n * returns a number after comparing each bit:\n *\n * 0 &amp; 0 -&gt; 0\n * 0 &amp; 1 -&gt; 0\n * 1 &amp; 0 -&gt; 0\n * 1 &amp; 1 -&gt; 1\n *\n * For odd numbers, the last binary bit will be 1\n * and for even numbers, the last binary bit will\n * be 0.\n *\n * As the number is compared with one, all the\n * other bits except the last will become 0. The\n * last bit will be 0 for even numbers and 1 for\n * odd numbers, which is checked with the use\n * of the equality operator.\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">number</span>} <span class=\"hljs-variable\">number</span>\n * <span class=\"hljs-doctag\">@returns</span> {<span class=\"hljs-type\">boolean</span>}\n * <span class=\"hljs-doctag\">@see</span> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\n */</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">isEvenBitwise</span> = (<span class=\"hljs-params\">number</span>) =&gt; (number &amp; <span class=\"hljs-number\">1</span>) === <span class=\"hljs-number\">0</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Fahim Faisaal",
      "email": "57553028+fahimfaisaal@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "AbhinavXT",
      "email": "abhinavpathaka17@gmail.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}