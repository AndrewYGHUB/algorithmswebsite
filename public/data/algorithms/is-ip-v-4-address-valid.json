{
  "slug": "is-ip-v-4-address-valid",
  "name": "Is Ip v 4 Address Valid",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/is_ip_v4_address_valid.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/is_ip_v4_address_valid.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nIs IP v4 address valid?\nA valid IP address must be four octets in the form of A.B.C.D,\nwhere A,B,C and D are numbers from 0-254\nfor example: 192.168.23.1, 172.254.254.254 are valid IP address\n             192.168.255.0, 255.192.3.121 are invalid IP address\n&quot;&quot;&quot;</span>\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">is_ip_v4_address_valid</span>(<span class=\"hljs-params\">ip_v4_address: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    print &quot;Valid IP address&quot; If IP is valid.\n    or\n    print &quot;Invalid IP address&quot; If IP is invalid.\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;192.168.0.23&quot;)\n    True\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;192.255.15.8&quot;)\n    False\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;172.100.0.8&quot;)\n    True\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;254.255.0.255&quot;)\n    False\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;1.2.33333333.4&quot;)\n    False\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;1.2.-3.4&quot;)\n    False\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;1.2.3&quot;)\n    False\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;1.2.3.4.5&quot;)\n    False\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;1.2.A.4&quot;)\n    False\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;0.0.0.0&quot;)\n    True\n\n    &gt;&gt;&gt; is_ip_v4_address_valid(&quot;1.2.3.&quot;)\n    False\n    &quot;&quot;&quot;</span>\n    octets = [<span class=\"hljs-built_in\">int</span>(i) <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> ip_v4_address.split(<span class=\"hljs-string\">&quot;.&quot;</span>) <span class=\"hljs-keyword\">if</span> i.isdigit()]\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">len</span>(octets) == <span class=\"hljs-number\">4</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-built_in\">all</span>(<span class=\"hljs-number\">0</span> &lt;= <span class=\"hljs-built_in\">int</span>(octet) &lt;= <span class=\"hljs-number\">254</span> <span class=\"hljs-keyword\">for</span> octet <span class=\"hljs-keyword\">in</span> octets)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    ip = <span class=\"hljs-built_in\">input</span>().strip()\n    valid_or_invalid = <span class=\"hljs-string\">&quot;valid&quot;</span> <span class=\"hljs-keyword\">if</span> is_ip_v4_address_valid(ip) <span class=\"hljs-keyword\">else</span> <span class=\"hljs-string\">&quot;invalid&quot;</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{ip}</span> is a <span class=\"hljs-subst\">{valid_or_invalid}</span> IP v4 address.&quot;</span>)\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}