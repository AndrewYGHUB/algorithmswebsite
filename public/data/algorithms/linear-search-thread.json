{
  "slug": "linear-search-thread",
  "name": "Linear Search Thread",
  "categories": [
    "searches"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/searches/LinearSearchThread.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/searches/LinearSearchThread.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.searches;\n\n<span class=\"hljs-keyword\">import</span> java.util.Scanner;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LinearSearchThread</span> {\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n        <span class=\"hljs-type\">int</span>[] list = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[<span class=\"hljs-number\">200</span>];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; j &lt; list.length; j++) {\n            list[j] = (<span class=\"hljs-type\">int</span>) (Math.random() * <span class=\"hljs-number\">100</span>);\n        }\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> y : list) {\n            System.out.print(y + <span class=\"hljs-string\">&quot; &quot;</span>);\n        }\n        System.out.println();\n        System.out.print(<span class=\"hljs-string\">&quot;Enter number to search for: &quot;</span>);\n        <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">in</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">x</span> <span class=\"hljs-operator\">=</span> in.nextInt();\n        <span class=\"hljs-type\">Searcher</span> <span class=\"hljs-variable\">t</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Searcher</span>(list, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">50</span>, x);\n        <span class=\"hljs-type\">Searcher</span> <span class=\"hljs-variable\">t1</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Searcher</span>(list, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">100</span>, x);\n        <span class=\"hljs-type\">Searcher</span> <span class=\"hljs-variable\">t2</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Searcher</span>(list, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">150</span>, x);\n        <span class=\"hljs-type\">Searcher</span> <span class=\"hljs-variable\">t3</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Searcher</span>(list, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">200</span>, x);\n        t.start();\n        t1.start();\n        t2.start();\n        t3.start();\n        <span class=\"hljs-keyword\">try</span> {\n            t.join();\n            t1.join();\n            t2.join();\n            t3.join();\n        } <span class=\"hljs-keyword\">catch</span> (InterruptedException e) {\n        }\n        <span class=\"hljs-type\">boolean</span> <span class=\"hljs-variable\">found</span> <span class=\"hljs-operator\">=</span> t.getResult() || t1.getResult() || t2.getResult() || t3.getResult();\n        System.out.println(<span class=\"hljs-string\">&quot;Found = &quot;</span> + found);\n    }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Searcher</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">Thread</span> {\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span>[] arr;\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> left, right;\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> x;\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">boolean</span> found;\n\n    Searcher(<span class=\"hljs-type\">int</span>[] arr, <span class=\"hljs-type\">int</span> left, <span class=\"hljs-type\">int</span> right, <span class=\"hljs-type\">int</span> x) {\n        <span class=\"hljs-built_in\">this</span>.arr = arr;\n        <span class=\"hljs-built_in\">this</span>.left = left;\n        <span class=\"hljs-built_in\">this</span>.right = right;\n        <span class=\"hljs-built_in\">this</span>.x = x;\n    }\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">run</span><span class=\"hljs-params\">()</span> {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">k</span> <span class=\"hljs-operator\">=</span> left;\n        found = <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-keyword\">while</span> (k &lt; right &amp;&amp; !found) {\n            <span class=\"hljs-keyword\">if</span> (arr[k++] == x) {\n                found = <span class=\"hljs-literal\">true</span>;\n            }\n        }\n    }\n\n    <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">getResult</span><span class=\"hljs-params\">()</span> {\n        <span class=\"hljs-keyword\">return</span> found;\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Louve Le bronec",
      "email": "lebroneclo@cy-tech.fr",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}