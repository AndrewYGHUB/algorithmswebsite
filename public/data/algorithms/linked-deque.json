{
  "slug": "linked-deque",
  "name": "Linked Deque",
  "categories": [
    "datastructures"
  ],
  "body": {},
  "implementations": {
    "lua": {
      "dir": "src/data_structures/linked_deque.lua",
      "url": "https://github.com/TheAlgorithms/lua/tree/master/src/data_structures/linked_deque.lua",
      "code": "<span class=\"hljs-comment\">-- Linked double-ended queue (deque for short)</span>\n<span class=\"hljs-comment\">-- Iterable in both directions, constant-time pushing &amp; popping at both ends</span>\n\n<span class=\"hljs-keyword\">local</span> linked_deque = {}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linked_deque.new</span><span class=\"hljs-params\">()</span></span>\n\t<span class=\"hljs-keyword\">return</span> {} <span class=\"hljs-comment\">-- empty deque</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linked_deque:empty</span><span class=\"hljs-params\">()</span></span>\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">self</span>.head == <span class=\"hljs-literal\">nil</span> <span class=\"hljs-comment\">-- boolean</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-comment\">-- Iterators</span>\n\n<span class=\"hljs-comment\">-- Iterates the queue from head to tail</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linked_deque:values</span><span class=\"hljs-params\">()</span></span>\n\t<span class=\"hljs-keyword\">local</span> current = <span class=\"hljs-built_in\">self</span>.head\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>\n\t\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> current <span class=\"hljs-keyword\">then</span>\n\t\t\t<span class=\"hljs-keyword\">return</span>\n\t\t<span class=\"hljs-keyword\">end</span>\n\t\t<span class=\"hljs-keyword\">local</span> value = current.value\n\t\tcurrent = current.<span class=\"hljs-built_in\">next</span>\n\t\t<span class=\"hljs-keyword\">return</span> value\n\t<span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-comment\">-- Iterates the queue values from tail to head</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linked_deque:rvalues</span><span class=\"hljs-params\">()</span></span>\n\t<span class=\"hljs-keyword\">local</span> current = <span class=\"hljs-built_in\">self</span>.tail\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>\n\t\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> current <span class=\"hljs-keyword\">then</span>\n\t\t\t<span class=\"hljs-keyword\">return</span>\n\t\t<span class=\"hljs-keyword\">end</span>\n\t\t<span class=\"hljs-keyword\">local</span> value = current.value\n\t\tcurrent = current.previous\n\t\t<span class=\"hljs-keyword\">return</span> value\n\t<span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-comment\">-- Head</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linked_deque:push_head</span><span class=\"hljs-params\">(value)</span></span>\n\t<span class=\"hljs-built_in\">assert</span>(value ~= <span class=\"hljs-literal\">nil</span>)\n\t<span class=\"hljs-keyword\">local</span> <span class=\"hljs-built_in\">next</span> = <span class=\"hljs-built_in\">self</span>.head\n\t<span class=\"hljs-built_in\">self</span>.head = { value = value, <span class=\"hljs-built_in\">next</span> = <span class=\"hljs-built_in\">next</span> }\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">next</span> <span class=\"hljs-keyword\">then</span>\n\t\t<span class=\"hljs-built_in\">next</span>.previous = <span class=\"hljs-built_in\">self</span>.head\n\t<span class=\"hljs-keyword\">else</span>\n\t\t<span class=\"hljs-built_in\">self</span>.tail = <span class=\"hljs-built_in\">self</span>.head\n\t<span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linked_deque:get_head</span><span class=\"hljs-params\">()</span></span>\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">self</span>.head <span class=\"hljs-keyword\">then</span>\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">self</span>.head.value\n\t<span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linked_deque:pop_head</span><span class=\"hljs-params\">()</span></span>\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">self</span>:empty() <span class=\"hljs-keyword\">then</span>\n\t\t<span class=\"hljs-keyword\">return</span>\n\t<span class=\"hljs-keyword\">end</span>\n\t<span class=\"hljs-keyword\">local</span> value = <span class=\"hljs-built_in\">self</span>.head.value\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">self</span>.head == <span class=\"hljs-built_in\">self</span>.tail <span class=\"hljs-keyword\">then</span>\n\t\t<span class=\"hljs-built_in\">self</span>.head, <span class=\"hljs-built_in\">self</span>.tail = <span class=\"hljs-literal\">nil</span>, <span class=\"hljs-literal\">nil</span>\n\t<span class=\"hljs-keyword\">else</span>\n\t\t<span class=\"hljs-built_in\">self</span>.head = <span class=\"hljs-built_in\">self</span>.head.<span class=\"hljs-built_in\">next</span>\n\t\t<span class=\"hljs-built_in\">self</span>.head.previous = <span class=\"hljs-literal\">nil</span>\n\t<span class=\"hljs-keyword\">end</span>\n\t<span class=\"hljs-keyword\">return</span> value\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-comment\">-- Tail</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linked_deque:push_tail</span><span class=\"hljs-params\">(value)</span></span>\n\t<span class=\"hljs-built_in\">assert</span>(value ~= <span class=\"hljs-literal\">nil</span>)\n\t<span class=\"hljs-keyword\">local</span> previous = <span class=\"hljs-built_in\">self</span>.tail\n\t<span class=\"hljs-built_in\">self</span>.tail = { value = value, previous = previous }\n\t<span class=\"hljs-keyword\">if</span> previous <span class=\"hljs-keyword\">then</span>\n\t\tprevious.<span class=\"hljs-built_in\">next</span> = <span class=\"hljs-built_in\">self</span>.tail\n\t<span class=\"hljs-keyword\">else</span>\n\t\t<span class=\"hljs-built_in\">self</span>.head = <span class=\"hljs-built_in\">self</span>.tail\n\t<span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linked_deque:get_tail</span><span class=\"hljs-params\">()</span></span>\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">self</span>.tail <span class=\"hljs-keyword\">then</span>\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">self</span>.tail.value\n\t<span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linked_deque:pop_tail</span><span class=\"hljs-params\">()</span></span>\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">self</span>:empty() <span class=\"hljs-keyword\">then</span>\n\t\t<span class=\"hljs-keyword\">return</span>\n\t<span class=\"hljs-keyword\">end</span>\n\t<span class=\"hljs-keyword\">local</span> value = <span class=\"hljs-built_in\">self</span>.tail.value\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">self</span>.head == <span class=\"hljs-built_in\">self</span>.tail <span class=\"hljs-keyword\">then</span>\n\t\t<span class=\"hljs-built_in\">self</span>.head, <span class=\"hljs-built_in\">self</span>.tail = <span class=\"hljs-literal\">nil</span>, <span class=\"hljs-literal\">nil</span>\n\t<span class=\"hljs-keyword\">else</span>\n\t\t<span class=\"hljs-built_in\">self</span>.tail = <span class=\"hljs-built_in\">self</span>.tail.previous\n\t\t<span class=\"hljs-built_in\">self</span>.tail.<span class=\"hljs-built_in\">next</span> = <span class=\"hljs-literal\">nil</span>\n\t<span class=\"hljs-keyword\">end</span>\n\t<span class=\"hljs-keyword\">return</span> value\n<span class=\"hljs-keyword\">end</span>\n\n<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;class&quot;</span>)(linked_deque)\n"
    }
  },
  "contributors": [
    {
      "name": "Lars Mueller",
      "email": "appgurulars@gmx.de",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}