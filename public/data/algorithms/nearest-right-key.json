{
  "slug": "nearest-right-key",
  "name": "Nearest Right Key",
  "categories": [
    "datastructures",
    "tree"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/datastructures/trees/nearestRightKey.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/datastructures/trees/nearestRightKey.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.datastructures.trees;\n\n<span class=\"hljs-keyword\">import</span> java.util.Scanner;\n<span class=\"hljs-keyword\">import</span> java.util.concurrent.ThreadLocalRandom;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Main</span> {\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n        <span class=\"hljs-type\">NRKTree</span> <span class=\"hljs-variable\">root</span> <span class=\"hljs-operator\">=</span> BuildTree();\n        <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">sc</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\n        System.out.print(<span class=\"hljs-string\">&quot;Enter first number: &quot;</span>);\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">inputX0</span> <span class=\"hljs-operator\">=</span> sc.nextInt();\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">toPrint</span> <span class=\"hljs-operator\">=</span> nearestRightKey(root, inputX0);\n        System.out.println(<span class=\"hljs-string\">&quot;Key: &quot;</span> + toPrint);\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> NRKTree <span class=\"hljs-title function_\">BuildTree</span><span class=\"hljs-params\">()</span> {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">randomX</span> <span class=\"hljs-operator\">=</span> ThreadLocalRandom.current().nextInt(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span> + <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-type\">NRKTree</span> <span class=\"hljs-variable\">root</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">NRKTree</span>(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">null</span>, randomX);\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {\n            randomX = ThreadLocalRandom.current().nextInt(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span> + <span class=\"hljs-number\">1</span>);\n            root = root.insertKey(root, randomX);\n        }\n\n        <span class=\"hljs-keyword\">return</span> root;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">nearestRightKey</span><span class=\"hljs-params\">(NRKTree root, <span class=\"hljs-type\">int</span> x0)</span> {\n        <span class=\"hljs-comment\">//Check whether tree is empty</span>\n        <span class=\"hljs-keyword\">if</span> (root == <span class=\"hljs-literal\">null</span>) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">if</span> (root.data - x0 &gt; <span class=\"hljs-number\">0</span>) {\n                <span class=\"hljs-comment\">// Go left</span>\n                <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">temp</span> <span class=\"hljs-operator\">=</span> nearestRightKey(root.left, x0);\n                <span class=\"hljs-keyword\">if</span> (temp == <span class=\"hljs-number\">0</span>) {\n                    <span class=\"hljs-keyword\">return</span> root.data;\n                }\n                <span class=\"hljs-keyword\">return</span> temp;\n            } <span class=\"hljs-keyword\">else</span> {\n                <span class=\"hljs-comment\">// Go right</span>\n                <span class=\"hljs-keyword\">return</span> nearestRightKey(root.right, x0);\n            }\n\n        }\n    }\n\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">NRKTree</span> {\n\n    <span class=\"hljs-keyword\">public</span> NRKTree left;\n    <span class=\"hljs-keyword\">public</span> NRKTree right;\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">int</span> data;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">NRKTree</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span> {\n        <span class=\"hljs-built_in\">this</span>.left = <span class=\"hljs-literal\">null</span>;\n        <span class=\"hljs-built_in\">this</span>.right = <span class=\"hljs-literal\">null</span>;\n        <span class=\"hljs-built_in\">this</span>.data = x;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">NRKTree</span><span class=\"hljs-params\">(NRKTree right, NRKTree left, <span class=\"hljs-type\">int</span> x)</span> {\n        <span class=\"hljs-built_in\">this</span>.left = left;\n        <span class=\"hljs-built_in\">this</span>.right = right;\n        <span class=\"hljs-built_in\">this</span>.data = x;\n    }\n\n    <span class=\"hljs-keyword\">public</span> NRKTree <span class=\"hljs-title function_\">insertKey</span><span class=\"hljs-params\">(NRKTree current, <span class=\"hljs-type\">int</span> value)</span> {\n        <span class=\"hljs-keyword\">if</span> (current == <span class=\"hljs-literal\">null</span>) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">NRKTree</span>(value);\n        }\n\n        <span class=\"hljs-keyword\">if</span> (value &lt; current.data) {\n            current.left = insertKey(current.left, value);\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (value &gt; current.data) {\n            current.right = insertKey(current.right, value);\n        }\n\n        <span class=\"hljs-keyword\">return</span> current;\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "jhonDoe15",
      "email": "62393042+jhonDoe15@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}