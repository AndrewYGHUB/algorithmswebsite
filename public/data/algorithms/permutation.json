{
  "slug": "permutation",
  "name": "Permutation",
  "categories": [
    "backtracking"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/backtracking/Permutation.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/backtracking/Permutation.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.backtracking;\n\n<span class=\"hljs-keyword\">import</span> java.util.Arrays;\n<span class=\"hljs-keyword\">import</span> java.util.LinkedList;\n<span class=\"hljs-keyword\">import</span> java.util.List;\n\n<span class=\"hljs-comment\">/**\n * Finds all permutations of given array\n * <span class=\"hljs-doctag\">@author</span> Alan Piao (https://github.com/cpiao3)\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Permutation</span> {\n    <span class=\"hljs-comment\">/**\n     * Find all permutations of given array using backtracking\n     * <span class=\"hljs-doctag\">@param</span> arr the array.\n     * <span class=\"hljs-doctag\">@param</span> &lt;T&gt; the type of elements in the array.\n     * <span class=\"hljs-doctag\">@return</span> a list of all permutations.\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> &lt;T&gt; List&lt;T[]&gt; permutation(T[] arr) {\n        T[] array = arr.clone();\n        List&lt;T[]&gt; result = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LinkedList</span>&lt;&gt;();\n        backtracking(array, <span class=\"hljs-number\">0</span>, result);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n    <span class=\"hljs-comment\">/**\n     * Backtrack all possible orders of a given array\n     * <span class=\"hljs-doctag\">@param</span> arr the array.\n     * <span class=\"hljs-doctag\">@param</span> index the starting index.\n     * <span class=\"hljs-doctag\">@param</span> result the list contains all permutations.\n     * <span class=\"hljs-doctag\">@param</span> &lt;T&gt; the type of elements in the array.\n     */</span>\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> &lt;T&gt; <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">backtracking</span><span class=\"hljs-params\">(T[] arr, <span class=\"hljs-type\">int</span> index, List&lt;T[]&gt; result)</span> {\n        <span class=\"hljs-keyword\">if</span> (index == arr.length) {\n            result.add(arr.clone());\n        }\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> index; i &lt; arr.length; i++) {\n            swap(index, i, arr);\n            backtracking(arr, index + <span class=\"hljs-number\">1</span>, result);\n            swap(index, i, arr);\n        }\n    }\n    <span class=\"hljs-comment\">/**\n     * Swap two element for a given array\n     * <span class=\"hljs-doctag\">@param</span> a first index\n     * <span class=\"hljs-doctag\">@param</span> b second index\n     * <span class=\"hljs-doctag\">@param</span> arr the array.\n     * <span class=\"hljs-doctag\">@param</span> &lt;T&gt; the type of elements in the array.\n     */</span>\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> &lt;T&gt; <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">swap</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a, <span class=\"hljs-type\">int</span> b, T[] arr)</span> {\n        <span class=\"hljs-type\">T</span> <span class=\"hljs-variable\">temp</span> <span class=\"hljs-operator\">=</span> arr[a];\n        arr[a] = arr[b];\n        arr[b] = temp;\n    }\n}\n"
    },
    "julia": {
      "dir": "src/math/permutation.jl",
      "url": "https://github.com/TheAlgorithms/julia/tree/master/src/math/permutation.jl",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\n    permutation(n, r)\n        \n    returns the number of ways to choose r items from n items\n    with order and without repetition\n\n# Arguments:\n- `n`: Positive integers of items to choose from\n- &#x27;r&#x27;: Positive integers of items to choose\n\nContributed By:- [Mayur Dahibhate](https://github.com/mayurdahibhate)\n&quot;&quot;&quot;</span>\n\n<span class=\"hljs-keyword\">function</span> permutation(n, r)\n    <span class=\"hljs-keyword\">function</span> factorial(n)\n        fact = <span class=\"hljs-number\">1</span>\n\n        <span class=\"hljs-keyword\">if</span> n == <span class=\"hljs-number\">0</span> || n == <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">return</span> fact\n        <span class=\"hljs-keyword\">end</span>\n\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">1</span>:n\n            fact = fact * i\n        <span class=\"hljs-keyword\">end</span>\n\n        <span class=\"hljs-keyword\">return</span> fact\n    <span class=\"hljs-keyword\">end</span>\n\n    perm = factorial(n) / factorial(n - r)\n\n    <span class=\"hljs-keyword\">return</span> convert(<span class=\"hljs-built_in\">Int64</span>, perm)\n<span class=\"hljs-keyword\">end</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Ihjass Thasbekha",
      "email": "44056715+Ihjass@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Mayur Dahibhate",
      "email": "52608503+mayurdahibhate@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ashot Janibekyan",
      "email": "31385299+ashotjanibekyan@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "cpiao3",
      "email": "72165966+cpiao3@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}