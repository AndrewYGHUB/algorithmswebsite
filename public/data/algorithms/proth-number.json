{
  "slug": "proth-number",
  "name": "Proth Number",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/proth_number.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/proth_number.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nCalculate the nth Proth number\nSource:\n    https://handwiki.org/wiki/Proth_number\n&quot;&quot;&quot;</span>\n\n<span class=\"hljs-keyword\">import</span> math\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">proth</span>(<span class=\"hljs-params\">number: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    :param number: nth number to calculate in the sequence\n    :return: the nth number in Proth number\n    Note: indexing starts at 1 i.e. proth(1) gives the first Proth number of 3\n    &gt;&gt;&gt; proth(6)\n    25\n    &gt;&gt;&gt; proth(0)\n    Traceback (most recent call last):\n    ...\n    ValueError: Input value of [number=0] must be &gt; 0\n    &gt;&gt;&gt; proth(-1)\n    Traceback (most recent call last):\n    ...\n    ValueError: Input value of [number=-1] must be &gt; 0\n    &gt;&gt;&gt; proth(6.0)\n    Traceback (most recent call last):\n    ...\n    TypeError: Input value of [number=6.0] must be an integer\n    &quot;&quot;&quot;</span>\n\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(number, <span class=\"hljs-built_in\">int</span>):\n        <span class=\"hljs-keyword\">raise</span> TypeError(<span class=\"hljs-string\">f&quot;Input value of [number=<span class=\"hljs-subst\">{number}</span>] must be an integer&quot;</span>)\n\n    <span class=\"hljs-keyword\">if</span> number &lt; <span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">f&quot;Input value of [number=<span class=\"hljs-subst\">{number}</span>] must be &gt; 0&quot;</span>)\n    <span class=\"hljs-keyword\">elif</span> number == <span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">3</span>\n    <span class=\"hljs-keyword\">elif</span> number == <span class=\"hljs-number\">2</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">5</span>\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-string\">&quot;&quot;&quot;\n        +1 for binary starting at 0 i.e. 2^0, 2^1, etc.\n        +1 to start the sequence at the 3rd Proth number\n        Hence, we have a +2 in the below statement\n        &quot;&quot;&quot;</span>\n        block_index = <span class=\"hljs-built_in\">int</span>(math.log(number // <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>)) + <span class=\"hljs-number\">2</span>\n\n        proth_list = [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">5</span>]\n        proth_index = <span class=\"hljs-number\">2</span>\n        increment = <span class=\"hljs-number\">3</span>\n        <span class=\"hljs-keyword\">for</span> block <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, block_index):\n            <span class=\"hljs-keyword\">for</span> move <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(increment):\n                proth_list.append(<span class=\"hljs-number\">2</span> ** (block + <span class=\"hljs-number\">1</span>) + proth_list[proth_index - <span class=\"hljs-number\">1</span>])\n                proth_index += <span class=\"hljs-number\">1</span>\n            increment *= <span class=\"hljs-number\">2</span>\n\n    <span class=\"hljs-keyword\">return</span> proth_list[number - <span class=\"hljs-number\">1</span>]\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n\n    <span class=\"hljs-keyword\">for</span> number <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">11</span>):\n        value = <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\">try</span>:\n            value = proth(number)\n        <span class=\"hljs-keyword\">except</span> ValueError:\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;ValueError: there is no <span class=\"hljs-subst\">{number}</span>th Proth number&quot;</span>)\n            <span class=\"hljs-keyword\">continue</span>\n\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;The <span class=\"hljs-subst\">{number}</span>th Proth number: <span class=\"hljs-subst\">{value}</span>&quot;</span>)\n"
    }
  },
  "contributors": [
    {
      "name": "Rohan R Bharadwaj",
      "email": "rohanrbharadwaj@gmail.com",
      "commits": 1
    },
    {
      "name": "Jordan Rinder",
      "email": "jrinder42@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}