{
  "slug": "reddit",
  "name": "Reddit",
  "categories": [
    "webprogramming"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "web_programming/reddit.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/web_programming/reddit.py",
      "code": "<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\n\n<span class=\"hljs-keyword\">import</span> requests\n\nvalid_terms = <span class=\"hljs-built_in\">set</span>(\n    <span class=\"hljs-string\">&quot;&quot;&quot;approved_at_utc approved_by author_flair_background_color\nauthor_flair_css_class author_flair_richtext author_flair_template_id author_fullname\nauthor_premium can_mod_post category clicked content_categories created_utc downs\nedited gilded gildings hidden hide_score is_created_from_ads_ui is_meta\nis_original_content is_reddit_media_domain is_video link_flair_css_class\nlink_flair_richtext link_flair_text link_flair_text_color media_embed mod_reason_title\nname permalink pwls quarantine saved score secure_media secure_media_embed selftext\nsubreddit subreddit_name_prefixed subreddit_type thumbnail title top_awarded_type\ntotal_awards_received ups upvote_ratio url user_reports&quot;&quot;&quot;</span>.split()\n)\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_subreddit_data</span>(<span class=\"hljs-params\">\n    subreddit: <span class=\"hljs-built_in\">str</span>, limit: <span class=\"hljs-built_in\">int</span> = <span class=\"hljs-number\">1</span>, age: <span class=\"hljs-built_in\">str</span> = <span class=\"hljs-string\">&quot;new&quot;</span>, wanted_data: <span class=\"hljs-built_in\">list</span> | <span class=\"hljs-literal\">None</span> = <span class=\"hljs-literal\">None</span>\n</span>) -&gt; <span class=\"hljs-built_in\">dict</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    subreddit : Subreddit to query\n    limit : Number of posts to fetch\n    age : [&quot;new&quot;, &quot;top&quot;, &quot;hot&quot;]\n    wanted_data : Get only the required data in the list\n\n    &gt;&gt;&gt; pass\n    &quot;&quot;&quot;</span>\n    wanted_data = wanted_data <span class=\"hljs-keyword\">or</span> []\n    <span class=\"hljs-keyword\">if</span> invalid_search_terms := <span class=\"hljs-string\">&quot;, &quot;</span>.join(<span class=\"hljs-built_in\">sorted</span>(<span class=\"hljs-built_in\">set</span>(wanted_data) - valid_terms)):\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">f&quot;Invalid search term: <span class=\"hljs-subst\">{invalid_search_terms}</span>&quot;</span>)\n    response = requests.get(\n        <span class=\"hljs-string\">f&quot;https://reddit.com/r/<span class=\"hljs-subst\">{subreddit}</span>/<span class=\"hljs-subst\">{age}</span>.json?limit=<span class=\"hljs-subst\">{limit}</span>&quot;</span>,\n        headers={<span class=\"hljs-string\">&quot;User-agent&quot;</span>: <span class=\"hljs-string\">&quot;A random string&quot;</span>},\n    )\n    <span class=\"hljs-keyword\">if</span> response.status_code == <span class=\"hljs-number\">429</span>:\n        <span class=\"hljs-keyword\">raise</span> requests.HTTPError\n\n    data = response.json()\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> wanted_data:\n        <span class=\"hljs-keyword\">return</span> {id_: data[<span class=\"hljs-string\">&quot;data&quot;</span>][<span class=\"hljs-string\">&quot;children&quot;</span>][id_] <span class=\"hljs-keyword\">for</span> id_ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(limit)}\n\n    data_dict = {}\n    <span class=\"hljs-keyword\">for</span> id_ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(limit):\n        data_dict[id_] = {\n            item: data[<span class=\"hljs-string\">&quot;data&quot;</span>][<span class=\"hljs-string\">&quot;children&quot;</span>][id_][<span class=\"hljs-string\">&quot;data&quot;</span>][item] <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> wanted_data\n        }\n    <span class=\"hljs-keyword\">return</span> data_dict\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-comment\"># If you get Error 429, that means you are rate limited.Try after some time</span>\n    <span class=\"hljs-built_in\">print</span>(get_subreddit_data(<span class=\"hljs-string\">&quot;learnpython&quot;</span>, wanted_data=[<span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;url&quot;</span>, <span class=\"hljs-string\">&quot;selftext&quot;</span>]))\n"
    }
  },
  "contributors": [
    {
      "name": "Jaydeep Das",
      "email": "jaydeepjd.8914@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}