{
  "slug": "search-books-by-isbn",
  "name": "Search Books by Isbn",
  "categories": [
    "webprogramming"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "web_programming/search_books_by_isbn.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/web_programming/search_books_by_isbn.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nGet book and author data from https://openlibrary.org\n\nISBN: https://en.wikipedia.org/wiki/International_Standard_Book_Number\n&quot;&quot;&quot;</span>\n<span class=\"hljs-keyword\">from</span> json <span class=\"hljs-keyword\">import</span> JSONDecodeError  <span class=\"hljs-comment\"># Workaround for requests.exceptions.JSONDecodeError</span>\n\n<span class=\"hljs-keyword\">import</span> requests\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_openlibrary_data</span>(<span class=\"hljs-params\">olid: <span class=\"hljs-built_in\">str</span> = <span class=\"hljs-string\">&quot;isbn/0140328726&quot;</span></span>) -&gt; <span class=\"hljs-built_in\">dict</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Given an &#x27;isbn/0140328726&#x27;, return book data from Open Library as a Python dict.\n    Given an &#x27;/authors/OL34184A&#x27;, return authors data as a Python dict.\n    This code must work for olids with or without a leading slash (&#x27;/&#x27;).\n\n    # Comment out doctests if they take too long or have results that may change\n    # &gt;&gt;&gt; get_openlibrary_data(olid=&#x27;isbn/0140328726&#x27;)  # doctest: +ELLIPSIS\n    {&#x27;publishers&#x27;: [&#x27;Puffin&#x27;], &#x27;number_of_pages&#x27;: 96, &#x27;isbn_10&#x27;: [&#x27;0140328726&#x27;], ...\n    # &gt;&gt;&gt; get_openlibrary_data(olid=&#x27;/authors/OL7353617A&#x27;)  # doctest: +ELLIPSIS\n    {&#x27;name&#x27;: &#x27;Adrian Brisku&#x27;, &#x27;created&#x27;: {&#x27;type&#x27;: &#x27;/type/datetime&#x27;, ...\n    &gt;&gt;&gt; pass  # Placate https://github.com/apps/algorithms-keeper\n    &quot;&quot;&quot;</span>\n    new_olid = olid.strip().strip(<span class=\"hljs-string\">&quot;/&quot;</span>)  <span class=\"hljs-comment\"># Remove leading/trailing whitespace &amp; slashes</span>\n    <span class=\"hljs-keyword\">if</span> new_olid.count(<span class=\"hljs-string\">&quot;/&quot;</span>) != <span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{olid}</span> is not a valid Open Library olid&quot;</span>)\n    <span class=\"hljs-keyword\">return</span> requests.get(<span class=\"hljs-string\">f&quot;https://openlibrary.org/<span class=\"hljs-subst\">{new_olid}</span>.json&quot;</span>).json()\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">summarize_book</span>(<span class=\"hljs-params\">ol_book_data: <span class=\"hljs-built_in\">dict</span></span>) -&gt; <span class=\"hljs-built_in\">dict</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n     Given Open Library book data, return a summary as a Python dict.\n\n    &gt;&gt;&gt; pass  # Placate https://github.com/apps/algorithms-keeper\n    &quot;&quot;&quot;</span>\n    desired_keys = {\n        <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Title&quot;</span>,\n        <span class=\"hljs-string\">&quot;publish_date&quot;</span>: <span class=\"hljs-string\">&quot;Publish date&quot;</span>,\n        <span class=\"hljs-string\">&quot;authors&quot;</span>: <span class=\"hljs-string\">&quot;Authors&quot;</span>,\n        <span class=\"hljs-string\">&quot;number_of_pages&quot;</span>: <span class=\"hljs-string\">&quot;Number of pages:&quot;</span>,\n        <span class=\"hljs-string\">&quot;first_sentence&quot;</span>: <span class=\"hljs-string\">&quot;First sentence&quot;</span>,\n        <span class=\"hljs-string\">&quot;isbn_10&quot;</span>: <span class=\"hljs-string\">&quot;ISBN (10)&quot;</span>,\n        <span class=\"hljs-string\">&quot;isbn_13&quot;</span>: <span class=\"hljs-string\">&quot;ISBN (13)&quot;</span>,\n    }\n    data = {better_key: ol_book_data[key] <span class=\"hljs-keyword\">for</span> key, better_key <span class=\"hljs-keyword\">in</span> desired_keys.items()}\n    data[<span class=\"hljs-string\">&quot;Authors&quot;</span>] = [\n        get_openlibrary_data(author[<span class=\"hljs-string\">&quot;key&quot;</span>])[<span class=\"hljs-string\">&quot;name&quot;</span>] <span class=\"hljs-keyword\">for</span> author <span class=\"hljs-keyword\">in</span> data[<span class=\"hljs-string\">&quot;Authors&quot;</span>]\n    ]\n    data[<span class=\"hljs-string\">&quot;First sentence&quot;</span>] = data[<span class=\"hljs-string\">&quot;First sentence&quot;</span>][<span class=\"hljs-string\">&quot;value&quot;</span>]\n    <span class=\"hljs-keyword\">for</span> key, value <span class=\"hljs-keyword\">in</span> data.items():\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">isinstance</span>(value, <span class=\"hljs-built_in\">list</span>):\n            data[key] = <span class=\"hljs-string\">&quot;, &quot;</span>.join(value)\n    <span class=\"hljs-keyword\">return</span> data\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-keyword\">import</span> doctest\n\n    doctest.testmod()\n\n    <span class=\"hljs-keyword\">while</span> <span class=\"hljs-literal\">True</span>:\n        isbn = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;\\nEnter the ISBN code to search (or &#x27;quit&#x27; to stop): &quot;</span>).strip()\n        <span class=\"hljs-keyword\">if</span> isbn.lower() <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-string\">&quot;&quot;</span>, <span class=\"hljs-string\">&quot;q&quot;</span>, <span class=\"hljs-string\">&quot;quit&quot;</span>, <span class=\"hljs-string\">&quot;exit&quot;</span>, <span class=\"hljs-string\">&quot;stop&quot;</span>):\n            <span class=\"hljs-keyword\">break</span>\n\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(isbn) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">13</span>) <span class=\"hljs-keyword\">or</span> <span class=\"hljs-keyword\">not</span> isbn.isdigit():\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Sorry, <span class=\"hljs-subst\">{isbn}</span> is not a valid ISBN.  Please, input a valid ISBN.&quot;</span>)\n            <span class=\"hljs-keyword\">continue</span>\n\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;\\nSearching Open Library for ISBN: <span class=\"hljs-subst\">{isbn}</span>...\\n&quot;</span>)\n\n        <span class=\"hljs-keyword\">try</span>:\n            book_summary = summarize_book(get_openlibrary_data(<span class=\"hljs-string\">f&quot;isbn/<span class=\"hljs-subst\">{isbn}</span>&quot;</span>))\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>.join(<span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{key}</span>: <span class=\"hljs-subst\">{value}</span>&quot;</span> <span class=\"hljs-keyword\">for</span> key, value <span class=\"hljs-keyword\">in</span> book_summary.items()))\n        <span class=\"hljs-keyword\">except</span> JSONDecodeError:  <span class=\"hljs-comment\"># Workaround for requests.exceptions.RequestException:</span>\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Sorry, there are no results for ISBN: <span class=\"hljs-subst\">{isbn}</span>.&quot;</span>)\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Rohan R Bharadwaj",
      "email": "rohanrbharadwaj@gmail.com",
      "commits": 1
    },
    {
      "name": "Kelly Costa",
      "email": "kellydosocorro@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}