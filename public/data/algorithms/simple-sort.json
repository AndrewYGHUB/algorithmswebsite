{
  "slug": "simple-sort",
  "name": "Simple Sort",
  "categories": [
    "sorts"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/sorts/SimpleSort.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/sorts/SimpleSort.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.sorts;\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-keyword\">static</span> com.thealgorithms.sorts.SortUtils.*;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SimpleSort</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">SortAlgorithm</span> {\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-keyword\">public</span> &lt;T <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">Comparable</span>&lt;T&gt;&gt; T[] sort(T[] array) {\n        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">LENGTH</span> <span class=\"hljs-operator\">=</span> array.length;\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; LENGTH; i++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> i + <span class=\"hljs-number\">1</span>; j &lt; LENGTH; j++) {\n                <span class=\"hljs-keyword\">if</span> (less(array[j], array[i])) {\n                    <span class=\"hljs-type\">T</span> <span class=\"hljs-variable\">element</span> <span class=\"hljs-operator\">=</span> array[j];\n                    array[j] = array[i];\n                    array[i] = element;\n                }\n            }\n        }\n\n        <span class=\"hljs-keyword\">return</span> array;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n        <span class=\"hljs-comment\">// ==== Int =======</span>\n        Integer[] a = {<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">45</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">33</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">9</span>};\n        System.out.print(<span class=\"hljs-string\">&quot;unsorted: &quot;</span>);\n        print(a);\n        System.out.println();\n\n        <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SimpleSort</span>().sort(a);\n        System.out.print(<span class=\"hljs-string\">&quot;sorted: &quot;</span>);\n        print(a);\n        System.out.println();\n\n        <span class=\"hljs-comment\">// ==== String =======</span>\n        String[] b = {<span class=\"hljs-string\">&quot;banana&quot;</span>, <span class=\"hljs-string\">&quot;berry&quot;</span>, <span class=\"hljs-string\">&quot;orange&quot;</span>, <span class=\"hljs-string\">&quot;grape&quot;</span>, <span class=\"hljs-string\">&quot;peach&quot;</span>, <span class=\"hljs-string\">&quot;cherry&quot;</span>, <span class=\"hljs-string\">&quot;apple&quot;</span>, <span class=\"hljs-string\">&quot;pineapple&quot;</span>};\n        System.out.print(<span class=\"hljs-string\">&quot;unsorted: &quot;</span>);\n        print(b);\n        System.out.println();\n\n        <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SimpleSort</span>().sort(b);\n        System.out.print(<span class=\"hljs-string\">&quot;sorted: &quot;</span>);\n        print(b);\n    }\n}\n"
    },
    "go": {
      "dir": "sort/simplesort.go",
      "url": "https://github.com/TheAlgorithms/go/tree/master/sort/simplesort.go",
      "code": "<span class=\"hljs-comment\">// simplesort.go</span>\n<span class=\"hljs-comment\">// description: Implementation of a simple sorting algorithm</span>\n<span class=\"hljs-comment\">// details:</span>\n<span class=\"hljs-comment\">// A simple sorting algorithm that look counter intuitive at first glance and very similar to Exchange Sort</span>\n<span class=\"hljs-comment\">// An improved version is included with slight changes to make the sort slightly more efficient</span>\n<span class=\"hljs-comment\">// reference: https://arxiv.org/abs/2110.01111v1</span>\n<span class=\"hljs-comment\">// see sort_test.go for a test implementation, test function TestSimple and TestImprovedSimple</span>\n\n<span class=\"hljs-keyword\">package</span> sort\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;github.com/TheAlgorithms/Go/constraints&quot;</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">Simple</span>[<span class=\"hljs-title\">T</span> <span class=\"hljs-title\">constraints</span>.<span class=\"hljs-title\">Ordered</span>]<span class=\"hljs-params\">(arr []T)</span></span> []T {\n\t<span class=\"hljs-keyword\">for</span> i := <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-built_in\">len</span>(arr); i++ {\n\t\t<span class=\"hljs-keyword\">for</span> j := <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-built_in\">len</span>(arr); j++ {\n\t\t\t<span class=\"hljs-keyword\">if</span> arr[i] &lt; arr[j] {\n\t\t\t\t<span class=\"hljs-comment\">// swap arr[i] and arr[j]</span>\n\t\t\t\tarr[i], arr[j] = arr[j], arr[i]\n\t\t\t}\n\t\t}\n\t}\n\t<span class=\"hljs-keyword\">return</span> arr\n}\n\n<span class=\"hljs-comment\">// ImprovedSimple is a improve SimpleSort by skipping an unnecessary comparison of the first and last.</span>\n<span class=\"hljs-comment\">// This improved version is more similar to implementation of insertion sort</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">ImprovedSimple</span>[<span class=\"hljs-title\">T</span> <span class=\"hljs-title\">constraints</span>.<span class=\"hljs-title\">Ordered</span>]<span class=\"hljs-params\">(arr []T)</span></span> []T {\n\t<span class=\"hljs-keyword\">for</span> i := <span class=\"hljs-number\">1</span>; i &lt; <span class=\"hljs-built_in\">len</span>(arr); i++ {\n\t\t<span class=\"hljs-keyword\">for</span> j := <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-built_in\">len</span>(arr)<span class=\"hljs-number\">-1</span>; j++ {\n\t\t\t<span class=\"hljs-keyword\">if</span> arr[i] &lt; arr[j] {\n\t\t\t\t<span class=\"hljs-comment\">// swap arr[i] and arr[j]</span>\n\t\t\t\tarr[i], arr[j] = arr[j], arr[i]\n\t\t\t}\n\t\t}\n\t}\n\t<span class=\"hljs-keyword\">return</span> arr\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Florian",
      "email": "38241786+Flonator3000@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}