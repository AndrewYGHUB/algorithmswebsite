{
  "slug": "simplex-standard",
  "name": "Simplex Standard",
  "categories": [
    "others"
  ],
  "body": {
    "all": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><p>This is a notebook to solve linear programming problem using the simmplex method. The inputs are supplied in the form of standard LPP that is the objective shooulf be of maximization type and all the constraints should be of &lt;= type.\nExample being:</p>\n<p>maximize z: 3<em>x1 + 4</em>x2</p>\n<pre><code>  s.t.: 5*x1+ 4*x2&lt;=15\n  ...\n  \n</code></pre>\n<p>Here a sample problem is solved:\nMaximize\tP\t=\t20x1\t+\t10x2\t+\t15x3\t</p>\n<p>Subject to: </p>\n<p>3x1\t+\t2x2\t+\t5x3\t≤\t55</p>\n<p>2x1\t+\tx2\t+\tx3\t≤\t26</p>\n<p>x1\t+\tx2\t+\t3x3\t≤\t30</p>\n<p>5x1\t+\t2x2\t+\t4x3\t≤\t57</p>\n<p>x1\t,\tx2\t,\tx3\t≥\t0</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"enter-data-for-the-simplex\">Enter data for the simplex:</h1>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">num_vars = <span class=\"hljs-literal\">None</span> <span class=\"hljs-comment\"># 3 here</span>\ncost_vector = <span class=\"hljs-literal\">None</span> <span class=\"hljs-comment\">#[20 10 15]</span>\nnum_consts = <span class=\"hljs-literal\">None</span> <span class=\"hljs-comment\"># 4</span>\nA = <span class=\"hljs-literal\">None</span> <span class=\"hljs-comment\">#[[3 2 5],[2 1 1], [1 1 3],[5 2 4]]</span>\nb = <span class=\"hljs-literal\">None</span> <span class=\"hljs-comment\">#[55 26 30 57]</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Enter the Linear programming data in standard form: \"</span>)\nnum_vars = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">'Number of variables: '</span>))\n\ncost_vector = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">'Coefficients of the decision variables in cost function: '</span>)\ncost_vector = cost_vector.split(<span class=\"hljs-string\">' '</span>)\ncost_vector = [<span class=\"hljs-built_in\">int</span>(i) <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> cost_vector]\ncost_vector = np.array(cost_vector)\n\nnum_consts = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">'Number of constraints: '</span>))\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Inequality constraints data: \"</span>)\n\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Enter the matrix of coefficients: '</span>)\n\nA = np.zeros((num_consts,num_vars))\n\n<span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(num_consts):\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Constraint: \"</span>+<span class=\"hljs-built_in\">str</span>(i+<span class=\"hljs-number\">1</span>))\n    x = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">\"Coefficients: \"</span>)\n    x = x.split(<span class=\"hljs-string\">' '</span>)\n    x = [<span class=\"hljs-built_in\">float</span>(k) <span class=\"hljs-keyword\">for</span> k <span class=\"hljs-keyword\">in</span> x]\n    <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(num_vars):\n        A[i][j] = x[j]\n\n\nb = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">\"Enter the RHS: \"</span>)\nb = b.split(<span class=\"hljs-string\">' '</span>)\nb = [<span class=\"hljs-built_in\">float</span>(k) <span class=\"hljs-keyword\">for</span> k <span class=\"hljs-keyword\">in</span> b]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-stdout\"><span class=\"hljs-attribute\">Enter</span> the Linear programming data in standard form: \n<span class=\"hljs-attribute\">Number</span> of variables: <span class=\"hljs-number\">3</span>\n<span class=\"hljs-attribute\">Coefficients</span> of the decision variables in cost function: <span class=\"hljs-number\">20</span> <span class=\"hljs-number\">10</span> <span class=\"hljs-number\">15</span>\n<span class=\"hljs-attribute\">Number</span> of constraints: <span class=\"hljs-number\">4</span>\n<span class=\"hljs-attribute\">Inequality</span> constraints data: \n<span class=\"hljs-attribute\">Enter</span> the matrix of coefficients: \n<span class=\"hljs-attribute\">Constraint</span>: <span class=\"hljs-number\">1</span>\n<span class=\"hljs-attribute\">Coefficients</span>: <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">5</span>\n<span class=\"hljs-attribute\">Constraint</span>: <span class=\"hljs-number\">2</span>\n<span class=\"hljs-attribute\">Coefficients</span>: <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">1</span>\n<span class=\"hljs-attribute\">Constraint</span>: <span class=\"hljs-number\">3</span>\n<span class=\"hljs-attribute\">Coefficients</span>: <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">3</span>\n<span class=\"hljs-attribute\">Constraint</span>: <span class=\"hljs-number\">4</span>\n<span class=\"hljs-attribute\">Coefficients</span>: <span class=\"hljs-number\">5</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">4</span>\n<span class=\"hljs-attribute\">Enter</span> the RHS: <span class=\"hljs-number\">55</span> <span class=\"hljs-number\">26</span> <span class=\"hljs-number\">30</span> <span class=\"hljs-number\">57</span>\n</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">A_ = A.copy()\nb_ = b.copy()</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"enter-again-from-here-on-the-same-data\">Enter again from here on the same data:</h1>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"5\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">A = A_.copy()\nb = b_.copy()</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">num_le = num_consts\nnum_eq = <span class=\"hljs-number\">0</span>\nnum_ge = <span class=\"hljs-number\">0</span>\n\n\n\nv_slack = []\nA_slacks = np.zeros((num_consts,num_consts))\nv_artificial = []\nA_surplus = np.zeros((num_consts,num_ge))\nv_bounds = []\n\n\n\n<span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span>  <span class=\"hljs-built_in\">range</span>(num_consts):\n    s = <span class=\"hljs-string\">'&amp;lt;='</span>\n\n    <span class=\"hljs-keyword\">if</span> s==<span class=\"hljs-string\">'&amp;lt;='</span>:\n        v_slack.append(b[i])\n        A_slacks[i][<span class=\"hljs-built_in\">len</span>(v_slack)-<span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">elif</span> s==<span class=\"hljs-string\">'&amp;gt;='</span>:\n        v_slack.append(<span class=\"hljs-number\">0</span>)\n        A_slacks[i][<span class=\"hljs-built_in\">len</span>(v_slack)-<span class=\"hljs-number\">1</span>] = -<span class=\"hljs-number\">1</span>\n        v_artificial.append(b[i])\n        A_surplus[i][<span class=\"hljs-built_in\">len</span>(v_artificial)-<span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">else</span>:\n        v_artificial.append(b[i])\n        A_surplus[i][<span class=\"hljs-built_in\">len</span>(v_artificial)-<span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">1</span>\n    \n    v_bounds.append(b[i])\n\n\nA = np.hstack([A,A_slacks,A_surplus])\n\nvari = []\nvari_ar = []\nvari_slack = []\nvari_nb = []\n\nvariables = []\n<span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span>  <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(A[<span class=\"hljs-number\">0</span>])):\n    variables.append(<span class=\"hljs-string\">'x'</span>+<span class=\"hljs-built_in\">str</span>(i+<span class=\"hljs-number\">1</span>))\n    vari.append(<span class=\"hljs-string\">'x'</span>+<span class=\"hljs-built_in\">str</span>(i+<span class=\"hljs-number\">1</span>))\n    <span class=\"hljs-keyword\">if</span> i &amp;lt; num_vars:\n        vari_nb.append(<span class=\"hljs-string\">'x'</span>+<span class=\"hljs-built_in\">str</span>(i+<span class=\"hljs-number\">1</span>))\n    <span class=\"hljs-keyword\">elif</span> i&amp;lt; num_vars + <span class=\"hljs-built_in\">len</span>(v_slack):\n        vari_slack.append(<span class=\"hljs-string\">'x'</span>+<span class=\"hljs-built_in\">str</span>(i+<span class=\"hljs-number\">1</span>))\n    <span class=\"hljs-keyword\">else</span>:\n        vari_ar.append(<span class=\"hljs-string\">'x'</span>+<span class=\"hljs-built_in\">str</span>(i+<span class=\"hljs-number\">1</span>))\n\nall_vars = {}</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">v_a = <span class=\"hljs-number\">0</span>*cost_vector\nv_ar = <span class=\"hljs-literal\">None</span>\n\nx = np.hstack([v_a,v_slack,v_artificial])\n\n<span class=\"hljs-keyword\">for</span> v,val <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">zip</span>(variables,x):\n    all_vars[v] = val\n\n\n<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(v_artificial)==<span class=\"hljs-number\">0</span>:\n    v_ar = []\n<span class=\"hljs-keyword\">else</span>:\n    <span class=\"hljs-keyword\">if</span> type_problem == <span class=\"hljs-number\">1</span>:\n        v_ar = -<span class=\"hljs-number\">9999</span>*np.ones(<span class=\"hljs-built_in\">len</span>(v_artificial))\n    <span class=\"hljs-keyword\">else</span>:\n        v_ar = <span class=\"hljs-number\">9999</span>*np.ones(<span class=\"hljs-built_in\">len</span>(v_artificial))\n\nCj = np.hstack([cost_vector,<span class=\"hljs-number\">0</span>*np.array(v_slack),v_ar])\nCi = []\ntab1 = []\nVb = []\nQ = v_bounds\n\nstruct2_curr_values = np.zeros(<span class=\"hljs-built_in\">len</span>(Q))\nstruct2_var_base = [<span class=\"hljs-string\">''</span> <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(Q))]\n\n<span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(Q)):\n    tab1.append(<span class=\"hljs-string\">'|'</span>)\n    struct2_curr_values = Q[i]\n    ind = np.where(x==Q[i])\n    ind = ind[<span class=\"hljs-number\">0</span>]\n    ind = ind[<span class=\"hljs-number\">0</span>]\n\n    struct2_var_base[i] = variables[ind]\n    Vb.append(struct2_var_base[i])\n    Ci.append(Cj[ind])</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">Ci = np.array(Ci)\n\nZ = <span class=\"hljs-built_in\">sum</span>(np.multiply(Ci,Q))\nZj = np.zeros(<span class=\"hljs-built_in\">len</span>(Cj))\n\n<span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(Cj)):\n    Zj[i] = <span class=\"hljs-built_in\">sum</span>(np.multiply(Ci,A[:,i])) \nvars_at_moment = struct2_var_base.copy()</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"9\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_row</span>(<span class=\"hljs-params\">vec</span>):\n    k = <span class=\"hljs-string\">''</span>\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> vec:\n        k+= <span class=\"hljs-string\">'{0:&amp;gt;10}'</span>.<span class=\"hljs-built_in\">format</span>(<span class=\"hljs-built_in\">round</span>(i,<span class=\"hljs-number\">3</span>))\n    <span class=\"hljs-keyword\">return</span> k</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"=========LP in standard form:=========\"</span>)\n\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"variables: \"</span>,vari)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Activity variables: \"</span>,vari_nb)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Slack variables: \"</span>,vari_slack)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Artificial variables: \"</span>,vari_ar)\n\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"======Iteration: 0======\"</span>)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Initializing variables: \"</span>,vari)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Activity variables: \"</span>,[all_vars[v] <span class=\"hljs-keyword\">for</span> v <span class=\"hljs-keyword\">in</span> vari_nb])\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Slack variables: \"</span>,vari_slack,[all_vars[v] <span class=\"hljs-keyword\">for</span> v <span class=\"hljs-keyword\">in</span> vari_slack])\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Artificial variables: \"</span>,v_ar)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'======================================================================================================='</span>)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Variables:                              \"</span>,get_row(np.arange(start=<span class=\"hljs-number\">1</span>,stop=<span class=\"hljs-built_in\">len</span>(A[<span class=\"hljs-number\">0</span>,:])+<span class=\"hljs-number\">1</span>,step = <span class=\"hljs-number\">1</span> )))\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Cj:                                     \"</span>,get_row(Cj))\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Basic        |Value       |RHS\"</span>)\n<span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(num_consts):\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'|'</span>,<span class=\"hljs-string\">\"{0:&amp;gt;10}\"</span>.<span class=\"hljs-built_in\">format</span>(vars_at_moment[i]),<span class=\"hljs-string\">'|'</span>,<span class=\"hljs-string\">\"{0:&amp;gt;10}\"</span>.<span class=\"hljs-built_in\">format</span>(Ci[i]),<span class=\"hljs-string\">'|'</span>,<span class=\"hljs-string\">\"{0:&amp;gt;10}\"</span>.<span class=\"hljs-built_in\">format</span>(<span class=\"hljs-built_in\">round</span>(Q[i],<span class=\"hljs-number\">3</span>)),<span class=\"hljs-string\">'|'</span>,get_row(A[i]),<span class=\"hljs-string\">'|'</span>)\n\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'======================================================================================================='</span>)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Zj:                                     '</span>,get_row(Zj))\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Cj-Zj:                                  '</span>,get_row(Cj-Zj))\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Z: '</span>,<span class=\"hljs-built_in\">round</span>(Z,<span class=\"hljs-number\">3</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-stdout\">=========<span class=\"hljs-type\">LP</span> in standard form:=========\nvariables:  [&amp;<span class=\"hljs-symbol\">#x27</span>;x1&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x2&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x3&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x4&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x5&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x6&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x7&amp;<span class=\"hljs-symbol\">#x27</span>;]\n<span class=\"hljs-type\">Activity</span> variables:  [&amp;<span class=\"hljs-symbol\">#x27</span>;x1&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x2&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x3&amp;<span class=\"hljs-symbol\">#x27</span>;]\n<span class=\"hljs-type\">Slack</span> variables:  [&amp;<span class=\"hljs-symbol\">#x27</span>;x4&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x5&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x6&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x7&amp;<span class=\"hljs-symbol\">#x27</span>;]\n<span class=\"hljs-type\">Artificial</span> variables:  []\n======<span class=\"hljs-type\">Iteration</span>: <span class=\"hljs-number\">0</span>======\n<span class=\"hljs-type\">Initializing</span> variables:  [&amp;<span class=\"hljs-symbol\">#x27</span>;x1&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x2&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x3&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x4&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x5&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x6&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x7&amp;<span class=\"hljs-symbol\">#x27</span>;]\n<span class=\"hljs-type\">Activity</span> variables:  [<span class=\"hljs-number\">0.0</span>, <span class=\"hljs-number\">0.0</span>, <span class=\"hljs-number\">0.0</span>]\n<span class=\"hljs-type\">Slack</span> variables:  [&amp;<span class=\"hljs-symbol\">#x27</span>;x4&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x5&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x6&amp;<span class=\"hljs-symbol\">#x27</span>;, &amp;<span class=\"hljs-symbol\">#x27</span>;x7&amp;<span class=\"hljs-symbol\">#x27</span>;] [<span class=\"hljs-number\">55.0</span>, <span class=\"hljs-number\">26.0</span>, <span class=\"hljs-number\">30.0</span>, <span class=\"hljs-number\">57.0</span>]\n<span class=\"hljs-type\">Artificial</span> variables:  []\n=======================================================================================================\n<span class=\"hljs-type\">Variables</span>:                                        <span class=\"hljs-number\">1</span>         <span class=\"hljs-number\">2</span>         <span class=\"hljs-number\">3</span>         <span class=\"hljs-number\">4</span>         <span class=\"hljs-number\">5</span>         <span class=\"hljs-number\">6</span>         <span class=\"hljs-number\">7</span>\n<span class=\"hljs-type\">Cj</span>:                                            <span class=\"hljs-number\">20.0</span>      <span class=\"hljs-number\">10.0</span>      <span class=\"hljs-number\">15.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>\n<span class=\"hljs-type\">Basic</span>        |<span class=\"hljs-type\">Value</span>       |<span class=\"hljs-type\">RHS</span>\n|         x4 |        <span class=\"hljs-number\">0.0</span> |       <span class=\"hljs-number\">55.0</span> |        <span class=\"hljs-number\">3.0</span>       <span class=\"hljs-number\">2.0</span>       <span class=\"hljs-number\">5.0</span>       <span class=\"hljs-number\">1.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span> |\n|         x5 |        <span class=\"hljs-number\">0.0</span> |       <span class=\"hljs-number\">26.0</span> |        <span class=\"hljs-number\">2.0</span>       <span class=\"hljs-number\">1.0</span>       <span class=\"hljs-number\">1.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">1.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span> |\n|         x6 |        <span class=\"hljs-number\">0.0</span> |       <span class=\"hljs-number\">30.0</span> |        <span class=\"hljs-number\">1.0</span>       <span class=\"hljs-number\">1.0</span>       <span class=\"hljs-number\">3.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">1.0</span>       <span class=\"hljs-number\">0.0</span> |\n|         x7 |        <span class=\"hljs-number\">0.0</span> |       <span class=\"hljs-number\">57.0</span> |        <span class=\"hljs-number\">5.0</span>       <span class=\"hljs-number\">2.0</span>       <span class=\"hljs-number\">4.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">1.0</span> |\n=======================================================================================================\n<span class=\"hljs-type\">Zj</span>:                                             <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>\n<span class=\"hljs-type\">Cj</span>-<span class=\"hljs-type\">Zj</span>:                                         <span class=\"hljs-number\">20.0</span>      <span class=\"hljs-number\">10.0</span>      <span class=\"hljs-number\">15.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>       <span class=\"hljs-number\">0.0</span>\n<span class=\"hljs-type\">Z</span>:  <span class=\"hljs-number\">0.0</span>\n</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">iterNum = <span class=\"hljs-number\">1</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">\n<span class=\"hljs-keyword\">while</span> iterNum&amp;lt;=<span class=\"hljs-number\">10</span>:\n    iterNum+=<span class=\"hljs-number\">1</span>\n    type_problem = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">if</span> type_problem == <span class=\"hljs-number\">1</span>:\n        num = <span class=\"hljs-built_in\">max</span>(Cj-Zj)\n        index = np.where((Cj-Zj)==num)\n        index = index[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>]\n        v_enter = variables[index]\n    <span class=\"hljs-keyword\">else</span>:\n        num = <span class=\"hljs-built_in\">min</span>(Cj-Zj)\n        index = np.where((Cj-Zj)==num)\n        index = index[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>]\n        v_enter = variables[index]\n    \n    b = A[:,index]\n    k = -<span class=\"hljs-number\">1</span>\n    d = <span class=\"hljs-number\">10000</span>\n    \n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(Q)):\n        <span class=\"hljs-keyword\">if</span> b[i]&amp;gt;<span class=\"hljs-number\">0</span>:\n            div = Q[i]/b[i]\n            <span class=\"hljs-keyword\">if</span> d&amp;gt;=div:\n                d = div\n                k = i\n    <span class=\"hljs-keyword\">if</span> k == -<span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Solution is infinty '</span>)\n        <span class=\"hljs-keyword\">break</span>\n    <span class=\"hljs-keyword\">else</span>:\n        num2 = k\n    \n    v_leave = struct2_var_base[num2]\n    struct2_var_base[num2] = v_enter\n    pivot = A[num2,index]\n    Ci[num2] = Cj[index]\n    A[num2,:] = A[num2,:]/pivot\n    Q[num2] = Q[num2]/pivot\n    \n    <span class=\"hljs-comment\">#Row operations:</span>\n    \n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(num_consts):\n        \n        <span class=\"hljs-keyword\">if</span> i!= num2:\n            Q[i] = Q[i] - A[i,index]*Q[num2]\n            A[i,:] = A[i,:] - A[i,index]*A[num2,:]\n    Z = <span class=\"hljs-built_in\">sum</span>(np.multiply(Ci,Q))\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span>  <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(A[<span class=\"hljs-number\">0</span>,:])):\n        Zj[i] = <span class=\"hljs-built_in\">sum</span>(np.multiply(A[:,i],Ci))\n    \n    vars_at_moment = []\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(num_consts):\n        vars_at_moment.append(struct2_var_base[i])\n    \n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'=====Iteration'</span>,iterNum,<span class=\"hljs-string\">'======='</span>)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Enter: '</span>,v_enter)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Leave: '</span>,v_leave)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Pivot: '</span>,<span class=\"hljs-built_in\">round</span>(pivot,<span class=\"hljs-number\">3</span>))\n    \n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'========'</span>)\n\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'======================================================================================================='</span>)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Variables:                              \"</span>,get_row(np.arange(start=<span class=\"hljs-number\">1</span>,stop=<span class=\"hljs-built_in\">len</span>(A[<span class=\"hljs-number\">0</span>,:])+<span class=\"hljs-number\">1</span>,step = <span class=\"hljs-number\">1</span> )))\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Cj:                                     \"</span>,get_row(Cj))\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Basic        |Value       |RHS\"</span>)\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(num_consts):\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'|'</span>,<span class=\"hljs-string\">\"{0:&amp;gt;10}\"</span>.<span class=\"hljs-built_in\">format</span>(vars_at_moment[i]),<span class=\"hljs-string\">'|'</span>,<span class=\"hljs-string\">\"{0:&amp;gt;10}\"</span>.<span class=\"hljs-built_in\">format</span>(Ci[i]),<span class=\"hljs-string\">'|'</span>,<span class=\"hljs-string\">\"{0:&amp;gt;10}\"</span>.<span class=\"hljs-built_in\">format</span>(<span class=\"hljs-built_in\">round</span>(Q[i],<span class=\"hljs-number\">3</span>)),<span class=\"hljs-string\">'|'</span>,get_row(A[i]),<span class=\"hljs-string\">'|'</span>)\n\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'======================================================================================================='</span>)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Zj:                                     '</span>,get_row(Zj))\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Cj-Zj:                                  '</span>,get_row(Cj-Zj))\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'Z: '</span>,<span class=\"hljs-built_in\">round</span>(Z,<span class=\"hljs-number\">3</span>))\n    <span class=\"hljs-keyword\">if</span> type_problem ==<span class=\"hljs-number\">1</span>:\n        temp = <span class=\"hljs-built_in\">max</span>(Cj-Zj)\n        <span class=\"hljs-keyword\">if</span> temp&amp;lt;=<span class=\"hljs-number\">0</span>:\n            <span class=\"hljs-keyword\">break</span>\n    <span class=\"hljs-keyword\">else</span>:\n        temp = <span class=\"hljs-built_in\">min</span>(Cj-Zj)\n        <span class=\"hljs-keyword\">if</span> temp&amp;gt;=<span class=\"hljs-number\">0</span>:\n            <span class=\"hljs-keyword\">break</span>\n    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-stdout\">=====Iteration 2 =======\nEnter:  x1\nLeave:  x7\nPivot:  5.0\n========\n=======================================================================================================\nVariables:                                        1         2         3         4         5         6         7\nCj:                                            20.0      10.0      15.0       0.0       0.0       0.0       0.0\nBasic        |<span class=\"hljs-string\">Value       </span>|RHS\n|<span class=\"hljs-string\">         x4 </span>|<span class=\"hljs-string\">        0.0 </span>|<span class=\"hljs-string\">       20.8 </span>|<span class=\"hljs-string\">        0.0       0.8       2.6       1.0       0.0       0.0      -0.6 </span>|\n|<span class=\"hljs-string\">         x5 </span>|<span class=\"hljs-string\">        0.0 </span>|<span class=\"hljs-string\">        3.2 </span>|<span class=\"hljs-string\">        0.0       0.2      -0.6       0.0       1.0       0.0      -0.4 </span>|\n|<span class=\"hljs-string\">         x6 </span>|<span class=\"hljs-string\">        0.0 </span>|<span class=\"hljs-string\">       18.6 </span>|<span class=\"hljs-string\">        0.0       0.6       2.2       0.0       0.0       1.0      -0.2 </span>|\n|<span class=\"hljs-string\">         x1 </span>|<span class=\"hljs-string\">       20.0 </span>|<span class=\"hljs-string\">       11.4 </span>|<span class=\"hljs-string\">        1.0       0.4       0.8       0.0       0.0       0.0       0.2 </span>|\n=======================================================================================================\nZj:                                            20.0       8.0      16.0       0.0       0.0       0.0       4.0\nCj-Zj:                                          0.0       2.0      -1.0       0.0       0.0       0.0      -4.0\nZ:  228.0\n=====Iteration 3 =======\nEnter:  x2\nLeave:  x5\nPivot:  0.2\n========\n=======================================================================================================\nVariables:                                        1         2         3         4         5         6         7\nCj:                                            20.0      10.0      15.0       0.0       0.0       0.0       0.0\nBasic        |<span class=\"hljs-string\">Value       </span>|RHS\n|<span class=\"hljs-string\">         x4 </span>|<span class=\"hljs-string\">        0.0 </span>|<span class=\"hljs-string\">        8.0 </span>|<span class=\"hljs-string\">        0.0       0.0       5.0       1.0      -4.0       0.0       1.0 </span>|\n|<span class=\"hljs-string\">         x2 </span>|<span class=\"hljs-string\">       10.0 </span>|<span class=\"hljs-string\">       16.0 </span>|<span class=\"hljs-string\">        0.0       1.0      -3.0       0.0       5.0       0.0      -2.0 </span>|\n|<span class=\"hljs-string\">         x6 </span>|<span class=\"hljs-string\">        0.0 </span>|<span class=\"hljs-string\">        9.0 </span>|<span class=\"hljs-string\">        0.0       0.0       4.0       0.0      -3.0       1.0       1.0 </span>|\n|<span class=\"hljs-string\">         x1 </span>|<span class=\"hljs-string\">       20.0 </span>|<span class=\"hljs-string\">        5.0 </span>|<span class=\"hljs-string\">        1.0       0.0       2.0       0.0      -2.0       0.0       1.0 </span>|\n=======================================================================================================\nZj:                                            20.0      10.0      10.0       0.0      10.0       0.0       0.0\nCj-Zj:                                          0.0       0.0       5.0       0.0     -10.0       0.0       0.0\nZ:  260.0\n=====Iteration 4 =======\nEnter:  x3\nLeave:  x4\nPivot:  5.0\n========\n=======================================================================================================\nVariables:                                        1         2         3         4         5         6         7\nCj:                                            20.0      10.0      15.0       0.0       0.0       0.0       0.0\nBasic        |<span class=\"hljs-string\">Value       </span>|RHS\n|<span class=\"hljs-string\">         x3 </span>|<span class=\"hljs-string\">       15.0 </span>|<span class=\"hljs-string\">        1.6 </span>|<span class=\"hljs-string\">        0.0       0.0       1.0       0.2      -0.8       0.0       0.2 </span>|\n|<span class=\"hljs-string\">         x2 </span>|<span class=\"hljs-string\">       10.0 </span>|<span class=\"hljs-string\">       20.8 </span>|<span class=\"hljs-string\">        0.0       1.0       0.0       0.6       2.6       0.0      -1.4 </span>|\n|<span class=\"hljs-string\">         x6 </span>|<span class=\"hljs-string\">        0.0 </span>|<span class=\"hljs-string\">        2.6 </span>|<span class=\"hljs-string\">        0.0       0.0       0.0      -0.8       0.2       1.0       0.2 </span>|\n|<span class=\"hljs-string\">         x1 </span>|<span class=\"hljs-string\">       20.0 </span>|<span class=\"hljs-string\">        1.8 </span>|<span class=\"hljs-string\">        1.0       0.0       0.0      -0.4      -0.4       0.0       0.6 </span>|\n=======================================================================================================\nZj:                                            20.0      10.0      15.0       1.0       6.0       0.0       1.0\nCj-Zj:                                          0.0       0.0       0.0      -1.0      -6.0       0.0      -1.0\nZ:  268.0\n</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>"
  },
  "implementations": {
    "jupyter": {
      "dir": "other/Simplex_standard.ipynb",
      "url": "https://github.com/TheAlgorithms/jupyter/tree/master/other/Simplex_standard.ipynb",
      "code": "<span class=\"hljs-punctuation\">{</span>\n <span class=\"hljs-attr\">&quot;cells&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;This is a notebook to solve linear programming problem using the simmplex method. The inputs are supplied in the form of standard LPP that is the objective shooulf be of maximization type and all the constraints should be of &lt;= type.\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Example being:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;maximize z: 3*x1 + 4*x2\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;      s.t.: 5*x1+ 4*x2&lt;=15\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;      ...\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;      \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Here a sample problem is solved:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Maximize\\tP\\t=\\t20x1\\t+\\t10x2\\t+\\t15x3\\t\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Subject to: \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;3x1\\t+\\t2x2\\t+\\t5x3\\t≤\\t55\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;2x1\\t+\\tx2\\t+\\tx3\\t≤\\t26\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;x1\\t+\\tx2\\t+\\t3x3\\t≤\\t30\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;5x1\\t+\\t2x2\\t+\\t4x3\\t≤\\t57\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;x1\\t,\\tx2\\t,\\tx3\\t≥\\t0\\n&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;import numpy as np&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;# Enter data for the simplex:&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;num_vars = None # 3 here\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;cost_vector = None #[20 10 15]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;num_consts = None # 4\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;A = None #[[3 2 5],[2 1 1], [1 1 3],[5 2 4]]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;b = None #[55 26 30 57]&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-punctuation\">{</span>\n     <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;stdout&quot;</span><span class=\"hljs-punctuation\">,</span>\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;stream&quot;</span><span class=\"hljs-punctuation\">,</span>\n     <span class=\"hljs-attr\">&quot;text&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n      <span class=\"hljs-string\">&quot;Enter the Linear programming data in standard form: \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Number of variables: 3\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Coefficients of the decision variables in cost function: 20 10 15\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Number of constraints: 4\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Inequality constraints data: \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Enter the matrix of coefficients: \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Constraint: 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Coefficients: 3 2 5\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Constraint: 2\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Coefficients: 2 1 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Constraint: 3\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Coefficients: 1 1 3\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Constraint: 4\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Coefficients: 5 2 4\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Enter the RHS: 55 26 30 57\\n&quot;</span>\n     <span class=\"hljs-punctuation\">]</span>\n    <span class=\"hljs-punctuation\">}</span>\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Enter the Linear programming data in standard form: \\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;num_vars = int(input(&#x27;Number of variables: &#x27;))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;cost_vector = input(&#x27;Coefficients of the decision variables in cost function: &#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;cost_vector = cost_vector.split(&#x27; &#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;cost_vector = [int(i) for i in cost_vector]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;cost_vector = np.array(cost_vector)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;num_consts = int(input(&#x27;Number of constraints: &#x27;))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Inequality constraints data: \\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(&#x27;Enter the matrix of coefficients: &#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;A = np.zeros((num_consts,num_vars))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;for i in range(num_consts):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(\\&quot;Constraint: \\&quot;+str(i+1))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    x = input(\\&quot;Coefficients: \\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    x = x.split(&#x27; &#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    x = [float(k) for k in x]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for j in range(num_vars):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        A[i][j] = x[j]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;b = input(\\&quot;Enter the RHS: \\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;b = b.split(&#x27; &#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;b = [float(k) for k in b]&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;A_ = A.copy()\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;b_ = b.copy()&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;# Enter again from here on the same data:&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">5</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;A = A_.copy()\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;b = b_.copy()&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">6</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;num_le = num_consts\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;num_eq = 0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;num_ge = 0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;v_slack = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;A_slacks = np.zeros((num_consts,num_consts))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;v_artificial = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;A_surplus = np.zeros((num_consts,num_ge))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;v_bounds = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;for i in  range(num_consts):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    s = &#x27;&lt;=&#x27;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    if s==&#x27;&lt;=&#x27;:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        v_slack.append(b[i])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        A_slacks[i][len(v_slack)-1] = 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    elif s==&#x27;&gt;=&#x27;:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        v_slack.append(0)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        A_slacks[i][len(v_slack)-1] = -1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        v_artificial.append(b[i])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        A_surplus[i][len(v_artificial)-1] = 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    else:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        v_artificial.append(b[i])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        A_surplus[i][len(v_artificial)-1] = 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    v_bounds.append(b[i])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;A = np.hstack([A,A_slacks,A_surplus])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;vari = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;vari_ar = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;vari_slack = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;vari_nb = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;variables = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;for i in  range(len(A[0])):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    variables.append(&#x27;x&#x27;+str(i+1))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    vari.append(&#x27;x&#x27;+str(i+1))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    if i &lt; num_vars:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        vari_nb.append(&#x27;x&#x27;+str(i+1))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    elif i&lt; num_vars + len(v_slack):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        vari_slack.append(&#x27;x&#x27;+str(i+1))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    else:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        vari_ar.append(&#x27;x&#x27;+str(i+1))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;all_vars = {}&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;v_a = 0*cost_vector\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;v_ar = None\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;x = np.hstack([v_a,v_slack,v_artificial])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;for v,val in zip(variables,x):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    all_vars[v] = val\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;if len(v_artificial)==0:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    v_ar = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;else:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    if type_problem == 1:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        v_ar = -9999*np.ones(len(v_artificial))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    else:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        v_ar = 9999*np.ones(len(v_artificial))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Cj = np.hstack([cost_vector,0*np.array(v_slack),v_ar])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Ci = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;tab1 = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Vb = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Q = v_bounds\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;struct2_curr_values = np.zeros(len(Q))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;struct2_var_base = [&#x27;&#x27; for _ in range(len(Q))]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;for i in range(len(Q)):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    tab1.append(&#x27;|&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    struct2_curr_values = Q[i]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    ind = np.where(x==Q[i])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    ind = ind[0]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    ind = ind[0]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    struct2_var_base[i] = variables[ind]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    Vb.append(struct2_var_base[i])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    Ci.append(Cj[ind])&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">8</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;Ci = np.array(Ci)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Z = sum(np.multiply(Ci,Q))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;Zj = np.zeros(len(Cj))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;for i in range(len(Cj)):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    Zj[i] = sum(np.multiply(Ci,A[:,i])) \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;vars_at_moment = struct2_var_base.copy()&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">9</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;def get_row(vec):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    k = &#x27;&#x27;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for i in vec:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        k+= &#x27;{0:&gt;10}&#x27;.format(round(i,3))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    return k&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">10</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-punctuation\">{</span>\n     <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;stdout&quot;</span><span class=\"hljs-punctuation\">,</span>\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;stream&quot;</span><span class=\"hljs-punctuation\">,</span>\n     <span class=\"hljs-attr\">&quot;text&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n      <span class=\"hljs-string\">&quot;=========LP in standard form:=========\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;variables:  [&#x27;x1&#x27;, &#x27;x2&#x27;, &#x27;x3&#x27;, &#x27;x4&#x27;, &#x27;x5&#x27;, &#x27;x6&#x27;, &#x27;x7&#x27;]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Activity variables:  [&#x27;x1&#x27;, &#x27;x2&#x27;, &#x27;x3&#x27;]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Slack variables:  [&#x27;x4&#x27;, &#x27;x5&#x27;, &#x27;x6&#x27;, &#x27;x7&#x27;]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Artificial variables:  []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;======Iteration: 0======\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Initializing variables:  [&#x27;x1&#x27;, &#x27;x2&#x27;, &#x27;x3&#x27;, &#x27;x4&#x27;, &#x27;x5&#x27;, &#x27;x6&#x27;, &#x27;x7&#x27;]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Activity variables:  [0.0, 0.0, 0.0]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Slack variables:  [&#x27;x4&#x27;, &#x27;x5&#x27;, &#x27;x6&#x27;, &#x27;x7&#x27;] [55.0, 26.0, 30.0, 57.0]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Artificial variables:  []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;=======================================================================================================\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Variables:                                        1         2         3         4         5         6         7\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Cj:                                            20.0      10.0      15.0       0.0       0.0       0.0       0.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Basic        |Value       |RHS\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x4 |        0.0 |       55.0 |        3.0       2.0       5.0       1.0       0.0       0.0       0.0 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x5 |        0.0 |       26.0 |        2.0       1.0       1.0       0.0       1.0       0.0       0.0 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x6 |        0.0 |       30.0 |        1.0       1.0       3.0       0.0       0.0       1.0       0.0 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x7 |        0.0 |       57.0 |        5.0       2.0       4.0       0.0       0.0       0.0       1.0 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;=======================================================================================================\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Zj:                                             0.0       0.0       0.0       0.0       0.0       0.0       0.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Cj-Zj:                                         20.0      10.0      15.0       0.0       0.0       0.0       0.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Z:  0.0\\n&quot;</span>\n     <span class=\"hljs-punctuation\">]</span>\n    <span class=\"hljs-punctuation\">}</span>\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;=========LP in standard form:=========\\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;variables: \\&quot;,vari)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Activity variables: \\&quot;,vari_nb)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Slack variables: \\&quot;,vari_slack)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Artificial variables: \\&quot;,vari_ar)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;======Iteration: 0======\\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Initializing variables: \\&quot;,vari)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Activity variables: \\&quot;,[all_vars[v] for v in vari_nb])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Slack variables: \\&quot;,vari_slack,[all_vars[v] for v in vari_slack])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Artificial variables: \\&quot;,v_ar)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(&#x27;=======================================================================================================&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Variables:                              \\&quot;,get_row(np.arange(start=1,stop=len(A[0,:])+1,step = 1 )))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Cj:                                     \\&quot;,get_row(Cj))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(\\&quot;Basic        |Value       |RHS\\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;for i in range(num_consts):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;|&#x27;,\\&quot;{0:&gt;10}\\&quot;.format(vars_at_moment[i]),&#x27;|&#x27;,\\&quot;{0:&gt;10}\\&quot;.format(Ci[i]),&#x27;|&#x27;,\\&quot;{0:&gt;10}\\&quot;.format(round(Q[i],3)),&#x27;|&#x27;,get_row(A[i]),&#x27;|&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(&#x27;=======================================================================================================&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(&#x27;Zj:                                     &#x27;,get_row(Zj))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(&#x27;Cj-Zj:                                  &#x27;,get_row(Cj-Zj))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;print(&#x27;Z: &#x27;,round(Z,3))&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">11</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;iterNum = 1&quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">12</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-punctuation\">{</span>\n     <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;stdout&quot;</span><span class=\"hljs-punctuation\">,</span>\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;stream&quot;</span><span class=\"hljs-punctuation\">,</span>\n     <span class=\"hljs-attr\">&quot;text&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n      <span class=\"hljs-string\">&quot;=====Iteration 2 =======\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Enter:  x1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Leave:  x7\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Pivot:  5.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;========\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;=======================================================================================================\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Variables:                                        1         2         3         4         5         6         7\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Cj:                                            20.0      10.0      15.0       0.0       0.0       0.0       0.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Basic        |Value       |RHS\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x4 |        0.0 |       20.8 |        0.0       0.8       2.6       1.0       0.0       0.0      -0.6 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x5 |        0.0 |        3.2 |        0.0       0.2      -0.6       0.0       1.0       0.0      -0.4 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x6 |        0.0 |       18.6 |        0.0       0.6       2.2       0.0       0.0       1.0      -0.2 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x1 |       20.0 |       11.4 |        1.0       0.4       0.8       0.0       0.0       0.0       0.2 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;=======================================================================================================\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Zj:                                            20.0       8.0      16.0       0.0       0.0       0.0       4.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Cj-Zj:                                          0.0       2.0      -1.0       0.0       0.0       0.0      -4.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Z:  228.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;=====Iteration 3 =======\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Enter:  x2\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Leave:  x5\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Pivot:  0.2\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;========\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;=======================================================================================================\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Variables:                                        1         2         3         4         5         6         7\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Cj:                                            20.0      10.0      15.0       0.0       0.0       0.0       0.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Basic        |Value       |RHS\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x4 |        0.0 |        8.0 |        0.0       0.0       5.0       1.0      -4.0       0.0       1.0 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x2 |       10.0 |       16.0 |        0.0       1.0      -3.0       0.0       5.0       0.0      -2.0 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x6 |        0.0 |        9.0 |        0.0       0.0       4.0       0.0      -3.0       1.0       1.0 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x1 |       20.0 |        5.0 |        1.0       0.0       2.0       0.0      -2.0       0.0       1.0 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;=======================================================================================================\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Zj:                                            20.0      10.0      10.0       0.0      10.0       0.0       0.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Cj-Zj:                                          0.0       0.0       5.0       0.0     -10.0       0.0       0.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Z:  260.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;=====Iteration 4 =======\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Enter:  x3\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Leave:  x4\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Pivot:  5.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;========\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;=======================================================================================================\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Variables:                                        1         2         3         4         5         6         7\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Cj:                                            20.0      10.0      15.0       0.0       0.0       0.0       0.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Basic        |Value       |RHS\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x3 |       15.0 |        1.6 |        0.0       0.0       1.0       0.2      -0.8       0.0       0.2 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x2 |       10.0 |       20.8 |        0.0       1.0       0.0       0.6       2.6       0.0      -1.4 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x6 |        0.0 |        2.6 |        0.0       0.0       0.0      -0.8       0.2       1.0       0.2 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;|         x1 |       20.0 |        1.8 |        1.0       0.0       0.0      -0.4      -0.4       0.0       0.6 |\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;=======================================================================================================\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Zj:                                            20.0      10.0      15.0       1.0       6.0       0.0       1.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Cj-Zj:                                          0.0       0.0       0.0      -1.0      -6.0       0.0      -1.0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-string\">&quot;Z:  268.0\\n&quot;</span>\n     <span class=\"hljs-punctuation\">]</span>\n    <span class=\"hljs-punctuation\">}</span>\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;while iterNum&lt;=10:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    iterNum+=1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    type_problem = 1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    if type_problem == 1:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        num = max(Cj-Zj)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        index = np.where((Cj-Zj)==num)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        index = index[0][0]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        v_enter = variables[index]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    else:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        num = min(Cj-Zj)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        index = np.where((Cj-Zj)==num)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        index = index[0][0]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        v_enter = variables[index]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    b = A[:,index]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    k = -1\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    d = 10000\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for i in range(len(Q)):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        if b[i]&gt;0:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            div = Q[i]/b[i]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            if d&gt;=div:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;                d = div\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;                k = i\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    if k == -1:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        print(&#x27;Solution is infinty &#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        break\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    else:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        num2 = k\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    v_leave = struct2_var_base[num2]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    struct2_var_base[num2] = v_enter\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    pivot = A[num2,index]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    Ci[num2] = Cj[index]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    A[num2,:] = A[num2,:]/pivot\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    Q[num2] = Q[num2]/pivot\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    #Row operations:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for i in range(num_consts):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        if i!= num2:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            Q[i] = Q[i] - A[i,index]*Q[num2]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            A[i,:] = A[i,:] - A[i,index]*A[num2,:]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    Z = sum(np.multiply(Ci,Q))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for i in  range(len(A[0,:])):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        Zj[i] = sum(np.multiply(A[:,i],Ci))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    vars_at_moment = []\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for i in range(num_consts):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        vars_at_moment.append(struct2_var_base[i])\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;=====Iteration&#x27;,iterNum,&#x27;=======&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;Enter: &#x27;,v_enter)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;Leave: &#x27;,v_leave)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;Pivot: &#x27;,round(pivot,3))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;========&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;=======================================================================================================&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(\\&quot;Variables:                              \\&quot;,get_row(np.arange(start=1,stop=len(A[0,:])+1,step = 1 )))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(\\&quot;Cj:                                     \\&quot;,get_row(Cj))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(\\&quot;Basic        |Value       |RHS\\&quot;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    for i in range(num_consts):\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        print(&#x27;|&#x27;,\\&quot;{0:&gt;10}\\&quot;.format(vars_at_moment[i]),&#x27;|&#x27;,\\&quot;{0:&gt;10}\\&quot;.format(Ci[i]),&#x27;|&#x27;,\\&quot;{0:&gt;10}\\&quot;.format(round(Q[i],3)),&#x27;|&#x27;,get_row(A[i]),&#x27;|&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;=======================================================================================================&#x27;)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;Zj:                                     &#x27;,get_row(Zj))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;Cj-Zj:                                  &#x27;,get_row(Cj-Zj))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    print(&#x27;Z: &#x27;,round(Z,3))\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    if type_problem ==1:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        temp = max(Cj-Zj)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        if temp&lt;=0:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            break\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    else:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        temp = min(Cj-Zj)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;        if temp&gt;=0:\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;            break\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;    &quot;</span>\n   <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">null</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">null</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span>\n <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;kernelspec&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;display_name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Python 3&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;language&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python3&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;language_info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n   <span class=\"hljs-attr\">&quot;codemirror_mode&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ipython&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;version&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span>\n   <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;file_extension&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.py&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;mimetype&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;text/x-python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;nbconvert_exporter&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;pygments_lexer&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ipython3&quot;</span><span class=\"hljs-punctuation\">,</span>\n   <span class=\"hljs-attr\">&quot;version&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;3.8.3&quot;</span>\n  <span class=\"hljs-punctuation\">}</span>\n <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n <span class=\"hljs-attr\">&quot;nbformat&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span>\n <span class=\"hljs-attr\">&quot;nbformat_minor&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span>\n<span class=\"hljs-punctuation\">}</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Gowreesh Mago",
      "email": "gkrm2727@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}