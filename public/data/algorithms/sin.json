{
  "slug": "sin",
  "name": "Sin",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths/sin.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths/sin.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\nCalculate sin function.\n\nIt&#x27;s not a perfect function so I am rounding the result to 10 decimal places by default.\n\nFormula: sin(x) = x - x^3/3! + x^5/5! - x^7/7! + ...\nWhere: x = angle in randians.\n\nSource:\n    https://www.homeschoolmath.net/teaching/sine_calculator.php\n\n&quot;&quot;&quot;</span>\n\n<span class=\"hljs-keyword\">from</span> math <span class=\"hljs-keyword\">import</span> factorial, radians\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">sin</span>(<span class=\"hljs-params\">\n    angle_in_degrees: <span class=\"hljs-built_in\">float</span>, accuracy: <span class=\"hljs-built_in\">int</span> = <span class=\"hljs-number\">18</span>, rounded_values_count: <span class=\"hljs-built_in\">int</span> = <span class=\"hljs-number\">10</span>\n</span>) -&gt; <span class=\"hljs-built_in\">float</span>:\n    <span class=\"hljs-string\">&quot;&quot;&quot;\n    Implement sin function.\n\n    &gt;&gt;&gt; sin(0.0)\n    0.0\n    &gt;&gt;&gt; sin(90.0)\n    1.0\n    &gt;&gt;&gt; sin(180.0)\n    0.0\n    &gt;&gt;&gt; sin(270.0)\n    -1.0\n    &gt;&gt;&gt; sin(0.68)\n    0.0118679603\n    &gt;&gt;&gt; sin(1.97)\n    0.0343762121\n    &gt;&gt;&gt; sin(64.0)\n    0.8987940463\n    &gt;&gt;&gt; sin(9999.0)\n    -0.9876883406\n    &gt;&gt;&gt; sin(-689.0)\n    0.5150380749\n    &gt;&gt;&gt; sin(89.7)\n    0.9999862922\n    &quot;&quot;&quot;</span>\n    <span class=\"hljs-comment\"># Simplify the angle to be between 360 and -360 degrees.</span>\n    angle_in_degrees = angle_in_degrees - ((angle_in_degrees // <span class=\"hljs-number\">360.0</span>) * <span class=\"hljs-number\">360.0</span>)\n\n    <span class=\"hljs-comment\"># Converting from degrees to radians</span>\n    angle_in_radians = radians(angle_in_degrees)\n\n    result = angle_in_radians\n    a = <span class=\"hljs-number\">3</span>\n    b = -<span class=\"hljs-number\">1</span>\n\n    <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(accuracy):\n        result += (b * (angle_in_radians**a)) / factorial(a)\n\n        b = -b  <span class=\"hljs-comment\"># One positive term and the next will be negative and so on...</span>\n        a += <span class=\"hljs-number\">2</span>  <span class=\"hljs-comment\"># Increased by 2 for every term.</span>\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">round</span>(result, rounded_values_count)\n\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\n    <span class=\"hljs-built_in\">__import__</span>(<span class=\"hljs-string\">&quot;doctest&quot;</span>).testmod()\n"
    },
    "go": {
      "dir": "math/sin.go",
      "url": "https://github.com/TheAlgorithms/go/tree/master/math/sin.go",
      "code": "<span class=\"hljs-comment\">// author(s) [red_byte](https://github.com/i-redbyte)</span>\n<span class=\"hljs-comment\">// see sin_test.go</span>\n\n<span class=\"hljs-keyword\">package</span> math\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;math&quot;</span>\n\n<span class=\"hljs-comment\">// Sin returns the sine of the radian argument x. [See more](https://en.wikipedia.org/wiki/Sine_and_cosine)</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">Sin</span><span class=\"hljs-params\">(x <span class=\"hljs-type\">float64</span>)</span></span> <span class=\"hljs-type\">float64</span> {\n\t<span class=\"hljs-keyword\">return</span> Cos((math.Pi / <span class=\"hljs-number\">2</span>) - x)\n}\n"
    }
  },
  "contributors": [
    {
      "name": "zer0-x",
      "email": "65136727+zer0-x@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}