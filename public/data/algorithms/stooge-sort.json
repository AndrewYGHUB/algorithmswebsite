{
  "slug": "stooge-sort",
  "name": "Stooge Sort",
  "categories": [
    "sorts"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "sorts/stooge_sort.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/sorts/stooge_sort.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">stooge_sort</span>(<span class=\"hljs-params\">arr</span>):\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Examples:\r\n    &gt;&gt;&gt; stooge_sort([18.1, 0, -7.1, -1, 2, 2])\r\n    [-7.1, -1, 0, 2, 2, 18.1]\r\n\r\n    &gt;&gt;&gt; stooge_sort([])\r\n    []\r\n    &quot;&quot;&quot;</span>\r\n    stooge(arr, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(arr) - <span class=\"hljs-number\">1</span>)\r\n    <span class=\"hljs-keyword\">return</span> arr\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">stooge</span>(<span class=\"hljs-params\">arr, i, h</span>):\r\n\r\n    <span class=\"hljs-keyword\">if</span> i &gt;= h:\r\n        <span class=\"hljs-keyword\">return</span>\r\n\r\n    <span class=\"hljs-comment\"># If first element is smaller than the last then swap them</span>\r\n    <span class=\"hljs-keyword\">if</span> arr[i] &gt; arr[h]:\r\n        arr[i], arr[h] = arr[h], arr[i]\r\n\r\n    <span class=\"hljs-comment\"># If there are more than 2 elements in the array</span>\r\n    <span class=\"hljs-keyword\">if</span> h - i + <span class=\"hljs-number\">1</span> &gt; <span class=\"hljs-number\">2</span>:\r\n        t = (<span class=\"hljs-built_in\">int</span>)((h - i + <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">3</span>)\r\n\r\n        <span class=\"hljs-comment\"># Recursively sort first 2/3 elements</span>\r\n        stooge(arr, i, (h - t))\r\n\r\n        <span class=\"hljs-comment\"># Recursively sort last 2/3 elements</span>\r\n        stooge(arr, i + t, (h))\r\n\r\n        <span class=\"hljs-comment\"># Recursively sort first 2/3 elements</span>\r\n        stooge(arr, i, (h - t))\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    user_input = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter numbers separated by a comma:\\n&quot;</span>).strip()\r\n    unsorted = [<span class=\"hljs-built_in\">int</span>(item) <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> user_input.split(<span class=\"hljs-string\">&quot;,&quot;</span>)]\r\n    <span class=\"hljs-built_in\">print</span>(stooge_sort(unsorted))\r\n"
    },
    "javascript": {
      "dir": "Sorts/StoogeSort.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Sorts/StoogeSort.js",
      "code": "<span class=\"hljs-comment\">/*\n * Stooge Sort sorts an array based on divide and conquer principle\n * note the exceptionally bad time complexity\n * more information: https://en.wikipedia.org/wiki/Stooge_sort\n *\n */</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">stoogeSort</span> (items, leftEnd, rightEnd) {\n  <span class=\"hljs-keyword\">if</span> (items[rightEnd - <span class=\"hljs-number\">1</span>] &lt; items[leftEnd]) {\n    <span class=\"hljs-keyword\">const</span> temp = items[leftEnd]\n    items[leftEnd] = items[rightEnd - <span class=\"hljs-number\">1</span>]\n    items[rightEnd - <span class=\"hljs-number\">1</span>] = temp\n  }\n  <span class=\"hljs-keyword\">const</span> length = rightEnd - leftEnd\n  <span class=\"hljs-keyword\">if</span> (length &gt; <span class=\"hljs-number\">2</span>) {\n    <span class=\"hljs-keyword\">const</span> third = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(length / <span class=\"hljs-number\">3</span>)\n    <span class=\"hljs-title function_\">stoogeSort</span>(items, leftEnd, rightEnd - third)\n    <span class=\"hljs-title function_\">stoogeSort</span>(items, leftEnd + third, rightEnd)\n    <span class=\"hljs-title function_\">stoogeSort</span>(items, leftEnd, rightEnd - third)\n  }\n  <span class=\"hljs-keyword\">return</span> items\n}\n"
    },
    "java": {
      "dir": "src/main/java/com/thealgorithms/sorts/StoogeSort.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/sorts/StoogeSort.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.sorts;\n\n<span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@author</span> Amir Hassan (https://github.com/ahsNT)\n * <span class=\"hljs-doctag\">@see</span> SortAlgorithm\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">StoogeSort</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">SortAlgorithm</span> {\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-keyword\">public</span> &lt;T <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">Comparable</span>&lt;T&gt;&gt; T[] sort(T[] unsortedArray) {\n        sort(unsortedArray, <span class=\"hljs-number\">0</span>, unsortedArray.length);\n        <span class=\"hljs-keyword\">return</span> unsortedArray;\n    }\n\n    <span class=\"hljs-keyword\">public</span> &lt;T <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">Comparable</span>&lt;T&gt;&gt; T[] sort(T[] unsortedArray, <span class=\"hljs-type\">int</span> start, <span class=\"hljs-type\">int</span> end) {\n        <span class=\"hljs-keyword\">if</span> (SortUtils.less(unsortedArray[end - <span class=\"hljs-number\">1</span>], unsortedArray[start])) {\n            <span class=\"hljs-type\">T</span> <span class=\"hljs-variable\">temp</span> <span class=\"hljs-operator\">=</span> unsortedArray[start];\n            unsortedArray[start] = unsortedArray[end - <span class=\"hljs-number\">1</span>];\n            unsortedArray[end - <span class=\"hljs-number\">1</span>] = temp;\n        }\n\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">len</span> <span class=\"hljs-operator\">=</span> end - start;\n        <span class=\"hljs-keyword\">if</span> (len &gt; <span class=\"hljs-number\">2</span>) {\n            <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">third</span> <span class=\"hljs-operator\">=</span> len / <span class=\"hljs-number\">3</span>;\n            sort(unsortedArray, start, end - third);\n            sort(unsortedArray, start + third, end);\n            sort(unsortedArray, start, end - third);\n        }\n        <span class=\"hljs-keyword\">return</span> unsortedArray;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n        <span class=\"hljs-type\">StoogeSort</span> <span class=\"hljs-variable\">stoogeSort</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StoogeSort</span>();\n\n        Integer[] integerArray = {<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">84</span>, <span class=\"hljs-number\">53</span>, <span class=\"hljs-number\">953</span>, <span class=\"hljs-number\">64</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">202</span>};\n        <span class=\"hljs-comment\">// Print integerArray unsorted</span>\n        SortUtils.print(integerArray);\n\n        stoogeSort.sort(integerArray);\n        <span class=\"hljs-comment\">// Print integerArray sorted</span>\n        SortUtils.print(integerArray);\n\n        String[] stringArray = {<span class=\"hljs-string\">&quot;g&quot;</span>, <span class=\"hljs-string\">&quot;d&quot;</span>, <span class=\"hljs-string\">&quot;a&quot;</span>, <span class=\"hljs-string\">&quot;b&quot;</span>, <span class=\"hljs-string\">&quot;f&quot;</span>, <span class=\"hljs-string\">&quot;c&quot;</span>, <span class=\"hljs-string\">&quot;e&quot;</span>};\n        <span class=\"hljs-comment\">// Print stringArray unsorted</span>\n        SortUtils.print(stringArray);\n\n        stoogeSort.sort(stringArray);\n        <span class=\"hljs-comment\">// Print stringArray sorted</span>\n        SortUtils.print(stringArray);\n    }\n}\n"
    },
    "c": {
      "dir": "sorting/stooge_sort.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/sorting/stooge_sort.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">stoogesort</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[], <span class=\"hljs-type\">int</span>, <span class=\"hljs-type\">int</span>)</span>;\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\n{\n    <span class=\"hljs-type\">int</span> arr[<span class=\"hljs-number\">100</span>], i, n;\n\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;How many elements do you want to sort: &quot;</span>);\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;n);\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot; %d&quot;</span>, &amp;arr[i]);\n    stoogesort(arr, <span class=\"hljs-number\">0</span>, n - <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Sorted array : \\n&quot;</span>);\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)\n    {\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d &quot;</span>, arr[i]);\n    }\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">stoogesort</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> arr[], <span class=\"hljs-type\">int</span> i, <span class=\"hljs-type\">int</span> j)</span>\n{\n    <span class=\"hljs-type\">int</span> temp, k;\n    <span class=\"hljs-keyword\">if</span> (arr[i] &gt; arr[j])\n    {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n    <span class=\"hljs-keyword\">if</span> ((i + <span class=\"hljs-number\">1</span>) &gt;= j)\n        <span class=\"hljs-keyword\">return</span>;\n    k = (<span class=\"hljs-type\">int</span>)((j - i + <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">3</span>);\n    stoogesort(arr, i, j - k);\n    stoogesort(arr, i + k, j);\n    stoogesort(arr, i, j - k);\n}\n"
    },
    "rust": {
      "dir": "src/sorting/stooge_sort.rs",
      "url": "https://github.com/TheAlgorithms/rust/tree/master/src/sorting/stooge_sort.rs",
      "code": "<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">_stooge_sort</span>&lt;T: <span class=\"hljs-built_in\">Ord</span>&gt;(arr: &amp;<span class=\"hljs-keyword\">mut</span> [T], start: <span class=\"hljs-type\">usize</span>, end: <span class=\"hljs-type\">usize</span>) {\n    <span class=\"hljs-keyword\">if</span> arr[start] &gt; arr[end] {\n        arr.<span class=\"hljs-title function_ invoke__\">swap</span>(start, end);\n    }\n\n    <span class=\"hljs-keyword\">if</span> start + <span class=\"hljs-number\">1</span> &gt;= end {\n        <span class=\"hljs-keyword\">return</span>;\n    }\n\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">k</span> = (end - start + <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">3</span>;\n\n    _stooge_sort(arr, start, end - k);\n    _stooge_sort(arr, start + k, end);\n    _stooge_sort(arr, start, end - k);\n}\n\n<span class=\"hljs-keyword\">pub</span> <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">stooge_sort</span>&lt;T: <span class=\"hljs-built_in\">Ord</span>&gt;(arr: &amp;<span class=\"hljs-keyword\">mut</span> [T]) {\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">len</span> = arr.<span class=\"hljs-title function_ invoke__\">len</span>();\n    <span class=\"hljs-keyword\">if</span> len == <span class=\"hljs-number\">0</span> {\n        <span class=\"hljs-keyword\">return</span>;\n    }\n\n    _stooge_sort(arr, <span class=\"hljs-number\">0</span>, len - <span class=\"hljs-number\">1</span>);\n}\n\n<span class=\"hljs-meta\">#[cfg(test)]</span>\n<span class=\"hljs-keyword\">mod</span> test {\n    <span class=\"hljs-keyword\">use</span> super::*;\n\n    <span class=\"hljs-meta\">#[test]</span>\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">basic</span>() {\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">vec</span> = <span class=\"hljs-built_in\">vec!</span>[<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>];\n        <span class=\"hljs-title function_ invoke__\">stooge_sort</span>(&amp;<span class=\"hljs-keyword\">mut</span> vec);\n        <span class=\"hljs-keyword\">for</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span>..vec.<span class=\"hljs-title function_ invoke__\">len</span>() - <span class=\"hljs-number\">1</span> {\n            <span class=\"hljs-built_in\">assert!</span>(vec[i] &lt;= vec[i + <span class=\"hljs-number\">1</span>]);\n        }\n    }\n\n    <span class=\"hljs-meta\">#[test]</span>\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">empty</span>() {\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">vec</span>: <span class=\"hljs-type\">Vec</span>&lt;<span class=\"hljs-type\">i32</span>&gt; = <span class=\"hljs-built_in\">vec!</span>[];\n        <span class=\"hljs-title function_ invoke__\">stooge_sort</span>(&amp;<span class=\"hljs-keyword\">mut</span> vec);\n        <span class=\"hljs-built_in\">assert_eq!</span>(vec, <span class=\"hljs-built_in\">vec!</span>[]);\n    }\n\n    <span class=\"hljs-meta\">#[test]</span>\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">reverse</span>() {\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">vec</span> = <span class=\"hljs-built_in\">vec!</span>[<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>];\n        <span class=\"hljs-title function_ invoke__\">stooge_sort</span>(&amp;<span class=\"hljs-keyword\">mut</span> vec);\n        <span class=\"hljs-keyword\">for</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span>..vec.<span class=\"hljs-title function_ invoke__\">len</span>() - <span class=\"hljs-number\">1</span> {\n            <span class=\"hljs-built_in\">assert!</span>(vec[i] &lt;= vec[i + <span class=\"hljs-number\">1</span>]);\n        }\n    }\n\n    <span class=\"hljs-meta\">#[test]</span>\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">already_sorted</span>() {\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">vec</span> = <span class=\"hljs-built_in\">vec!</span>[<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>];\n        <span class=\"hljs-title function_ invoke__\">stooge_sort</span>(&amp;<span class=\"hljs-keyword\">mut</span> vec);\n        <span class=\"hljs-keyword\">for</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span>..vec.<span class=\"hljs-title function_ invoke__\">len</span>() - <span class=\"hljs-number\">1</span> {\n            <span class=\"hljs-built_in\">assert!</span>(vec[i] &lt;= vec[i + <span class=\"hljs-number\">1</span>]);\n        }\n    }\n}\n"
    },
    "r": {
      "dir": "Sorting-Algorithms/stooge_sort.R",
      "url": "https://github.com/TheAlgorithms/r/tree/master/Sorting-Algorithms/stooge_sort.R",
      "code": "<span class=\"hljs-comment\"># Stooge sort in R:</span>\n\nstooge.sort <span class=\"hljs-operator\">&lt;-</span> <span class=\"hljs-keyword\">function</span><span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">)</span> <span class=\"hljs-punctuation\">{</span>\n\ti <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>\n\tj <span class=\"hljs-operator\">=</span> <span class=\"hljs-built_in\">length</span><span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">)</span>\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">[</span>j<span class=\"hljs-punctuation\">]</span> <span class=\"hljs-operator\">&lt;</span> elements.vec<span class=\"hljs-punctuation\">[</span>i<span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">)</span> elements.vec<span class=\"hljs-punctuation\">[</span><span class=\"hljs-built_in\">c</span><span class=\"hljs-punctuation\">(</span>j<span class=\"hljs-punctuation\">,</span> i<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span> <span class=\"hljs-operator\">=</span> elements.vec<span class=\"hljs-punctuation\">[</span><span class=\"hljs-built_in\">c</span><span class=\"hljs-punctuation\">(</span>i<span class=\"hljs-punctuation\">,</span> j<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span>\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> i <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">)</span> <span class=\"hljs-punctuation\">{</span>\n\t\tt <span class=\"hljs-operator\">=</span> <span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> i <span class=\"hljs-operator\">+</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">)</span> <span class=\"hljs-operator\">%/%</span> <span class=\"hljs-number\">3</span>\n\t\telements.vec<span class=\"hljs-punctuation\">[</span>i<span class=\"hljs-operator\">:</span><span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span> <span class=\"hljs-operator\">=</span> stooge.sort<span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">[</span>i<span class=\"hljs-operator\">:</span><span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">)</span>\n\t\telements.vec<span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">(</span>i <span class=\"hljs-operator\">+</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-operator\">:</span>j<span class=\"hljs-punctuation\">]</span> <span class=\"hljs-operator\">=</span> stooge.sort<span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">(</span>i <span class=\"hljs-operator\">+</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-operator\">:</span>j<span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">)</span>\n\t\telements.vec<span class=\"hljs-punctuation\">[</span>i<span class=\"hljs-operator\">:</span><span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span> <span class=\"hljs-operator\">=</span> stooge.sort<span class=\"hljs-punctuation\">(</span>elements.vec<span class=\"hljs-punctuation\">[</span>i<span class=\"hljs-operator\">:</span><span class=\"hljs-punctuation\">(</span>j <span class=\"hljs-operator\">-</span> t<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">)</span>\n\t<span class=\"hljs-punctuation\">}</span>\n\telements.vec\n<span class=\"hljs-punctuation\">}</span>\n \n<span class=\"hljs-comment\"># Example:</span>\n<span class=\"hljs-comment\"># stooge.sort(sample(21, 20))</span>\n<span class=\"hljs-comment\"># [1] 1  2  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Jerrit Gläsker",
      "email": "50867655+cherrysrc@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Aruj Sharma",
      "email": "aruj123sharma@gmail.com",
      "commits": 1
    },
    {
      "name": "Krishna Vedala",
      "email": "krishna.vedala@ieee.org",
      "commits": 1
    },
    {
      "name": "Amir",
      "email": "43786077+ahsNT@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Marcos Vinicius",
      "email": "mvhb@cin.ufpe.br",
      "commits": 1
    },
    {
      "name": "Phyllipe Bezerra",
      "email": "32442929+pmba@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Charitoc",
      "email": "37042130+Charitoc@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Erez Shomron",
      "email": "48328872+eshom@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "Madiena",
      "email": "95379618+Madiena@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}