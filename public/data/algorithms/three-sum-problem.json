{
  "slug": "three-sum-problem",
  "name": "Three Sum Problem",
  "categories": [
    "others"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/misc/ThreeSumProblem.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/misc/ThreeSumProblem.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.misc;\n\n<span class=\"hljs-keyword\">import</span> java.util.*;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ThreeSumProblem</span> {\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String args[])</span> {\n        <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">scan</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\n        System.out.print(<span class=\"hljs-string\">&quot;Enter the target sum &quot;</span>);\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">ts</span> <span class=\"hljs-operator\">=</span> scan.nextInt();\n        System.out.print(<span class=\"hljs-string\">&quot;Enter the number of elements in the array &quot;</span>);\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> scan.nextInt();\n        System.out.println(<span class=\"hljs-string\">&quot;Enter all your array elements:&quot;</span>);\n        <span class=\"hljs-type\">int</span> arr[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[n];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n            arr[i] = scan.nextInt();\n        }\n        <span class=\"hljs-type\">ThreeSumProblem</span> <span class=\"hljs-variable\">th</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ThreeSumProblem</span>();\n        System.out.println(<span class=\"hljs-string\">&quot;Brute Force Approach\\n&quot;</span> + (th.BruteForce(arr, ts)) + <span class=\"hljs-string\">&quot;\\n&quot;</span>);\n        System.out.println(<span class=\"hljs-string\">&quot;Two Pointer Approach\\n&quot;</span> + (th.TwoPointer(arr, ts)) + <span class=\"hljs-string\">&quot;\\n&quot;</span>);\n        System.out.println(<span class=\"hljs-string\">&quot;Hashmap Approach\\n&quot;</span> + (th.Hashmap(arr, ts)));\n\n    }\n\n    <span class=\"hljs-keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; <span class=\"hljs-title function_\">BruteForce</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] nums, <span class=\"hljs-type\">int</span> target)</span> {\n        List&lt;List&lt;Integer&gt;&gt; arr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;List&lt;Integer&gt;&gt;();\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; nums.length; i++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> i + <span class=\"hljs-number\">1</span>; j &lt; nums.length; j++) {\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">k</span> <span class=\"hljs-operator\">=</span> j + <span class=\"hljs-number\">1</span>; k &lt; nums.length; k++) {\n                    <span class=\"hljs-keyword\">if</span> (nums[i] + nums[j] + nums[k] == target) {\n                        List&lt;Integer&gt; temp = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();\n                        temp.add(nums[i]);\n                        temp.add(nums[j]);\n                        temp.add(nums[k]);\n                        Collections.sort(temp);\n                        arr.add(temp);\n                    }\n\n                }\n            }\n        }\n        arr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;List&lt;Integer&gt;&gt;(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LinkedHashSet</span>&lt;List&lt;Integer&gt;&gt;(arr));\n        <span class=\"hljs-keyword\">return</span> arr;\n    }\n\n    <span class=\"hljs-keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; <span class=\"hljs-title function_\">TwoPointer</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] nums, <span class=\"hljs-type\">int</span> target)</span> {\n        Arrays.sort(nums);\n        List&lt;List&lt;Integer&gt;&gt; arr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;List&lt;Integer&gt;&gt;();\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">start</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">end</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">while</span> (i &lt; nums.length - <span class=\"hljs-number\">1</span>) {\n            start = i + <span class=\"hljs-number\">1</span>;\n            end = nums.length - <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">while</span> (start &lt; end) {\n                <span class=\"hljs-keyword\">if</span> (nums[start] + nums[end] + nums[i] == target) {\n                    List&lt;Integer&gt; temp = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();\n                    temp.add(nums[i]);\n                    temp.add(nums[start]);\n                    temp.add(nums[end]);\n                    arr.add(temp);\n                    start++;\n                    end--;\n                } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (nums[start] + nums[end] + nums[i] &lt; target) {\n                    start += <span class=\"hljs-number\">1</span>;\n                } <span class=\"hljs-keyword\">else</span> {\n                    end -= <span class=\"hljs-number\">1</span>;\n                }\n\n            }\n            i++;\n        }\n        Set&lt;List&lt;Integer&gt;&gt; set = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LinkedHashSet</span>&lt;List&lt;Integer&gt;&gt;(arr);\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;List&lt;Integer&gt;&gt;(set);\n    }\n\n    <span class=\"hljs-keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; <span class=\"hljs-title function_\">Hashmap</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] nums, <span class=\"hljs-type\">int</span> target)</span> {\n        Arrays.sort(nums);\n        Set&lt;List&lt;Integer&gt;&gt; ts = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashSet</span>();\n        HashMap&lt;Integer, Integer&gt; hm = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;&gt;();\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; nums.length; i++) {\n            hm.put(nums[i], i);\n        }\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; nums.length; i++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> i + <span class=\"hljs-number\">1</span>; j &lt; nums.length; j++) {\n                <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">t</span> <span class=\"hljs-operator\">=</span> target - nums[i] - nums[j];\n                <span class=\"hljs-keyword\">if</span> (hm.containsKey(t) &amp;&amp; hm.get(t) &gt; j) {\n                    List&lt;Integer&gt; temp = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();\n                    temp.add(nums[i]);\n                    temp.add(nums[j]);\n                    temp.add(t);\n                    ts.add(temp);\n                }\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>(ts);\n    }\n\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}