{
  "slug": "timeline",
  "name": "Timeline",
  "categories": [
    "datastructures"
  ],
  "body": {},
  "implementations": {
    "c-sharp": {
      "dir": "./DataStructures/Timeline.cs",
      "url": "https:/github.com/TheAlgorithms/C-Sharp/tree/master/DataStructures/Timeline.cs",
      "code": "<span class=\"hljs-comment\">/*\n    Author: Lorenzo Lotti\n    Name: Timeline (DataStructures.Timeline&lt;TValue&gt;)\n    Type: Data structure (class)\n    Description: A collection of dates/times and values sorted by dates/times easy to query.\n    Usage:\n        this data structure can be used to represent an ordered series of dates or times with which to associate values.\n        An example is a chronology of events:\n            306: Constantine is the new emperor,\n            312: Battle of the Milvian Bridge,\n            313: Edict of Milan,\n            330: Constantine move the capital to Constantinople.\n*/</span>\n\n<span class=\"hljs-keyword\">using</span> System;\n<span class=\"hljs-keyword\">using</span> System.Collections;\n<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\n<span class=\"hljs-keyword\">using</span> System.Linq;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">DataStructures</span>\n{\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     A collection of <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> and <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     sorted by <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> field.</span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;typeparam name=&quot;TValue&quot;&gt;</span>Value associated with a <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span>.<span class=\"hljs-doctag\">&lt;/typeparam&gt;</span></span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Timeline</span>&lt;<span class=\"hljs-title\">TValue</span>&gt; : <span class=\"hljs-title\">ICollection</span>&lt;(<span class=\"hljs-title\">DateTime</span> <span class=\"hljs-title\">Time</span>, <span class=\"hljs-title\">TValue</span> <span class=\"hljs-title\">Value</span>)&gt;, <span class=\"hljs-title\">IEquatable</span>&lt;<span class=\"hljs-title\">Timeline</span>&lt;<span class=\"hljs-title\">TValue</span>&gt;&gt;\n    {\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Inner collection storing the timeline events as key-tuples.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> List&lt;(DateTime Time, TValue Value)&gt; timeline = <span class=\"hljs-keyword\">new</span>();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Initializes a new instance of the <span class=\"hljs-doctag\">&lt;see cref=&quot;Timeline{TValue}&quot;/&gt;</span> class.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">Timeline</span>()</span>\n        {\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Initializes a new instance of the <span class=\"hljs-doctag\">&lt;see cref=&quot;Timeline{TValue}&quot;/&gt;</span> class populated with an initial event.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;time&quot;&gt;</span>The time at which the given event occurred.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;value&quot;&gt;</span>The event&#x27;s content.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">Timeline</span>(<span class=\"hljs-params\">DateTime time, TValue <span class=\"hljs-keyword\">value</span></span>)</span>\n            =&gt; timeline = <span class=\"hljs-keyword\">new</span> List&lt;(DateTime, TValue)&gt;\n            {\n                (time, <span class=\"hljs-keyword\">value</span>),\n            };\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Initializes a new instance of the <span class=\"hljs-doctag\">&lt;see cref=&quot;Timeline{TValue}&quot;/&gt;</span> class containing the provided events</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     ordered chronologically.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;timeline&quot;&gt;</span>The timeline to represent.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">Timeline</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> (DateTime, TValue</span>)[] timeline)</span>\n            =&gt; <span class=\"hljs-keyword\">this</span>.timeline = timeline\n                .OrderBy(pair =&gt; pair.Item1)\n                .ToList();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Gets he number of unique times within this timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> TimesCount\n            =&gt; GetAllTimes().Length;\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all events that has occurred in this timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> ValuesCount\n            =&gt; GetAllValues().Length;\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all values associated with <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;time&quot;&gt;</span>Time to get values for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Values associated with <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> TValue[] <span class=\"hljs-keyword\">this</span>[DateTime time]\n        {\n            <span class=\"hljs-keyword\">get</span> =&gt; GetValuesByTime(time);\n            <span class=\"hljs-keyword\">set</span>\n            {\n                <span class=\"hljs-keyword\">var</span> overridenEvents = timeline.Where(@event =&gt; @event.Time == time).ToList();\n                <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> @event <span class=\"hljs-keyword\">in</span> overridenEvents)\n                {\n                    timeline.Remove(@event);\n                }\n\n                <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> v <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">value</span>)\n                {\n                    Add(time, v);\n                }\n            }\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;inheritdoc /&gt;</span></span>\n        <span class=\"hljs-built_in\">bool</span> ICollection&lt;(DateTime Time, TValue Value)&gt;.IsReadOnly\n            =&gt; <span class=\"hljs-literal\">false</span>;\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets the count of pairs.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> Count\n            =&gt; timeline.Count;\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Clear the timeline, removing all events.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Clear</span>()</span>\n            =&gt; timeline.Clear();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Copy a value to an array.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;array&quot;&gt;</span>Destination array.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;arrayIndex&quot;&gt;</span>The start index.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">CopyTo</span>(<span class=\"hljs-params\">(DateTime, TValue</span>)[] array, <span class=\"hljs-built_in\">int</span> arrayIndex)</span>\n            =&gt; timeline.CopyTo(array, arrayIndex);\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Add an event at a given time.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;item&quot;&gt;</span>The tuple containing the event date and value.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-keyword\">void</span> ICollection&lt;(DateTime Time, TValue Value)&gt;.Add((DateTime Time, TValue Value) item)\n            =&gt; Add(item.Time, item.Value);\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Check whether or not a event exists at a specific date in the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;item&quot;&gt;</span>The tuple containing the event date and value.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>True if this event exists at the given date, false otherwise.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-built_in\">bool</span> ICollection&lt;(DateTime Time, TValue Value)&gt;.Contains((DateTime Time, TValue Value) item)\n            =&gt; Contains(item.Time, item.Value);\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove an event at a specific date.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;item&quot;&gt;</span>The tuple containing the event date and value.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>True if the event was removed, false otherwise.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-built_in\">bool</span> ICollection&lt;(DateTime Time, TValue Value)&gt;.Remove((DateTime Time, TValue Value) item)\n            =&gt; Remove(item.Time, item.Value);\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;inheritdoc /&gt;</span></span>\n        IEnumerator IEnumerable.GetEnumerator()\n            =&gt; timeline.GetEnumerator();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;inheritdoc /&gt;</span></span>\n        IEnumerator&lt;(DateTime Time, TValue Value)&gt; IEnumerable&lt;(DateTime Time, TValue Value)&gt;.GetEnumerator()\n            =&gt; timeline.GetEnumerator();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;inheritdoc /&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Equals</span>(<span class=\"hljs-params\">Timeline&lt;TValue&gt;? other</span>)</span>\n            =&gt; other <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">null</span> &amp;&amp; <span class=\"hljs-keyword\">this</span> == other;\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Checks whether or not two <span class=\"hljs-doctag\">&lt;see cref=&quot;Timeline{TValue}&quot;/&gt;</span> are equals.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;left&quot;&gt;</span>The first timeline.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;right&quot;&gt;</span>The other timeline to be checked against the <span class=\"hljs-doctag\">&lt;paramref name=&quot;left&quot;/&gt;</span> one.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>True if both timelines are similar, false otherwise.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-keyword\">operator</span> ==(Timeline&lt;TValue&gt; left, Timeline&lt;TValue&gt; right)\n        {\n            <span class=\"hljs-keyword\">var</span> leftArray = left.ToArray();\n            <span class=\"hljs-keyword\">var</span> rightArray = right.ToArray();\n\n            <span class=\"hljs-keyword\">if</span> (left.Count != rightArray.Length)\n            {\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n            }\n\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; leftArray.Length; i++)\n            {\n                <span class=\"hljs-keyword\">if</span> (leftArray[i].Time != rightArray[i].Time\n                    &amp;&amp; !leftArray[i].Value!.Equals(rightArray[i].Value))\n                {\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n                }\n            }\n\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Checks whether or not two <span class=\"hljs-doctag\">&lt;see cref=&quot;Timeline{TValue}&quot;/&gt;</span> are not equals.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;left&quot;&gt;</span>The first timeline.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;right&quot;&gt;</span>The other timeline to be checked against the <span class=\"hljs-doctag\">&lt;paramref name=&quot;left&quot;/&gt;</span> one.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>False if both timelines are similar, true otherwise.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-keyword\">operator</span> !=(Timeline&lt;TValue&gt; left, Timeline&lt;TValue&gt; right)\n            =&gt; !(left == right);\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> of the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DateTime[] <span class=\"hljs-title\">GetAllTimes</span>()</span>\n            =&gt; timeline.Select(t =&gt; t.Time)\n                .Distinct()\n                .ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> values of the timeline that have this <span class=\"hljs-doctag\">&lt;paramref name=&quot;value&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DateTime[] <span class=\"hljs-title\">GetTimesByValue</span>(<span class=\"hljs-params\">TValue <span class=\"hljs-keyword\">value</span></span>)</span>\n            =&gt; timeline.Where(pair =&gt; pair.Value!.Equals(<span class=\"hljs-keyword\">value</span>))\n                .Select(pair =&gt; pair.Time)\n                .ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> before <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DateTime[] <span class=\"hljs-title\">GetTimesBefore</span>(<span class=\"hljs-params\">DateTime time</span>)</span>\n            =&gt; GetAllTimes()\n                .Where(t =&gt; t &lt; time)\n                .OrderBy(t =&gt; t)\n                .ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> after <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DateTime[] <span class=\"hljs-title\">GetTimesAfter</span>(<span class=\"hljs-params\">DateTime time</span>)</span>\n            =&gt; GetAllTimes()\n                .Where(t =&gt; t &gt; time)\n                .OrderBy(t =&gt; t)\n                .ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> of the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> TValue[] <span class=\"hljs-title\">GetAllValues</span>()</span>\n            =&gt; timeline.Select(pair =&gt; pair.Value)\n                .ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> associated with <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> TValue[] <span class=\"hljs-title\">GetValuesByTime</span>(<span class=\"hljs-params\">DateTime time</span>)</span>\n            =&gt; timeline.Where(pair =&gt; pair.Time == time)\n                .Select(pair =&gt; pair.Value)\n                .ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> before <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesBefore</span>(<span class=\"hljs-params\">DateTime time</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(<span class=\"hljs-keyword\">this</span>.Where(pair =&gt; pair.Time &lt; time).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Get all <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> before <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesAfter</span>(<span class=\"hljs-params\">DateTime time</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(<span class=\"hljs-keyword\">this</span>.Where(pair =&gt; pair.Time &gt; time).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified millisecond.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;millisecond&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByMillisecond</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> millisecond</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(timeline.Where(pair =&gt; pair.Time.Millisecond == millisecond).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified second.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;second&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesBySecond</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> second</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(timeline.Where(pair =&gt; pair.Time.Second == second).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified minute.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;minute&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByMinute</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> minute</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(timeline.Where(pair =&gt; pair.Time.Minute == minute).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified hour.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;hour&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByHour</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> hour</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(timeline.Where(pair =&gt; pair.Time.Hour == hour).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified day.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;day&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByDay</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> day</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(timeline.Where(pair =&gt; pair.Time.Day == day).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified time of the day.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;timeOfDay&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByTimeOfDay</span>(<span class=\"hljs-params\">TimeSpan timeOfDay</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(timeline.Where(pair =&gt; pair.Time.TimeOfDay == timeOfDay).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified day of the week.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;dayOfWeek&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByDayOfWeek</span>(<span class=\"hljs-params\">DayOfWeek dayOfWeek</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(timeline.Where(pair =&gt; pair.Time.DayOfWeek == dayOfWeek).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified day of the year.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;dayOfYear&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByDayOfYear</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> dayOfYear</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(timeline.Where(pair =&gt; pair.Time.DayOfYear == dayOfYear).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified month.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;month&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByMonth</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> month</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(timeline.Where(pair =&gt; pair.Time.Month == month).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Gets all values that happened at specified year.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;year&quot;&gt;</span>Value to look for.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Array of values.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Timeline&lt;TValue&gt; <span class=\"hljs-title\">GetValuesByYear</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> year</span>)</span>\n            =&gt; <span class=\"hljs-keyword\">new</span>(timeline.Where(pair =&gt; pair.Time.Year == year).ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Add an event at a given <span class=\"hljs-doctag\">&lt;paramref name=&quot;time&quot;/&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;time&quot;&gt;</span>The date at which the event occurred.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;value&quot;&gt;</span>The event value.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Add</span>(<span class=\"hljs-params\">DateTime time, TValue <span class=\"hljs-keyword\">value</span></span>)</span>\n        {\n            timeline.Add((time, <span class=\"hljs-keyword\">value</span>));\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Add a set of <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot; /&gt;</span> and <span class=\"hljs-doctag\">&lt;see cref=&quot;TValue&quot; /&gt;</span> to the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Add</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> (DateTime, TValue</span>)[] timeline)</span>\n        {\n            <span class=\"hljs-keyword\">this</span>.timeline.AddRange(timeline);\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Append an existing timeline to this one.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Add</span>(<span class=\"hljs-params\">Timeline&lt;TValue&gt; timeline</span>)</span>\n            =&gt; Add(timeline.ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Add a <span class=\"hljs-doctag\">&lt;paramref name=&quot;value&quot; /&gt;</span> associated with <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime.Now&quot; /&gt;</span> to the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">AddNow</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> TValue[] <span class=\"hljs-keyword\">value</span></span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> now = DateTime.Now;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> v <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">value</span>)\n            {\n                Add(now, v);\n            }\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Check whether or not a event exists at a specific date in the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;time&quot;&gt;</span>The date at which the event occurred.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;value&quot;&gt;</span>The event value.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>True if this event exists at the given date, false otherwise.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Contains</span>(<span class=\"hljs-params\">DateTime time, TValue <span class=\"hljs-keyword\">value</span></span>)</span>\n            =&gt; timeline.Contains((time, <span class=\"hljs-keyword\">value</span>));\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Check if timeline contains this set of value pairs.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;timeline&quot;&gt;</span>The events to checks.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>True if any of the events has occurred in the timeline.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Contains</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> (DateTime, TValue</span>)[] timeline)</span>\n            =&gt; timeline.Any(@event =&gt; Contains(@event.Item1, @event.Item2));\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Check if timeline contains any of the event of the provided <span class=\"hljs-doctag\">&lt;paramref name=&quot;timeline&quot;/&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;timeline&quot;&gt;</span>The events to checks.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>True if any of the events has occurred in the timeline.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Contains</span>(<span class=\"hljs-params\">Timeline&lt;TValue&gt; timeline</span>)</span>\n            =&gt; Contains(timeline.ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Check if timeline contains any of the time of the provided <span class=\"hljs-doctag\">&lt;paramref name=&quot;times&quot;/&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;times&quot;&gt;</span>The times to checks.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>True if any of the times is stored in the timeline.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">ContainsTime</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> DateTime[] times</span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> storedTimes = GetAllTimes();\n            <span class=\"hljs-keyword\">return</span> times.Any(<span class=\"hljs-keyword\">value</span> =&gt; storedTimes.Contains(<span class=\"hljs-keyword\">value</span>));\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Check if timeline contains any of the event of the provided <span class=\"hljs-doctag\">&lt;paramref name=&quot;values&quot;/&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;values&quot;&gt;</span>The events to checks.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>True if any of the events has occurred in the timeline.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">ContainsValue</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> TValue[] values</span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> storedValues = GetAllValues();\n            <span class=\"hljs-keyword\">return</span> values.Any(<span class=\"hljs-keyword\">value</span> =&gt; storedValues.Contains(<span class=\"hljs-keyword\">value</span>));\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove an event at a specific date.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;time&quot;&gt;</span>The date at which the event occurred.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;value&quot;&gt;</span>The event value.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>True if the event was removed, false otherwise.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Remove</span>(<span class=\"hljs-params\">DateTime time, TValue <span class=\"hljs-keyword\">value</span></span>)</span>\n            =&gt; timeline.Remove((time, <span class=\"hljs-keyword\">value</span>));\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove a set of value pairs from the timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;timeline&quot;&gt;</span>An collection of all events to remove.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Returns true if the operation completed successfully.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Remove</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> (DateTime, TValue</span>)[] timeline)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-literal\">false</span>;\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> (time, <span class=\"hljs-keyword\">value</span>) <span class=\"hljs-keyword\">in</span> timeline)\n            {\n                result |= <span class=\"hljs-keyword\">this</span>.timeline.Remove((time, <span class=\"hljs-keyword\">value</span>));\n            }\n\n            <span class=\"hljs-keyword\">return</span> result;\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove an existing timeline from this timeline.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;timeline&quot;&gt;</span>An collection of all events to remove.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Returns true if the operation completed successfully.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Remove</span>(<span class=\"hljs-params\">Timeline&lt;TValue&gt; timeline</span>)</span>\n            =&gt; Remove(timeline.ToArray());\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove a value pair from the timeline if the time is equal to <span class=\"hljs-doctag\">&lt;paramref name=&quot;times&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Returns true if the operation completed successfully.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">RemoveTimes</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> DateTime[] times</span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> isTimeContainedInTheTimeline = times.Any(time =&gt; GetAllTimes().Contains(time));\n\n            <span class=\"hljs-keyword\">if</span> (!isTimeContainedInTheTimeline)\n            {\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n            }\n\n            <span class=\"hljs-keyword\">var</span> eventsToRemove = times.SelectMany(time =&gt;\n                timeline.Where(@event =&gt; @event.Time == time))\n                .ToList();\n\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> @event <span class=\"hljs-keyword\">in</span> eventsToRemove)\n            {\n                timeline.Remove(@event);\n            }\n\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Remove a value pair from the timeline if the value is equal to <span class=\"hljs-doctag\">&lt;paramref name=&quot;values&quot; /&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>Returns true if the operation completed successfully.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">RemoveValues</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">params</span> TValue[] values</span>)</span>\n        {\n            <span class=\"hljs-keyword\">var</span> isValueContainedInTheTimeline = values.Any(v =&gt; GetAllValues().Contains(v));\n\n            <span class=\"hljs-keyword\">if</span> (!isValueContainedInTheTimeline)\n            {\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n            }\n\n            <span class=\"hljs-keyword\">var</span> eventsToRemove = values.SelectMany(<span class=\"hljs-keyword\">value</span> =&gt;\n                timeline.Where(@event =&gt; EqualityComparer&lt;TValue&gt;.Default.Equals(@event.Value, <span class=\"hljs-keyword\">value</span>)))\n                .ToList();\n\n            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> @event <span class=\"hljs-keyword\">in</span> eventsToRemove)\n            {\n                timeline.Remove(@event);\n            }\n\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        }\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Convert the timeline to an array.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> The timeline as an array of tuples of (<span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot;/&gt;</span>, <span class=\"hljs-doctag\">&lt;typeparamref name=&quot;TValue&quot;/&gt;</span>).</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> (DateTime Time, TValue Value)[] ToArray()\n            =&gt; timeline.ToArray();\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Convert the timeline to a list.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> The timeline as a list of tuples of (<span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot;/&gt;</span>, <span class=\"hljs-doctag\">&lt;typeparamref name=&quot;TValue&quot;/&gt;</span>).</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-keyword\">public</span> IList&lt;(DateTime Time, TValue Value)&gt; ToList()\n            =&gt; timeline;\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Convert the timeline to a dictionary.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span></span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> The timeline as an dictionary of <span class=\"hljs-doctag\">&lt;typeparamref name=&quot;TValue&quot;/&gt;</span> by <span class=\"hljs-doctag\">&lt;see cref=&quot;DateTime&quot;/&gt;</span>.</span>\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> IDictionary&lt;DateTime, TValue&gt; <span class=\"hljs-title\">ToDictionary</span>()</span>\n            =&gt; timeline.ToDictionary(@event =&gt; @event.Time, @event =&gt; @event.Value);\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;inheritdoc /&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">Equals</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">object</span>? obj</span>)</span>\n            =&gt; obj <span class=\"hljs-keyword\">is</span> Timeline&lt;TValue&gt; otherTimeline\n               &amp;&amp; <span class=\"hljs-keyword\">this</span> == otherTimeline;\n\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;inheritdoc /&gt;</span></span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">GetHashCode</span>()</span>\n            =&gt; timeline.GetHashCode();\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Pierre Bouillon",
      "email": "pro.pierre.bouillon@protonmail.com",
      "commits": 1
    },
    {
      "name": "Andrii Siriak",
      "email": "siryaka@gmail.com",
      "commits": 2
    },
    {
      "name": "LorenzoLotti",
      "email": "52128675+LorenzoLotti@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}