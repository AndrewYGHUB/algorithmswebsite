{
  "slug": "two-sum-problem",
  "name": "Two Sum Problem",
  "categories": [
    "others"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/misc/TwoSumProblem.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/misc/TwoSumProblem.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.misc;\n\n<span class=\"hljs-keyword\">import</span> java.util.*;\n<span class=\"hljs-keyword\">import</span> java.util.stream.Collectors;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TwoSumProblem</span> {\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String args[])</span> {\n        <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">scan</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\n        System.out.print(<span class=\"hljs-string\">&quot;Enter the target sum &quot;</span>);\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">ts</span> <span class=\"hljs-operator\">=</span> scan.nextInt();\n        System.out.print(<span class=\"hljs-string\">&quot;Enter the number of elements in the array &quot;</span>);\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> scan.nextInt();\n        System.out.println(<span class=\"hljs-string\">&quot;Enter all your array elements:&quot;</span>);\n        <span class=\"hljs-type\">int</span> arr[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[n];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\n            arr[i] = scan.nextInt();\n        }\n        <span class=\"hljs-type\">TwoSumProblem</span> <span class=\"hljs-variable\">t</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TwoSumProblem</span>();\n        System.out.println(<span class=\"hljs-string\">&quot;Brute Force Approach\\n&quot;</span> + Arrays.toString(t.BruteForce(arr, ts)) + <span class=\"hljs-string\">&quot;\\n&quot;</span>);\n        System.out.println(<span class=\"hljs-string\">&quot;Two Pointer Approach\\n&quot;</span> + Arrays.toString(t.TwoPointer(arr, ts)) + <span class=\"hljs-string\">&quot;\\n&quot;</span>);\n        System.out.println(<span class=\"hljs-string\">&quot;Hashmap Approach\\n&quot;</span> + Arrays.toString(t.HashMap(arr, ts)));\n\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">int</span>[] BruteForce(<span class=\"hljs-type\">int</span>[] nums, <span class=\"hljs-type\">int</span> target) {\n        <span class=\"hljs-comment\">//Brute Force Approach </span>\n        <span class=\"hljs-type\">int</span> ans[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[<span class=\"hljs-number\">2</span>];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; nums.length; i++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> i + <span class=\"hljs-number\">1</span>; j &lt; nums.length; j++) {\n                <span class=\"hljs-keyword\">if</span> (nums[i] + nums[j] == target) {\n                    ans[<span class=\"hljs-number\">0</span>] = i;\n                    ans[<span class=\"hljs-number\">1</span>] = j;\n\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n\n            }\n        }\n\n        <span class=\"hljs-keyword\">return</span> ans;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">int</span>[] TwoPointer(<span class=\"hljs-type\">int</span>[] nums, <span class=\"hljs-type\">int</span> target) {\n        <span class=\"hljs-comment\">// HashMap Approach</span>\n        <span class=\"hljs-type\">int</span> ans[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[<span class=\"hljs-number\">2</span>];\n        HashMap&lt;Integer, Integer&gt; hm = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;Integer, Integer&gt;();\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; nums.length; i++) {\n            hm.put(i, nums[i]);\n        }\n        HashMap&lt;Integer, Integer&gt; temp\n                = hm.entrySet()\n                        .stream()\n                        .sorted((i1, i2)\n                                -&gt; i1.getValue().compareTo(\n                                i2.getValue()))\n                        .collect(Collectors.toMap(\n                                Map.Entry::getKey,\n                                Map.Entry::getValue,\n                                (e1, e2) -&gt; e1, LinkedHashMap::<span class=\"hljs-keyword\">new</span>));\n\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">start</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">end</span> <span class=\"hljs-operator\">=</span> nums.length - <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">while</span> (start &lt; end) {\n            <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">currSum</span> <span class=\"hljs-operator\">=</span> (Integer) temp.values().toArray()[start] + (Integer) temp.values().toArray()[end];\n\n            <span class=\"hljs-keyword\">if</span> (currSum == target) {\n                ans[<span class=\"hljs-number\">0</span>] = (Integer) temp.keySet().toArray()[start];\n                ans[<span class=\"hljs-number\">1</span>] = (Integer) temp.keySet().toArray()[end];\n                <span class=\"hljs-keyword\">break</span>;\n            } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (currSum &gt; target) {\n                end -= <span class=\"hljs-number\">1</span>;\n            } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (currSum &lt; target) {\n                start += <span class=\"hljs-number\">1</span>;\n            }\n\n        }\n        <span class=\"hljs-keyword\">return</span> ans;\n\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">int</span>[] HashMap(<span class=\"hljs-type\">int</span>[] nums, <span class=\"hljs-type\">int</span> target) {\n        <span class=\"hljs-comment\">//Using Hashmaps</span>\n        <span class=\"hljs-type\">int</span> ans[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[<span class=\"hljs-number\">2</span>];\n        HashMap&lt;Integer, Integer&gt; hm = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;Integer, Integer&gt;();\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; nums.length; i++) {\n            hm.put(nums[i], i);\n        }\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; nums.length; i++) {\n            <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">t</span> <span class=\"hljs-operator\">=</span> target - nums[i];\n            <span class=\"hljs-keyword\">if</span> (hm.containsKey(t) &amp;&amp; hm.get(t) != i) {\n                ans[<span class=\"hljs-number\">0</span>] = i;\n                ans[<span class=\"hljs-number\">1</span>] = hm.get(t);\n                <span class=\"hljs-keyword\">break</span>;\n            }\n        }\n\n        <span class=\"hljs-keyword\">return</span> ans;\n    }\n\n}\n"
    }
  },
  "contributors": [
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}