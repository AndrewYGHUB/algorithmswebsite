{
  "slug": "wine-problem",
  "name": "Wine Problem",
  "categories": [
    "dynamicprogramming"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src/main/java/com/thealgorithms/dynamicprogramming/WineProblem.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src/main/java/com/thealgorithms/dynamicprogramming/WineProblem.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.dynamicprogramming;\n\n<span class=\"hljs-comment\">/**\n * Imagine you have a collection of N wines placed next to each other on the\n * shelf. The price of ith wine is pi(Prices of different wines are different).\n * Because wine gets better every year supposing today is year 1, on year y the\n * price would be y*pi i.e y times the value of the initial year. You want to\n * sell all wines but you have to sell one wine per year. One more constraint on\n * each year you are allowed to sell either leftmost or rightmost wine on the\n * shelf. You are not allowed to reorder. You have to find the maximum profit\n *\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">WineProblem</span> {\n\n    <span class=\"hljs-comment\">// Method 1: Using Recursion</span>\n    <span class=\"hljs-comment\">// Time Complexity=0(2^N) Space Complexity=Recursion extra space</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">WPRecursion</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] arr, <span class=\"hljs-type\">int</span> si, <span class=\"hljs-type\">int</span> ei)</span> {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> arr.length;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">year</span> <span class=\"hljs-operator\">=</span> (n - (ei - si + <span class=\"hljs-number\">1</span>)) + <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">if</span> (si == ei) {\n            <span class=\"hljs-keyword\">return</span> arr[si] * year;\n        }\n\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">start</span> <span class=\"hljs-operator\">=</span> WPRecursion(arr, si + <span class=\"hljs-number\">1</span>, ei) + arr[si] * year;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">end</span> <span class=\"hljs-operator\">=</span> WPRecursion(arr, si, ei - <span class=\"hljs-number\">1</span>) + arr[ei] * year;\n\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">ans</span> <span class=\"hljs-operator\">=</span> Math.max(start, end);\n\n        <span class=\"hljs-keyword\">return</span> ans;\n    }\n\n    <span class=\"hljs-comment\">// Method 2: Top-Down DP(Memoization)</span>\n    <span class=\"hljs-comment\">// Time Complexity=0(N*N) Space Complexity=0(N*N)+Recursion extra space</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">WPTD</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] arr, <span class=\"hljs-type\">int</span> si, <span class=\"hljs-type\">int</span> ei, <span class=\"hljs-type\">int</span>[][] strg)</span> {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> arr.length;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">year</span> <span class=\"hljs-operator\">=</span> (n - (ei - si + <span class=\"hljs-number\">1</span>)) + <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">if</span> (si == ei) {\n            <span class=\"hljs-keyword\">return</span> arr[si] * year;\n        }\n\n        <span class=\"hljs-keyword\">if</span> (strg[si][ei] != <span class=\"hljs-number\">0</span>) {\n            <span class=\"hljs-keyword\">return</span> strg[si][ei];\n        }\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">start</span> <span class=\"hljs-operator\">=</span> WPTD(arr, si + <span class=\"hljs-number\">1</span>, ei, strg) + arr[si] * year;\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">end</span> <span class=\"hljs-operator\">=</span> WPTD(arr, si, ei - <span class=\"hljs-number\">1</span>, strg) + arr[ei] * year;\n\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">ans</span> <span class=\"hljs-operator\">=</span> Math.max(start, end);\n\n        strg[si][ei] = ans;\n\n        <span class=\"hljs-keyword\">return</span> ans;\n    }\n\n    <span class=\"hljs-comment\">// Method 3: Bottom-Up DP(Tabulation)</span>\n    <span class=\"hljs-comment\">// Time Complexity=0(N*N/2)-&gt;0(N*N) Space Complexity=0(N*N)</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">WPBU</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] arr)</span> {\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> arr.length;\n        <span class=\"hljs-type\">int</span>[][] strg = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[n][n];\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">slide</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; slide &lt;= n - <span class=\"hljs-number\">1</span>; slide++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">si</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; si &lt;= n - slide - <span class=\"hljs-number\">1</span>; si++) {\n                <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">ei</span> <span class=\"hljs-operator\">=</span> si + slide;\n                <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">year</span> <span class=\"hljs-operator\">=</span> (n - (ei - si + <span class=\"hljs-number\">1</span>)) + <span class=\"hljs-number\">1</span>;\n                <span class=\"hljs-keyword\">if</span> (si == ei) {\n                    strg[si][ei] = arr[si] * year;\n                } <span class=\"hljs-keyword\">else</span> {\n                    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">start</span> <span class=\"hljs-operator\">=</span> strg[si + <span class=\"hljs-number\">1</span>][ei] + arr[si] * year;\n                    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">end</span> <span class=\"hljs-operator\">=</span> strg[si][ei - <span class=\"hljs-number\">1</span>] + arr[ei] * year;\n\n                    strg[si][ei] = Math.max(start, end);\n\n                }\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> strg[<span class=\"hljs-number\">0</span>][n - <span class=\"hljs-number\">1</span>];\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\n        <span class=\"hljs-type\">int</span>[] arr = {<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>};\n        System.out.println(<span class=\"hljs-string\">&quot;Method 1: &quot;</span> + WPRecursion(arr, <span class=\"hljs-number\">0</span>, arr.length - <span class=\"hljs-number\">1</span>));\n        System.out.println(<span class=\"hljs-string\">&quot;Method 2: &quot;</span> + WPTD(arr, <span class=\"hljs-number\">0</span>, arr.length - <span class=\"hljs-number\">1</span>, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[arr.length][arr.length]));\n        System.out.println(<span class=\"hljs-string\">&quot;Method 3: &quot;</span> + WPBU(arr));\n\n    }\n\n}\n<span class=\"hljs-comment\">// Memoization vs Tabulation : https://www.geeksforgeeks.org/tabulation-vs-memoization/</span>\n<span class=\"hljs-comment\">// Question Link : https://www.geeksforgeeks.org/maximum-profit-sale-wines/</span>\n"
    }
  },
  "contributors": [
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Nikita Kapoor",
      "email": "62166533+nikitakapoor1919@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}