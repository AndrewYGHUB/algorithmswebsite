{
  "slug": "zellers-congruence-algorithm",
  "name": "Zellers Congruence Algorithm",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths/ZellersCongruenceAlgorithm.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths/ZellersCongruenceAlgorithm.js",
      "code": "<span class=\"hljs-comment\">// Zeller&#x27;s Congruence Algorithm finds the day of the week from the Gregorian Date. Wikipedia: https://en.wikipedia.org/wiki/Zeller%27s_congruence</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">zellersCongruenceAlgorithm</span> = (<span class=\"hljs-params\">day, month, year</span>) =&gt; {\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> day !== <span class=\"hljs-string\">&#x27;number&#x27;</span> || <span class=\"hljs-keyword\">typeof</span> month !== <span class=\"hljs-string\">&#x27;number&#x27;</span> || <span class=\"hljs-keyword\">typeof</span> year !== <span class=\"hljs-string\">&#x27;number&#x27;</span>) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeError</span>(<span class=\"hljs-string\">&#x27;Arguments are not all numbers.&#x27;</span>)\n  }\n  <span class=\"hljs-keyword\">const</span> q = day\n  <span class=\"hljs-keyword\">let</span> m = month\n  <span class=\"hljs-keyword\">let</span> y = year\n  <span class=\"hljs-keyword\">if</span> (month &lt; <span class=\"hljs-number\">3</span>) {\n    m += <span class=\"hljs-number\">12</span>\n    y -= <span class=\"hljs-number\">1</span>\n  }\n  day =\n      (q + <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(<span class=\"hljs-number\">26</span> * (m + <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">10</span>) + (y % <span class=\"hljs-number\">100</span>) + <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>((y % <span class=\"hljs-number\">100</span>) / <span class=\"hljs-number\">4</span>) + <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(y / <span class=\"hljs-number\">100</span>) / <span class=\"hljs-number\">4</span>) + (<span class=\"hljs-number\">5</span> * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(y / <span class=\"hljs-number\">100</span>))) %\n          <span class=\"hljs-number\">7</span>\n  <span class=\"hljs-keyword\">const</span> days = [\n    <span class=\"hljs-string\">&#x27;Saturday&#x27;</span>,\n    <span class=\"hljs-string\">&#x27;Sunday&#x27;</span>,\n    <span class=\"hljs-string\">&#x27;Monday&#x27;</span>,\n    <span class=\"hljs-string\">&#x27;Tuesday&#x27;</span>,\n    <span class=\"hljs-string\">&#x27;Wednesday&#x27;</span>,\n    <span class=\"hljs-string\">&#x27;Thursday&#x27;</span>,\n    <span class=\"hljs-string\">&#x27;Friday&#x27;</span>\n  ]\n  <span class=\"hljs-keyword\">return</span> days[day]\n}\n"
    },
    "rust": {
      "dir": "src/math/zellers_congruence_algorithm.rs",
      "url": "https://github.com/TheAlgorithms/rust/tree/master/src/math/zellers_congruence_algorithm.rs",
      "code": "<span class=\"hljs-comment\">// returns the day of the week from the Gregorian Date</span>\n\n<span class=\"hljs-keyword\">pub</span> <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">zellers_congruence_algorithm</span>(date: <span class=\"hljs-type\">i32</span>, month: <span class=\"hljs-type\">i32</span>, year: <span class=\"hljs-type\">i32</span>, as_string: <span class=\"hljs-type\">bool</span>) <span class=\"hljs-punctuation\">-&gt;</span> <span class=\"hljs-type\">String</span> {\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">q</span> = date;\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">m</span> = month;\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">y</span> = year;\n    <span class=\"hljs-keyword\">if</span> month &lt; <span class=\"hljs-number\">3</span> {\n        m = month + <span class=\"hljs-number\">12</span>;\n        y = year - <span class=\"hljs-number\">1</span>;\n    }\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">day</span>: <span class=\"hljs-type\">i32</span> =\n        (q + (<span class=\"hljs-number\">26</span> * (m + <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">10</span>) + (y % <span class=\"hljs-number\">100</span>) + ((y % <span class=\"hljs-number\">100</span>) / <span class=\"hljs-number\">4</span>) + ((y / <span class=\"hljs-number\">100</span>) / <span class=\"hljs-number\">4</span>) + (<span class=\"hljs-number\">5</span> * (y / <span class=\"hljs-number\">100</span>)))\n            % <span class=\"hljs-number\">7</span>;\n    <span class=\"hljs-keyword\">if</span> as_string {\n        <span class=\"hljs-title function_ invoke__\">number_to_day</span>(day)\n    } <span class=\"hljs-keyword\">else</span> {\n        day.<span class=\"hljs-title function_ invoke__\">to_string</span>()\n    }\n    <span class=\"hljs-comment\">/* Note that the day follows the following guidelines:\n    0 = Saturday\n    1 = Sunday\n    2 = Monday\n    3 = Tuesday\n    4 = Wednesday\n    5 = Thursday\n    6 = Friday\n    */</span>\n}\n\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">number_to_day</span>(number: <span class=\"hljs-type\">i32</span>) <span class=\"hljs-punctuation\">-&gt;</span> <span class=\"hljs-type\">String</span> {\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">days</span> = [\n        <span class=\"hljs-string\">&quot;Saturday&quot;</span>,\n        <span class=\"hljs-string\">&quot;Sunday&quot;</span>,\n        <span class=\"hljs-string\">&quot;Monday&quot;</span>,\n        <span class=\"hljs-string\">&quot;Tuesday&quot;</span>,\n        <span class=\"hljs-string\">&quot;Wednesday&quot;</span>,\n        <span class=\"hljs-string\">&quot;Thursday&quot;</span>,\n        <span class=\"hljs-string\">&quot;Friday&quot;</span>,\n    ];\n    String::<span class=\"hljs-title function_ invoke__\">from</span>(days[number <span class=\"hljs-keyword\">as</span> <span class=\"hljs-type\">usize</span>])\n}\n\n<span class=\"hljs-meta\">#[cfg(test)]</span>\n<span class=\"hljs-keyword\">mod</span> tests {\n    <span class=\"hljs-keyword\">use</span> super::*;\n    <span class=\"hljs-meta\">#[test]</span>\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">it_works</span>() {\n        <span class=\"hljs-built_in\">assert_eq!</span>(<span class=\"hljs-title function_ invoke__\">zellers_congruence_algorithm</span>(<span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2013</span>, <span class=\"hljs-literal\">false</span>), <span class=\"hljs-string\">&quot;6&quot;</span>);\n        <span class=\"hljs-built_in\">assert_eq!</span>(<span class=\"hljs-title function_ invoke__\">zellers_congruence_algorithm</span>(<span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2013</span>, <span class=\"hljs-literal\">true</span>), <span class=\"hljs-string\">&quot;Friday&quot;</span>);\n        <span class=\"hljs-built_in\">assert_eq!</span>(<span class=\"hljs-title function_ invoke__\">zellers_congruence_algorithm</span>(<span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2022</span>, <span class=\"hljs-literal\">false</span>), <span class=\"hljs-string\">&quot;0&quot;</span>);\n        <span class=\"hljs-built_in\">assert_eq!</span>(<span class=\"hljs-title function_ invoke__\">zellers_congruence_algorithm</span>(<span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2022</span>, <span class=\"hljs-literal\">true</span>), <span class=\"hljs-string\">&quot;Saturday&quot;</span>);\n        <span class=\"hljs-built_in\">assert_eq!</span>(<span class=\"hljs-title function_ invoke__\">zellers_congruence_algorithm</span>(<span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">1978</span>, <span class=\"hljs-literal\">false</span>), <span class=\"hljs-string\">&quot;5&quot;</span>);\n        <span class=\"hljs-built_in\">assert_eq!</span>(<span class=\"hljs-title function_ invoke__\">zellers_congruence_algorithm</span>(<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">2021</span>, <span class=\"hljs-literal\">false</span>), <span class=\"hljs-string\">&quot;3&quot;</span>);\n    }\n}\n"
    }
  },
  "contributors": [
    {
      "name": "pwygab",
      "email": "88221256+merelymyself@users.noreply.github.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}